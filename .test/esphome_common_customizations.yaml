---
##### Customizations from Wiki #####
api:
  # Encrypt the communication between ESPHome and Home Assistant
  encryption:
    key: !secret api_encryption_key
  # Reboot if HA is not connected for 15 minutes
  reboot_timeout: 15min

binary_sensor:
  # Is display awake?
  - name: ${device_name} Display state
    id: display_state
    platform: template
    lambda: |-
      return (current_page_id != ${PAGE_ID_SCREENSAVER});

button:
  # Adds a button to put the panel to sleep
  - name: ${device_name} Sleep
    id: force_sleep
    platform: template
    icon: mdi:sleep
    on_press:
      then:
        - lambda: |-
            ESP_LOGI("button.force_sleep.on_press", "Button Sleep pressed");
            goto_page_id->execute(${PAGE_ID_SCREENSAVER}, false);

  # Adds a button to wake-up the panel (similar to the existing service)
  - name: ${device_name} Wake-up
    id: force_wake_up
    platform: template
    icon: mdi:alarm
    on_press:
      then:
        - lambda: |-
            ESP_LOGI("button.force_wake_up.on_press", "Button Wake-up pressed");
            if (current_page_id == ${PAGE_ID_SCREENSAVER})
              goto_page_id->execute(get_page_id(id(wakeup_page_name).state.c_str()), true);

# Add custom presets to your climate (heat in this example)
climate:
  - id: !extend thermostat_embedded
    heat_deadband: 0.3
    heat_overrun: 0.0
    default_preset: "Home"
    preset:
      - name: "Off"
        default_target_temperature_low: ${temp_min} ${temp_units}
        mode: "off"
      - name: Home
        default_target_temperature_low: 21 ${temp_units}
        mode: "heat"
      - name: Away
        default_target_temperature_low: 16.5 ${temp_units}
        mode: "heat"
      - name: Sleep
        default_target_temperature_low: 17.5 ${temp_units}
        mode: "heat"

esphome:
  # change OTA password, remove after flashing
  on_boot:
    - priority: 601.0
      then:
        - lambda: |-
            id(ota_std).set_auth_password("New password");
  # Limit the amount of resources used for compiling
  compile_process_limit: 1

logger:
  # Enable hardware UART serial logging
  baud_rate: 115200

ota:
  # change OTA password, remove after flashing
  - id: !extend ota_std
    password: !secret wifi_password

time:
  - id: !extend time_provider
    timezone: "America/Cancun"
    # Use my own local network time server
    platform: sntp
    servers:
      - !secret mysntpserver
      - europe.pool.ntp.org
      - 0.pool.ntp.org
    # Scheduled relay
    on_time:
      - hours: 7
        minutes: 30
        seconds: 0
        then:
          - switch.turn_on: relay_1
      - hours: 12
        minutes: 15
        seconds: 0
        then:
          - switch.turn_off: relay_1
      - hours: 19
        minutes: 30
        seconds: 0
        then:
          - switch.turn_on: relay_1
      - hours: 23
        minutes: 30
        seconds: 0
        then:
          - switch.turn_off: relay_1
      # Scheduled climate
      - hours: 7
        minutes: 0
        seconds: 0
        then:
          - climate.control:
              id: thermostat_embedded
              mode: auto
              target_temperature: 22°C
      - hours: 19
        minutes: 0
        seconds: 0
        then:
          - climate.control:
              id: thermostat_embedded
              mode: auto
              target_temperature: 20°C
      - hours: 23
        minutes: 0
        seconds: 0
        then:
          - climate.control:
              id: thermostat_embedded
              mode: auto
              target_temperature: 18°C

web_server:
  # Custom web server credentials
  auth:
    username: !secret web_server_username
    password: !secret web_server_password

wifi:
  networks:
    - id: !extend wifi_default
      # Set IP address manually
      manual_ip:
        static_ip: 192.168.0.123
        gateway: 192.168.0.1
        subnet: 255.255.255.0
      # Set dual network
      priority: 10
    - ssid: !secret wifi_ssid_backup
      password: !secret wifi_password_backup
      priority: 0
...
