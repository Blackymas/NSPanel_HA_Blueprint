#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME ADD-ON - Display - Light                                                          #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################
---
substitutions:
  TAG_ADDON_DISPLAY_LIGHT: addon_display_light

esphome:
  platformio_options:
    build_flags:
      - -D NSPANEL_HA_BLUEPRINT_ADDON_DISPLAY_LIGHT

light:
  # Add the display as a light in Home Assistant
  - id: display_light
    name: Display
    icon: mdi:tablet-dashboard
    platform: monochromatic
    output: display_output
    default_transition_length: 0s
    on_turn_on:
      then:
        - lambda: |-
            ESP_LOGI("${TAG_ADDON_DISPLAY_LIGHT}", "Display: On");
            if (current_page_id == ${PAGE_ID_SCREENSAVER})
              goto_page_id->execute(get_page_id(wakeup_page_name->state.c_str()), true);
    on_turn_off:
      then:
        - lambda: |-
            ESP_LOGI("${TAG_ADDON_DISPLAY_LIGHT}", "Display: Off");
            goto_page_id->execute(${PAGE_ID_SCREENSAVER}, false);

logger:
  logs:
    light: INFO
    output: INFO

output:
  # Output required by `display_light` to send the commands to Nextion
  - id: display_output
    platform: template
    type: float
    write_action:
      then:
        - script.execute:
            id: set_brightness
            brightness: !lambda |-
              return int(round(display_light->current_values.is_on() ?
                        (display_light->current_values.get_brightness() * 100.0f) : 0.0));

script:
  - id: !extend page_changed
    then:
      - if:  # Update the display light entity
          condition:
            - light.is_on: display_light
            - text_sensor.state:
                id: current_page
                state: screensaver
          then:
            light.turn_off: display_light
          else:
            - if:
                condition:
                  - light.is_off: display_light
                  - not:
                      - text_sensor.state:
                          id: current_page
                          state: screensaver
                then:
                  - light.turn_on: display_light

  - id: !extend set_brightness
    then:
      - if:
          condition:
            - lambda: |-
                return (brightness != int(round(display_light->current_values.is_on() ?
                                          (display_light->current_values.get_brightness() * 100.0f)
                                          : 0.0)));
          then:
            - if:
                condition:
                  - not:
                      - text_sensor.state:
                          id: current_page
                          state: screensaver
                  - lambda: return brightness > 0;
                then:
                  - light.turn_on:
                      id: display_light
                      brightness: !lambda return (brightness / 100.0f);
                else:
                  - if:
                      condition:
                        - light.is_on: display_light
                      then:
                        - light.turn_off: display_light
...
