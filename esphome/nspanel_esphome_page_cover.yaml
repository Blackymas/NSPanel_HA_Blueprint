#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME Page cover                                                                        #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################

---
substitutions:
  BOOT_STEP_PAGE_COVER: 14
  PAGE_COVER_ID: 11
  TAG_PAGE_COVER: nspanel.page.cover

esphome:
  platformio_options:
    build_flags:
      - -D NSPANEL_HA_BLUEPRINT_PAGE_COVER

script:
  - id: !extend event_from_display  # Defined by hw_display
    then:
      - lambda: |-
          if (params[0] == "cover") {
            // CSV Format: cover,<key>[,<value>]
            // params[0]=page, params[1]=key, params[2]=value (optional)

            const std::string& key = params[1];
            ESP_LOGV("${TAG_PAGE_COVER}", "Cover control: key=%s", key.c_str());

            if (key == "position") {
              if (params_count != 3) {
                ESP_LOGW("${TAG_PAGE_COVER}", "Bad params");
                return;
              }

              const std::string& value = params[2];
              ESP_LOGV("${TAG_PAGE_COVER}", "Setting position: %s", value.c_str());

              fire_ha_event("action_call", {
                {"action", "cover.set_cover_position"},
                {"key", key.c_str()},
                {"value", value.c_str()},
                {"entity", detailed_entity->state.c_str()}
              });
            } else {
              ESP_LOGV("${TAG_PAGE_COVER}", "Executing action: %s", key.c_str());
              fire_ha_event("action_call", {
                {"action", ("cover." + key).c_str()},
                {"entity", detailed_entity->state.c_str()}
              });
            } // endif key == "position"
          } // endif page == "cover"

  - id: !extend page_change
    then:
      - lambda: if (new_page_id == ${PAGE_COVER_ID}) page_cover->execute();

  - id: page_cover
    mode: single
    then:  # There's nothing here so far

  - id: !extend stop_page_constructors
    then:
      - lambda: page_cover->stop();
...
