#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME CORE - Page Home                                                                  #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################

---
substitutions:
  BOOT_STEP_PAGE_HOME: '17'
  PAGE_ID_HOME: '1'
  TAG_CORE_PAGE_HOME: core_page_home

esphome:
  platformio_options:
    build_flags:
      - -D NSPANEL_HA_BLUEPRINT_CORE_PAGE_HOME

globals:
  ##### Date/time formats #####
  - id: home_date_color
    type: uint16_t
    restore_value: true
    initial_value: '65535'
  - id: mui_time_format
    type: std::string
    restore_value: true
    max_restore_data_length: 20
    initial_value: '"%H:%M"'
  - id: home_time_color
    type: uint16_t
    restore_value: true
    initial_value: '65535'
  - id: mui_meridiem_am
    type: std::string
    restore_value: true
    max_restore_data_length: 5
    initial_value: '"AM"'
  - id: mui_meridiem_pm
    type: std::string
    restore_value: true
    max_restore_data_length: 5
    initial_value: '"PM"'

  - id: home_time
    type: DisplayComponent*
    restore_value: 'false'
  - id: home_meridiem
    type: DisplayComponent*
    restore_value: 'false'

script:
  - id: !extend boot_initialize
    then:
      - lambda: |-
          id(home_time) = get_component(${PAGE_ID_HOME}, "time");
          id(home_time)->global = true;
          id(home_meridiem) = get_component(${PAGE_ID_HOME}, "meridiem");
          id(home_meridiem)->global = false;

  - id: !extend boot_package_register
    then:
      - lambda: boot_package_register_add->execute(${BOOT_STEP_PAGE_HOME}, "PAGE_HOME", "Page Home");

  - id: !extend boot_sequence
    then:
      - if:
          condition:
            - lambda: return current_page_id == ${PAGE_ID_BOOT};
            - lambda: return wakeup_page_name->state == "home";
          then:
            - wait_until:
                condition:
                  - lambda: return id(display_mode) > 0;
                timeout: 180s
            - lambda: |-
                ESP_LOGI("${TAG_CORE_PAGE_HOME}", "Go to Home");
                goto_page_id->execute(${PAGE_ID_HOME}, true);
                set_variable_value->execute("wakeup_page_id", ${PAGE_ID_HOME});

  - id: !extend display_component_action  # Defined by nspanel_esphome_core_hw_display.yaml
    then:
      - lambda: |-
          if (page_id == ${PAGE_ID_HOME}) {
            DisplayComponent* display_component = get_component(page_id, component.c_str());
            display_component->global = true;
            if (id(display_mode) == 3  and (component == "left_bt_text" or component == "right_bt_text"))
              display_component_update_visibility->execute(display_component, false);
          }

  - id: !extend page_changed
    then:
      - lambda: |-
          if (current_page_id == ${PAGE_ID_HOME})
            page_home->execute();

  - id: !extend page_changed_rendering_components  # Defined by nspanel_esphome_core_hw_display.yaml
    then:
      - lambda: |-
          if (current_page_id == ${PAGE_ID_HOME} and id(display_mode) == 3) {
            display_component_update_visibility->execute(get_component(${PAGE_ID_HOME}, "left_bt_text"), false);
            display_component_update_visibility->execute(get_component(${PAGE_ID_HOME}, "right_bt_text"), false);
          }

  - id: page_home
    mode: restart
    then:
      - script.execute: refresh_datetime
      # Extended by:
      #   - nspanel_esphome_core_hw_relays.yaml
      #   - nspanel_esphome_core_hw_wifi.yaml
      #   - nspanel_esphome_core_page_entities.yaml
      #   - nspanel_esphome_core_page_notification.yaml
      #   - nspanel_esphome_core_page_qrcode.yaml
      #   - nspanel_esphome_core_page_weather.yaml

  - id: !extend refresh_datetime  # Defined by nspanel_esphome_core_datetime.yaml
    mode: restart
    then:
      - lambda: |-
          std::string time_format_str = process_time_format(id(mui_time_format).c_str(), id(time_provider).now().hour,
                                                            id(mui_meridiem_am).c_str(), id(mui_meridiem_pm).c_str());
          std::string meridiem_text = (id(time_provider).now().hour<12) ? id(mui_meridiem_am) : id(mui_meridiem_pm);
          display_component_update_text->execute(id(home_meridiem),
                                      (time_format_str.find("%p") != std::string::npos) ? meridiem_text.c_str() : " ");
          display_component_update_text->execute(id(home_time),
                                      id(time_provider).now().strftime(time_format_str).c_str());

  - id: !extend set_var_int
    then:
      - lambda: |-
          if (component == "weather_pic" and val>=1 and val<=15)
            disp1->set_component_pic("home.weather", static_cast<uint8_t>(val));

  - id: !extend stop_all
    then:
      - lambda: |-
          page_home->stop();
...
