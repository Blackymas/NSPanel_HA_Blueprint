#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME CORE - Page keyb_num                                                              #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################

---
substitutions:
  BOOT_STEP_PAGE_BOOT: '29'
  PAGE_ID_BOOT: '0'

display:
  - id: !extend disp1
    on_setup:
      then:
        - script.wait: scan_baud_rate
        - lambda: |-
            page_changed->execute(${PAGE_ID_BOOT});

esphome:
  platformio_options:
    build_flags:
      - -D NSPANEL_HA_BLUEPRINT_CORE_PAGE_BOOT

script:
  - id: !extend boot_package_register
    then:
      - lambda: boot_package_register_add->execute(${BOOT_STEP_PAGE_BOOT}, "PAGE_BOOT", "Page Boot");

  - id: !extend boot_progress
    then:
      - lambda: |-
          set_component_value->execute(${PAGE_ID_BOOT}, "progress", get_boot_progress_percentage());

  - id: page_boot
    mode: restart
    then:
      - lambda: |-
          page_boot_exit->execute();
          disp1->send_command("esphome=0");
          set_component_text->execute(${PAGE_ID_BOOT}, "esp_version", "FW: ${version}");  // ESPHome version
          #ifdef ARDUINO
          set_component_text->execute(${PAGE_ID_BOOT}, "sys_framework", "Framework: Arduino");
          #else
          set_component_text->execute(${PAGE_ID_BOOT}, "sys_framework", "Framework: ESP-IDF");
          #endif

  - id: page_boot_exit
    mode: restart
    then:
      - wait_until:
          condition:
            - lambda: |-
                return current_page_id != ${PAGE_ID_BOOT};
          timeout: 180s
      - lambda: |-
          if (current_page_id == ${PAGE_ID_BOOT}) {
            ESP_LOGI("script", "Jump to wake-up page: %s", wakeup_page_name->state.c_str());
            goto_page_id->execute(get_page_id(wakeup_page_name->state), true);
            set_variable_value->execute("wakeup_page_id", get_page_id(wakeup_page_name->state.c_str()));
          }

  - id: page_boot_log
    mode: queued
    # max_runs: 15
    parameters:
      category: string
      log_message: string
    then:
      - lambda: |-
          ESP_LOGI("script", "%s: %s", category.c_str(), log_message.c_str());
          if (current_page_id == ${PAGE_ID_BOOT}){
            std::string combined_log = category + ": " + log_message;
            if (combined_log.length() > 40) {
              combined_log = combined_log.substr(0, 40);
            }
            disp1->send_command_printf("log_body.txt+=\"%s\\r\"", combined_log.c_str());
            page_boot_log_scroll->execute();
          }

  - id: page_boot_log_scroll
    mode: restart
    then:
      - delay: 1s
      - lambda: |-
          if (current_page_id == ${PAGE_ID_BOOT})
            disp1->send_command("click log_box,1");

  - id: !extend page_changed
    then:
      - lambda: |-
          if (current_page_id == ${PAGE_ID_BOOT})
            page_boot->execute();

  - id: !extend stop_all
    then:
      - lambda: |-
          page_boot->stop();
          page_boot_exit->stop();
          page_boot_log->stop();
          page_boot_log_scroll->stop();
...
