#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME CORE - Base                                                                       #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################

---
substitutions:
  ##############################
  ## Change only in your      ##
  ## local yaml substitutions ##
  ##############################
  project_tag: nspanel_ha_blueprint
  BOOT_STEP_BASE: '0'
  TAG_BASE: nspanel.base
  GPIO_PSRAM_CLK_PIN: '5'
  GPIO_PSRAM_CS_PIN: '18'

esphome:
  platformio_options:
    build_flags:
      # - -Wno-missing-field-initializers
      - -D NSPANEL_HA_BLUEPRINT_CORE_BASE
  min_version: 2025.8.0

external_components:
  - source:
      type: git
      url: https://github.com/Blackymas/NSPanel_HA_Blueprint
      ref: v${version}
    refresh: 300s
    components:
      - nspanel_ha_blueprint

nspanel_ha_blueprint:  # Adds custom library for NSPanel HA Blueprint project
  disable_bootloader_logs: true

script:
  - id: dump_config
    mode: restart
    then:
      - delay: 10s

  - id: report_device_not_available
    mode: single
    parameters:
      request: string
    then:
      - lambda: |-
          std::string blocking_flags = "";
          if (is_system_flag_set(system_flags, NSPanelFlag::OTA_IN_PROGRESS)) {
            if (!blocking_flags.empty()) blocking_flags += ", ";
            blocking_flags += "OTA";
          }  // if OTA in progress
          if (is_system_flag_set(system_flags, NSPanelFlag::TFT_UPLOAD_ACTIVE)) {
            if (!blocking_flags.empty()) blocking_flags += ", ";
            blocking_flags += "TFT_UPLOAD";
          }  // if TFT upload active
          if (is_system_flag_set(system_flags, NSPanelFlag::SAFE_MODE_ACTIVE)) {
            if (!blocking_flags.empty()) blocking_flags += ", ";
            blocking_flags += "SAFE_MODE";
          }  // if safe mode active

          ESP_LOGW("${TAG_BASE}", "Device not available - cannot handle '%s' request (blocking: %s)",
                                  request.c_str(), blocking_flags.c_str());

  - id: stop_all
    mode: restart
    then:
      - script.stop: dump_config
      - script.stop: report_device_not_available
...
