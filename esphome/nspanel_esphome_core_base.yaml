#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME CORE - Base                                                                       #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################

---
substitutions:
  ##############################
  ## Change only in your      ##
  ## local yaml substitutions ##
  ota_password: ${wifi_password}
  project_tag: nspanel_ha_blueprint
  ##############################
  BOOT_STEP_BASE: '0'
  TAG_BASE: nspanel_ha_blueprint.base

button:
  - id: nspanel_factory_reset  # Factory Reset button - Used to clean values from flash
    name: Factory reset
    platform: factory_reset
    internal: false
    disabled_by_default: true
    icon: mdi:restart-alert

  - id: restart_nspanel  # Reboot ESP32
    name: Restart
    platform: restart

esp32:
  board: esp32dev
  flash_size: 4MB
  framework:
    type: esp-idf

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  comment: NSPanel HA Blueprint
  project:
    name: Blackymas.NSPanel_HA_Blueprint
    version: ${version}
  platformio_options:
    build_flags:
      - -Wno-missing-field-initializers
      - -D NSPANEL_HA_BLUEPRINT_CORE_BASE
  min_version: 2025.7.0b1

external_components:
  - source:
      type: git
      url: https://github.com/Blackymas/NSPanel_HA_Blueprint
      ref: v${version}
    components:
      - nspanel_ha_blueprint

logger:
  id: logger_std
  baud_rate: 0  # Disable serial logger to save some memory and CPU
  level: DEBUG

nspanel_ha_blueprint:  # Adds custom library for NSPanel HA Blueprint project

ota:
  - id: ota_std
    platform: esphome
    password: ${ota_password}

safe_mode:
  on_safe_mode:
    then:
      - lambda: nspanel_ha_blueprint::is_safe_mode = true;

script:
  - id: !extend boot_package_register
    then:
      - lambda: boot_package_register_add->execute(${BOOT_STEP_BASE}, "BASE", "Base");

  - id: !extend boot_sequence
    then:
      - lambda: |-
          boot_progress->execute(${BOOT_STEP_BASE});

  - id: dump_config
    mode: restart
    then:
      - delay: 90s
      - script.execute: dump_config_packages

  - id: dump_config_packages
    mode: restart
    then:
      - lambda: |-
          ESP_LOGCONFIG("${TAG_BASE}", "Packages:");
      # Extended by:
      #   - nspanel_esphome_advanced.yaml
      #   - nspanel_esphome_addon_bluetooth_proxy.yaml
      #   - nspanel_esphome_addon_climate_base.yaml
      #   - nspanel_esphome_addon_climate_cool.yaml
      #   - nspanel_esphome_addon_climate_dual.yaml
      #   - nspanel_esphome_addon_climate_heat.yaml
      #   - nspanel_esphome_addon_cover.yaml
      #   - nspanel_esphome_addon_upload_tft.yaml
      #   - nspanel_esphome_prebuild.yaml
      #   - wall_display.yaml

  - id: stop_all
    mode: restart
    then:
      - lambda: |-
          dump_config->stop();
          time_watchdog->stop();

  - id: time_watchdog  # The name `watchdog` is reserved
    mode: restart
    then:
      - lambda: |-
          if (!api_server->is_connected() and !is_page_in_group(NON_API_ID_PAGE_MASK)) {
            ESP_LOGW("${TAG_BASE}", "API disconnected - fallback to Home");
            goto_page_id->execute(${PAGE_ID_HOME}, false);
            reset_boot_steps();
          }
      # Extended by:
      #   - nspanel_esphome_core_hw_display_timers.yaml
      #   - nspanel_esphome_core_hw_wifi.yaml

text_sensor:
  - id: detailed_entity  # Entity Id of the entity displayed on the detailed pages
    name: Detailed Entity
    platform: template
    icon: mdi:tablet-dashboard
    internal: false
    disabled_by_default: false
    on_value:
      then:
        - if:
            condition:
              - lambda: return not x.empty();
            then:
              - lambda: |-
                  ESP_LOGI("${TAG_BASE}", "Entity: %s", x.c_str());

time:
  - id: !extend time_provider
    on_time:
      - seconds: 30  # Watchdog - Every minute, at second 30
        then:
          - script.execute: time_watchdog

      - minutes: /10
        seconds: 5
        then:
          - script.execute: dump_config
...
