#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME CORE - Page Screensaver                                                           #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################

---
substitutions:
  BOOT_STEP_PAGE_SCREENSAVER: '23'
  PAGE_ID_SCREENSAVER: '9'

esphome:
  platformio_options:
    build_flags:
      - -D NSPANEL_HA_BLUEPRINT_CORE_PAGE_SCREENSAVER

globals:
  ##### Screensaver #####
  - id: screensaver_display_time
    type: bool
    restore_value: true
    initial_value: 'false'
  - id: screensaver_display_time_format
    type: std::string
    restore_value: true
    max_restore_data_length: 15
    initial_value: '""'
  - id: screensaver_display_time_font
    type: uint8_t
    restore_value: true
    initial_value: '6'
  - id: screensaver_display_time_color
    type: uint16_t
    restore_value: true
    initial_value: '16904'
  - id: screensaver_text
    type: DisplayComponent*
    restore_value: false

script:
  - id: !extend boot_initialize
    then:
      - lambda: |-
          id(screensaver_text) = get_component(${PAGE_ID_SCREENSAVER}, "text");
          if (id(screensaver_text)) {
            id(screensaver_text)->color = id(screensaver_display_time_color);
            id(screensaver_text)->font = id(screensaver_display_time_font);
            id(screensaver_text)->visible = id(screensaver_display_time);
          }

  - id: !extend boot_package_register
    then:
      - lambda: boot_package_register_add->execute(${BOOT_STEP_PAGE_SCREENSAVER},
                                                    "PAGE_SCREENSAVER", "Page Screensaver");

  - id: !extend display_component_action  # Defined by nspanel_esphome_core_hw_display.yaml
    then:
      - lambda: |-
          if (page_id == ${PAGE_ID_SCREENSAVER} and component == "text") {
            id(screensaver_display_time) = visible;
            id(screensaver_display_time_format) = txt;
            id(screensaver_display_time_font) = font;
            id(screensaver_display_time_color) = color565(color);
            if (current_page_id == ${PAGE_ID_SCREENSAVER})
              refresh_datetime->execute();
          }

  - id: !extend page_changed
    then:
      - lambda: |-
          if (current_page_id == ${PAGE_ID_SCREENSAVER})
            page_screensaver->execute();

  - id: page_screensaver
    mode: restart
    then:
      - lambda: |-
          refresh_datetime->execute();
          disp1->set_backlight_brightness(display_sleep_brightness->state / 100.0f);
      - delay: 5s
      - lambda: disp1->set_backlight_brightness(display_sleep_brightness->state / 100.0f);

  - id: !extend refresh_datetime  # Defined by nspanel_esphome_core_datetime.yaml
    mode: restart
    then:
      - lambda: |-
          if (id(screensaver_display_time)) {
            std::string time_format_str = process_time_format(
                          (id(screensaver_display_time_format) == "same" or id(screensaver_display_time_format).empty())
                                            ? id(mui_time_format).c_str() : id(screensaver_display_time_format).c_str(),
                          id(time_provider).now().hour,
                          id(mui_meridiem_am).c_str(), id(mui_meridiem_pm).c_str());
            std::string meridiem_text = (id(time_provider).now().hour<12) ? id(mui_meridiem_am) : id(mui_meridiem_pm);
            if (time_format_str.find("%p") != std::string::npos)
              time_format_str.replace(time_format_str.find("%p"), sizeof("%p")-1, meridiem_text.c_str());
            if (id(screensaver_text)) {
              display_component_update_text->execute(id(screensaver_text),
                                                      id(time_provider).now().strftime(time_format_str).c_str());
            }
          }

  - id: !extend stop_all
    then:
      - script.stop: page_screensaver

time:
  - id: !extend time_provider
    on_time:
      - seconds: ${BOOT_STEP_PAGE_SCREENSAVER}  # Every minute
        then:
          - lambda: disp1->set_backlight_brightness(display_sleep_brightness->state / 100.0f);
...
