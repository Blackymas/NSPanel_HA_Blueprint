#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHome Add-on for BLE Tracker                                                      #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################
##### ATTENTION: This will add climate elements to the core system and requires the core part.  #####
#####################################################################################################
---
substitutions:
  TAG_ADDON_BLE_TRACKER: addon_ble_tracker
api:
  on_client_connected:
    - esp32_ble_tracker.start_scan:
        continuous: true
  on_client_disconnected:
    - if:
        condition:
          - not:
              - api.connected:
        then:
          - esp32_ble_tracker.stop_scan:

esphome:
  platformio_options:
    build_flags:
      - -D NSPANEL_HA_BLUEPRINT_ADDON_BLE_TRACKER

esp32_ble:
  id: ble_component

# Enable Bluetooth tracker
esp32_ble_tracker:
  id: ble_tracker
  scan_parameters:
    continuous: false

script:
  - id: !extend dump_config
    then:
      - lambda: |-
          // Check if this is installed with Arduino
          #ifdef USE_ARDUINO
            #error "Invalid settings for add-on BLE Tracker. \
                    Arduino framework is not supported when using Bluetooth in this project."
          #endif
          ESP_LOGI("${TAG_ADDON_BLE_TRACKER}", "Add-on BLE Tracker");

  - id: !extend dump_config_packages  # Defined by nspanel_esphome_core_base.yaml
    then:
      - lambda: |-
          ESP_LOGI("${TAG_ADDON_BLE_TRACKER}", "  - Add-on - BLE Tracker");

  - id: !extend page_home
    then:
      - script.execute:
          id: set_component_text
          page_id: ${PAGE_ID_HOME}
          component: bt_icon
          text: "\uE0AE"

# Set Wi-Fi power save mode to "LIGHT" as required for Bluetooth on ESP32
wifi:
  power_save_mode: LIGHT
...
