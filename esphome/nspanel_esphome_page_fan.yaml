#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME Page fan                                                                          #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################

---
substitutions:
  BOOT_STEP_PAGE_FAN: '16'
  PAGE_FAN_ID: '22'
  TAG_PAGE_FAN: nspanel.page.fan

display:
  - id: !extend disp1
    on_touch:
      then:
        - if:
            condition:
              - lambda: return is_device_ready_for_tasks();
              - lambda: return (!touch_event);  // Only act with release
              - lambda: return (page_id == 22);  // Page fan
            then:
              - if:
                  condition:
                    - lambda: return (component_id == 13);  // bt_oscillate
                  then:
                    - script.execute:
                        id: ha_call_action
                        service: "fan.oscillate"
                        key: oscillating
                        value: toggle
              - if:
                  condition:
                    - lambda: return (component_id == 14);  // power_button
                  then:
                    - script.execute:
                        id: ha_call_action
                        service: "fan.toggle"
                        key: ""
                        value: ""

esphome:
  platformio_options:
    build_flags:
      - -D NSPANEL_HA_BLUEPRINT_PAGE_FAN

script:
  - id: !extend event_from_display
    then:
      - lambda: |-
          if (page == "fan") {
            const std::string key = json["key"];
            const std::string value = json["value"];
            if (key == "stop" or value == "0")
              ha_call_action->execute("fan.turn_off", "", "");
            else
              ha_call_action->execute("fan.turn_on", key.c_str(), value.c_str());
          }

  - id: !extend page_change
    then:
      - if:
          condition:
            - lambda: return new_page_id == ${PAGE_FAN_ID};
          then:
            - script.execute: page_fan

  - id: page_fan
    mode: single
    then:  # There's nothing here so far

...
