#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME - Page keyb_num                                                                   #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################
---
substitutions:
  BOOT_STEP_PAGE_KEYBOARD_NUM: 18
  PAGE_KEYB_NUM_ID: 24
  TAG_PAGE_KEYB_NUM: nspanel.page.keyb_num

esphome:
  platformio_options:
    build_flags:
      - -D NSPANEL_HA_BLUEPRINT_PAGE_KEYB_NUM

script:
  - id: !extend event_from_display
    then:
      - lambda: |-
          if (page == "keyb_num") {
            if (json["base_domain"].isNull()) {
              ESP_LOGV("${TAG_PAGE_KEYB_NUM}", "Missing keyb_num base_domain field");
              return;
            } // endif missing base_domain

            const std::string base_domain = json["base_domain"].as<std::string>();
            ESP_LOGV("${TAG_PAGE_KEYB_NUM}", "Keyb_num control: base_domain=%s", base_domain.c_str());

            if (base_domain == "alarm") {
              if (json["key"].isNull() || json["code_format"].isNull() || json["pin"].isNull()) {
                ESP_LOGV("${TAG_PAGE_KEYB_NUM}", "Missing alarm fields (key/code_format/pin)");
                return;
              } // endif missing alarm fields

              const std::string key = json["key"].as<std::string>();
              const std::string code_format = json["code_format"].as<std::string>();
              const std::string pin = json["pin"].as<std::string>();

              ESP_LOGV("${TAG_PAGE_KEYB_NUM}", "Executing alarm action: key=%s, format=%s",
                        key.c_str(), code_format.c_str());
              alarm_control_panel_action->execute(detailed_entity->state.c_str(), key.c_str(),
                                                  code_format.c_str(), pin.c_str());
            } // endif base_domain == "alarm"

            ESP_LOGV("${TAG_PAGE_KEYB_NUM}", "Navigating to page: %s",
                      base_domain.empty() ? "home" : base_domain.c_str());
            goto_page->execute(base_domain.empty() ? ${PAGE_HOME_ID} : get_page_id(base_domain.c_str()));
          } // endif page == "keyb_num"

  - id: !extend page_change
    then:
      - if:
          condition:
            - lambda: return new_page_id == ${PAGE_KEYB_NUM_ID};
          then:
            - script.execute: page_keyb_num

  - id: page_keyb_num
    mode: single
    then:  # There's nothing here so far

  - id: !extend stop_page_constructors
    then:
      - script.stop: page_keyb_num
...
