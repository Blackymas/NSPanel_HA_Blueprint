#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME CORE - HARDWARE - Memory                                                          #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################
---
substitutions:
  ##############################
  ## Change only in your      ##
  ## local yaml substitutions ##
  ##############################
  BOOT_STEP_HW_MEMORY: '6'
  GPIO_PSRAM_CLK_PIN: 5
  GPIO_PSRAM_CS_PIN: 18
  TAG_HW_MEMORY: nspanel.hw.memory

esphome:
  platformio_options:
    build_flags:
      - -D NSPANEL_HA_BLUEPRINT_HW_MEMORY

nspanel_ha_blueprint:
  main_task_stack_size: 16384  # To-do: Review this when PR#10564 gets merged
  psram_clk_pin: ${GPIO_PSRAM_CLK_PIN}
  psram_cs_pin: ${GPIO_PSRAM_CS_PIN}

psram:
  id: ext_ram

script:
  - id: !extend dump_config
    then:
      # Report memory
      - lambda: |-
          #include <esp_heap_caps.h>
          const size_t internal_heap_size = heap_caps_get_total_size(MALLOC_CAP_INTERNAL);
          const size_t internal_heap_size_free = heap_caps_get_free_size(MALLOC_CAP_INTERNAL);
          ESP_LOGCONFIG("${TAG_CORE}", "  Free heap:");

          if (internal_heap_size != 0) {
            ESP_LOGCONFIG("${TAG_CORE}", "    Internal:  %7d bytes (%0.1f%%)", internal_heap_size_free,
                    ((float)internal_heap_size_free / internal_heap_size) * 100.0f);
          } else {
            ESP_LOGCONFIG("${TAG_CORE}", "    Internal:  %7d bytes", internal_heap_size_free);
          }

          #ifdef USE_PSRAM
          const size_t psram_heap_size = heap_caps_get_total_size(MALLOC_CAP_SPIRAM);
          const size_t psram_heap_size_free = heap_caps_get_free_size(MALLOC_CAP_SPIRAM);
          if (psram_heap_size != 0) {
            ESP_LOGCONFIG("${TAG_CORE}", "    PSRAM:     %7d bytes (%0.1f%%)", psram_heap_size_free,
                                                  ((float)psram_heap_size_free / psram_heap_size) * 100.0f);
          } else {
            ESP_LOGCONFIG("${TAG_CORE}", "    PSRAM:     %7d bytes", psram_heap_size_free);
          }
          #endif  // USE_PSRAM

wifi:
  use_psram: true
...
