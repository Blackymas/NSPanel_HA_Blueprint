#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME CORE - Page Fan                                                                   #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################

---
substitutions:
  BOOT_STEP_PAGE_FAN: '16'
  PAGE_ID_FAN: '22'
  TAG_PAGE_FAN: nspanel_ha_blueprint.page.fan

display:
  - id: !extend disp1
    on_touch:
      then:
        - lambda: |-
            if (page_id == 22) {  // Page Fan
              switch (component_id) {
                case 11:  // bt_oscillate
                  if (!touch_event) {  // Release
                    ha_call_action->execute("fan.oscillate", "oscillating", "toggle", detailed_entity->state.c_str());
                  }
                  break;
                case 12:  // power_button
                  if (!touch_event) {  // Release
                    ha_call_action->execute("fan.toggle", "", "", detailed_entity->state.c_str());
                  }
                  break;
              }
            }

esphome:
  platformio_options:
    build_flags:
      - -D NSPANEL_HA_BLUEPRINT_STANDARD_PAGE_FAN

script:
  - id: !extend boot_package_register
    then:
      - lambda: boot_package_register_add->execute(${BOOT_STEP_PAGE_FAN}, "PAGE_FAN", "Page Fan");

  - id: !extend event_from_display
    then:
      - lambda: |-
          if (page == "fan") {
            const std::string key = json["key"];
            const std::string value = json["value"];
            if (key == "stop" or value == "0")
              ha_call_action->execute("fan.turn_off", "", "", detailed_entity->state.c_str());
            else
              ha_call_action->execute("fan.turn_on", key.c_str(), value.c_str(), detailed_entity->state.c_str());
          }
...
