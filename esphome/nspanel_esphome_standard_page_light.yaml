#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME CORE - Page Light                                                                 #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################

---
substitutions:
  BOOT_STEP_PAGE_LIGHT: '19'
  PAGE_ID_LIGHT: '10'
  TAG_PAGE_LIGHT: nspanel_ha_blueprint.page.light

display:
  - id: !extend disp1
    on_touch:
      then:
        - lambda: |-
            if (page_id == ${PAGE_ID_LIGHT}) {  // Page Light
              switch (component_id) {
                case 30:  // power_button
                  if (!touch_event)  // Release
                    ha_call_action->execute("light.toggle", "", "", detailed_entity->state.c_str());
                  break;
              }
            }

esphome:
  platformio_options:
    build_flags:
      - -D NSPANEL_HA_BLUEPRINT_STANDARD_PAGE_LIGHT

script:
  - id: !extend boot_package_register
    then:
      - lambda: boot_package_register_add->execute(${BOOT_STEP_PAGE_LIGHT}, "PAGE_LIGHT", "Page Light");

  - id: !extend event_from_display
    then:
      - lambda: |-
          if (page == "light") {
            const std::string key = json["key"];
            const std::string component = json["component"];
            if (key == "brightness_pct" or key == "color_temp") {
              const std::string value = json["value"];
              ha_call_action->execute("light.turn_on", key.c_str(), value.c_str(), detailed_entity->state.c_str());
            } else if (component == "rgb_color") {
              JsonArray rgb_color = json["value"];
              // Send event to Home Assistant
              if (rgb_color.size() == 3) {
                esphome::api::CustomAPIDevice ha_event;
                ha_event.fire_homeassistant_event("esphome.nspanel_ha_blueprint", {
                  {"device_name", device_name->state},
                  {"esphome_version", "${version}"},
                  {"type", "action_call"},
                  {"action", "light.turn_on"},
                  {"key", "rgb_color"},
                  {"red",to_string(rgb_color[0].as<int>())},
                  {"green",to_string(rgb_color[1].as<int>())},
                  {"blue",to_string(rgb_color[2].as<int>())},
                  {"entity", detailed_entity->state.c_str()},
                  {"tag", "${TAG_PAGE_LIGHT}"}
                });
              }
            }
          }
...
