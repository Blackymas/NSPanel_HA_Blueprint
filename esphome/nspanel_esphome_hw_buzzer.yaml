#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME - Hardware - Buzzer                                                               #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################

---
substitutions:
  BOOT_STEP_HW_BUZZER: '4'
  GPIO_BUZZER_OUTPUT_PIN: 21
  boot_sound: false
  TAG_HW_BUZZER: nspanel.hw.buzzer
  # RTTTL format: name:d=duration,o=octave,b=tempo:notes
  # d=32 (32nd note), o=5 (octave 5), b=100 (tempo 100)
  tone_boot: "two short:d=4,o=5,b=100:16e6,16e6"
  # tone_volume_change: "scale_up:d=32,o=5,b=100:c,c#,d#,e,f#,g#,a#,b"  # Use "none" to disable sound

api:
  actions:
    - action: rtttl_play  # Plays melodies encoded in RTTTL format, suitable for audio feedback, notifications, or simple tunes.
      variables:
        # The RTTTL string for the melody to be played.
        # It should follow the RTTTL format, including the melody's name,
        # default settings, and a sequence of notes.
        tone: string
      then:
        - lambda: |-
            buzzer->stop();
            ESP_LOGI("${TAG_HW_BUZZER}", "Play tone: '%s'", tone.c_str());
            buzzer->play(tone.c_str());

esphome:
  platformio_options:
    build_flags:
      - -D NSPANEL_HA_BLUEPRINT_HW_BUZZER

output:
  # Buzzer output
  - id: buzzer_out
    platform: ledc
    pin: ${GPIO_BUZZER_OUTPUT_PIN}

rtttl:  # ENABLE RINGTONE MUSIC SUPPORT
  id: buzzer
  output: buzzer_out

script:
  - id: !extend wait_for_page_boot_exit
    then:
      - if:
          condition:
            - lambda: |-
                return ${'true' if boot_sound else 'false'};
            - lambda: return current_page_id != ${PAGE_BOOT_ID};
          then:
            - script.execute:
                id: boot_log
                category: Boot
                log_message: Play boot sound
            - rtttl.play: ${tone_boot}
...
