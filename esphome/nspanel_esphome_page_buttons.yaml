#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME - Page buttons                                                                    #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################

##### External references #####
###############################

---
substitutions:
  BOOT_STEP_PAGE_BUTTONS: 11
  BUTTON_LONG_PRESS_DELAY: 800ms
  PAGE_BUTTONPAGE01_ID: 12
  PAGE_BUTTONPAGE02_ID: 13
  PAGE_BUTTONPAGE03_ID: 14
  PAGE_BUTTONPAGE04_ID: 15
  TAG_PAGE_BUTTONS: nspanel.page.buttons

api:
  actions:
    # Dynamically configures button properties on a specified page,
    # enhancing UI interactivity by allowing updates to button appearance and behavior based on given parameters.
    - action: button
      variables:
        page: string       # Identifier of the page where the button is located.
        id: string         # Unique identifier for the button.
        state: bool        # Determines the button's state, influencing background and other visual aspects.
        icon: string       # Icon codepoint from HASwitchPlate Material Design Icons. Example: "\uE6E8" for mdi:lightbulb-on-outline.
        icon_color: int[]  # RGB color array for the icon.
        icon_font: int     # Nextion font identifier for the icon, default is 8.
        bri: string        # Brightness level or other dynamic info to be displayed close to the icon.
        label: string      # Main text label for the button.
      then:
        - lambda: |-
            ESP_LOGV("${TAG_API}", "Action `button` triggered:");
            ESP_LOGV("${TAG_API}", "  page: %s", page.c_str());
            ESP_LOGV("${TAG_API}", "  id: %s", id.c_str());
            ESP_LOGV("${TAG_API}", "  state: %s", ONOFF(state));
            ESP_LOGV("${TAG_API}", "  icon_color: %" PRIu16, icon_color);
            ESP_LOGV("${TAG_API}", "  icon_font: %i", icon_font);
            ESP_LOGV("${TAG_API}", "  bri: %s", bri.c_str());
            ESP_LOGV("${TAG_API}", "  label: %s", label.c_str());

            if (page != current_page->state) {
              ESP_LOGW("${TAG_API}", "Page '%s' visible while '%s' was expected",
                                      page_names[current_page_id], page.c_str());
              return;
            }

            disp1->set_component_picc((id + "pic").c_str(), state ? 47 : 46);
            disp1->set_component_picc((id + "bri").c_str(), state ? 47 : 46);
            disp1->set_component_picc((id + "text").c_str(), state ? 47 : 46);
            disp1->set_component_picc((id + "icon").c_str(), state ? 47 : 46);
            disp1->set_component_font((id + "icon").c_str(), icon_font);
            disp1->set_component_foreground_color((id + "bri").c_str(), state ? ${COLOR_BLUE_INDIGO} : ${COLOR_WHITE});
            disp1->set_component_foreground_color((id + "text").c_str(), state ? ${COLOR_BLUE_INDIGO} : 65535);
            disp1->set_component_font_color((id + "icon").c_str(), rgbTo565(icon_color));
            disp1->set_component_text((id + "icon").c_str(), icon.c_str());
            feed_wdt_delay(${DELAY_SHORT});

            disp1->set_component_text((id + "text").c_str(),
                                      wrapText(label.c_str(), 10, id(mui_bytes_per_char)).c_str());
            disp1->set_component_text((id + "bri").c_str(), (strcmp(bri.c_str(), "0") == 0) ? " " : bri.c_str());

            disp1->send_command_printf("vis %s,1", (id + "pic").c_str());
            disp1->send_command_printf("vis %s,1", (id + "icon").c_str());
            disp1->send_command_printf("vis %s,1", (id + "text").c_str());
            disp1->send_command_printf("vis %s,1", (id + "bri").c_str());
            disp1->send_command_printf("vis %s,1", id.c_str());

esphome:
  platformio_options:
    build_flags:
      - -D NSPANEL_HA_BLUEPRINT_PAGE_BUTTONS

script:
  - id: page_buttonpage
    mode: restart
    parameters:
      page_number: uint
    then:  # There's nothing here so far
      - lambda: |-
          ESP_LOGV("${TAG_PAGE_BUTTONS}", "This page is constructed by the Blueprint");
  - id: page_buttonpage01
    mode: single
    then:
      - script.execute:
          id: page_buttonpage
          page_number: 1
  - id: page_buttonpage02
    mode: single
    then:
      - script.execute:
          id: page_buttonpage
          page_number: 2
  - id: page_buttonpage03
    mode: single
    then:
      - script.execute:
          id: page_buttonpage
          page_number: 3
  - id: page_buttonpage04
    mode: single
    then:
      - script.execute:
          id: page_buttonpage
          page_number: 4

  - id: !extend page_change
    then:
      - lambda: |-
          if (new_page_id == ${PAGE_BUTTONPAGE01_ID}) page_buttonpage01->execute();
          else if (new_page_id == ${PAGE_BUTTONPAGE02_ID}) page_buttonpage02->execute();
          else if (new_page_id == ${PAGE_BUTTONPAGE03_ID}) page_buttonpage03->execute();
          else if (new_page_id == ${PAGE_BUTTONPAGE04_ID}) page_buttonpage04->execute();

  - id: !extend stop_page_constructors
    then:
      - lambda: |-
          page_buttonpage->stop();
          page_buttonpage01->stop();
          page_buttonpage02->stop();
          page_buttonpage03->stop();
          page_buttonpage04->stop();
...
