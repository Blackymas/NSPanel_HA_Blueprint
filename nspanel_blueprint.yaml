#######################################################################################################
##### NSPANEL Blueprint created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### Blueprint                                                                                   #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available.   #####
##### For normal use with the Blueprint, no changes are necessary.                                #####
#######################################################################################################
---
blueprint:
  name: NSPanel Configuration
  description: >
    # NSPanel Configuration via Blueprint: Complete UI-Based Setup

    **Version**: v4.3.29


    This project enables comprehensive configuration of your NSPanel through a Blueprint featuring a user interface.


    **Documentation and Installation Video**:
    For detailed guidance on setup and usage, visit [NSPanel Configuration, Setup and HowTo](https://github.com/Blackymas/NSPanel_HA_Blueprint/blob/main/docs/README.md).

  source_url: https://github.com/Blackymas/NSPanel_HA_Blueprint/blob/main/nspanel_blueprint.yaml
  domain: automation
  homeassistant:
    min_version: 2024.6.0

  input:
    nspanel_name:  # This key was kept with this name to support inputs from legacy versions where the panel name was used
      name: NSPanel device (REQUIRED)
      description: "Please select the ESPHome device related to the NSPanel to be controlled by this automation."
      default: []
      selector:
        device:
          multiple: false
          filter:
            - integration: esphome
              model: esp32dev
            - integration: esphome
              model: NSPanel_HA_Blueprint
            - integration: esphome
              model: Wall_Display
    localization:
      name: Localization (optional)
      icon: mdi:earth
      description: Select the language and date/time formats to be displayed in your panel.
      collapsed: true
      input:
        language:
          name: Language
          description: "Select the language for your NSPanel."
          default: en
          selector:
            language:
              languages: [en, bg, hr, ca, cs, da, nl, et, fi, fr, de, el, he, hu, id, it, ja, ko, lv, lt, nb, pl, pt, ro, ru, sk, sl, es, sv, tr, uk, zh-tw]
        date_format:
          name: Date Format
          description: "Select the format for date to display."
          default: '%A, %d.%m'
          selector:
            select:
              multiple: false
              custom_value: true
              options:
                - label: 'Weekday, DD.MM (ex. "Friday, 22.03")'
                  value: '%A, %d.%m'
                - label: 'Weekday, DD/MM (ex. "Friday, 22/03")'
                  value: '%A, %d/%m'
                - label: 'Weekday, D/M (ex. "Friday, 22/3")'
                  value: '%A, %-d/%-m'
                - label: 'Weekday, M/D (ex. "Friday, 3/22")'
                  value: '%A, %-m/%-d'
                - label: 'Weekday D.M (ex. "Friday 22.3")'
                  value: '%A %-d.%-m'
                - label: Weekday D-M (ex. "Friday 22-3")
                  value: '%A %-d-%-m'
                - label: Weekday M-D (ex. "Friday 3-22")
                  value: '%A %-m-%-d'
        time_format:
          name: Time Format
          description: "Choose how time should be displayed."
          default: '%H:%M'
          selector:
            select:
              multiple: false
              custom_value: true
              options:
                - label: 'HH:MM (ex. 08:30 and 20:30)'
                  value: '%H:%M'
                - label: 'H:MM AM/PM (ex. 8:30AM and 8:30PM)'
                  value: '%-I:%M %p'
                - label: 'H:MM 24H (ex. 8:30 and 20:30)'
                  value: '%-H:%M'
                - label: 'H.MM 24H (ex. 8.30 and 20.30)'
                  value: '%-H.%M'
        timezone:
          name: Timezone
          description: "Choose your timezone."
          default: ""
          selector:
            select:
              multiple: false
              custom_value: true
              options:
                - 'Africa/Abidjan (GMT0)'
                - 'Africa/Accra (GMT0)'
                - 'Africa/Addis_Ababa (EAT-3)'
                - 'Africa/Algiers (CET-1)'
                - 'Africa/Asmara (EAT-3)'
                - 'Africa/Bamako (GMT0)'
                - 'Africa/Bangui (WAT-1)'
                - 'Africa/Banjul (GMT0)'
                - 'Africa/Bissau (GMT0)'
                - 'Africa/Blantyre (CAT-2)'
                - 'Africa/Brazzaville (WAT-1)'
                - 'Africa/Bujumbura (CAT-2)'
                - 'Africa/Cairo (EET-2EEST,M4.5.5/0,M10.5.4/24)'
                - 'Africa/Casablanca (<+01>-1)'
                - 'Africa/Ceuta (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Africa/Conakry (GMT0)'
                - 'Africa/Dakar (GMT0)'
                - 'Africa/Dar_es_Salaam (EAT-3)'
                - 'Africa/Djibouti (EAT-3)'
                - 'Africa/Douala (WAT-1)'
                - 'Africa/El_Aaiun (<+01>-1)'
                - 'Africa/Freetown (GMT0)'
                - 'Africa/Gaborone (CAT-2)'
                - 'Africa/Harare (CAT-2)'
                - 'Africa/Johannesburg (SAST-2)'
                - 'Africa/Juba (CAT-2)'
                - 'Africa/Kampala (EAT-3)'
                - 'Africa/Khartoum (CAT-2)'
                - 'Africa/Kigali (CAT-2)'
                - 'Africa/Kinshasa (WAT-1)'
                - 'Africa/Lagos (WAT-1)'
                - 'Africa/Libreville (WAT-1)'
                - 'Africa/Lome (GMT0)'
                - 'Africa/Luanda (WAT-1)'
                - 'Africa/Lubumbashi (CAT-2)'
                - 'Africa/Lusaka (CAT-2)'
                - 'Africa/Malabo (WAT-1)'
                - 'Africa/Maputo (CAT-2)'
                - 'Africa/Maseru (SAST-2)'
                - 'Africa/Mbabane (SAST-2)'
                - 'Africa/Mogadishu (EAT-3)'
                - 'Africa/Monrovia (GMT0)'
                - 'Africa/Nairobi (EAT-3)'
                - 'Africa/Ndjamena (WAT-1)'
                - 'Africa/Niamey (WAT-1)'
                - 'Africa/Nouakchott (GMT0)'
                - 'Africa/Ouagadougou (GMT0)'
                - 'Africa/Porto-Novo (WAT-1)'
                - 'Africa/Sao_Tome (GMT0)'
                - 'Africa/Tripoli (EET-2)'
                - 'Africa/Tunis (CET-1)'
                - 'Africa/Windhoek (CAT-2)'
                - 'America/Adak (HST10HDT,M3.2.0,M11.1.0)'
                - 'America/Anchorage (AKST9AKDT,M3.2.0,M11.1.0)'
                - 'America/Anguilla (AST4)'
                - 'America/Antigua (AST4)'
                - 'America/Araguaina (<-03>3)'
                - 'America/Argentina/Buenos_Aires (<-03>3)'
                - 'America/Argentina/Catamarca (<-03>3)'
                - 'America/Argentina/Cordoba (<-03>3)'
                - 'America/Argentina/Jujuy (<-03>3)'
                - 'America/Argentina/La_Rioja (<-03>3)'
                - 'America/Argentina/Mendoza (<-03>3)'
                - 'America/Argentina/Rio_Gallegos (<-03>3)'
                - 'America/Argentina/Salta (<-03>3)'
                - 'America/Argentina/San_Juan (<-03>3)'
                - 'America/Argentina/San_Luis (<-03>3)'
                - 'America/Argentina/Tucuman (<-03>3)'
                - 'America/Argentina/Ushuaia (<-03>3)'
                - 'America/Aruba (AST4)'
                - 'America/Asuncion (<-04>4<-03>,M10.1.0/0,M3.4.0/0)'
                - 'America/Atikokan (EST5)'
                - 'America/Bahia (<-03>3)'
                - 'America/Bahia_Banderas (CST6)'
                - 'America/Barbados (AST4)'
                - 'America/Belem (<-03>3)'
                - 'America/Belize (CST6)'
                - 'America/Blanc-Sablon (AST4)'
                - 'America/Boa_Vista (<-04>4)'
                - 'America/Bogota (<-05>5)'
                - 'America/Boise (MST7MDT,M3.2.0,M11.1.0)'
                - 'America/Cambridge_Bay (MST7MDT,M3.2.0,M11.1.0)'
                - 'America/Campo_Grande (<-04>4)'
                - 'America/Cancun (EST5)'
                - 'America/Caracas (<-04>4)'
                - 'America/Cayenne (<-03>3)'
                - 'America/Cayman (EST5)'
                - 'America/Chicago (CST6CDT,M3.2.0,M11.1.0)'
                - 'America/Chihuahua (CST6)'
                - 'America/Ciudad_Juarez (MST7MDT,M3.2.0,M11.1.0)'
                - 'America/Costa_Rica (CST6)'
                - 'America/Creston (MST7)'
                - 'America/Cuiaba (<-04>4)'
                - 'America/Curacao (AST4)'
                - 'America/Danmarkshavn (GMT0)'
                - 'America/Dawson (MST7)'
                - 'America/Dawson_Creek (MST7)'
                - 'America/Denver (MST7MDT,M3.2.0,M11.1.0)'
                - 'America/Detroit (EST5EDT,M3.2.0,M11.1.0)'
                - 'America/Dominica (AST4)'
                - 'America/Edmonton (MST7MDT,M3.2.0,M11.1.0)'
                - 'America/Eirunepe (<-05>5)'
                - 'America/El_Salvador (CST6)'
                - 'America/Fort_Nelson (MST7)'
                - 'America/Fortaleza (<-03>3)'
                - 'America/Glace_Bay (AST4ADT,M3.2.0,M11.1.0)'
                - 'America/Goose_Bay (AST4ADT,M3.2.0,M11.1.0)'
                - 'America/Grand_Turk (EST5EDT,M3.2.0,M11.1.0)'
                - 'America/Grenada (AST4)'
                - 'America/Guadeloupe (AST4)'
                - 'America/Guatemala (CST6)'
                - 'America/Guayaquil (<-05>5)'
                - 'America/Guyana (<-04>4)'
                - 'America/Halifax (AST4ADT,M3.2.0,M11.1.0)'
                - 'America/Havana (CST5CDT,M3.2.0/0,M11.1.0/1)'
                - 'America/Hermosillo (MST7)'
                - 'America/Indiana/Indianapolis (EST5EDT,M3.2.0,M11.1.0)'
                - 'America/Indiana/Knox (CST6CDT,M3.2.0,M11.1.0)'
                - 'America/Indiana/Marengo (EST5EDT,M3.2.0,M11.1.0)'
                - 'America/Indiana/Petersburg (EST5EDT,M3.2.0,M11.1.0)'
                - 'America/Indiana/Tell_City (CST6CDT,M3.2.0,M11.1.0)'
                - 'America/Indiana/Vevay (EST5EDT,M3.2.0,M11.1.0)'
                - 'America/Indiana/Vincennes (EST5EDT,M3.2.0,M11.1.0)'
                - 'America/Indiana/Winamac (EST5EDT,M3.2.0,M11.1.0)'
                - 'America/Inuvik (MST7MDT,M3.2.0,M11.1.0)'
                - 'America/Iqaluit (EST5EDT,M3.2.0,M11.1.0)'
                - 'America/Jamaica (EST5)'
                - 'America/Juneau (AKST9AKDT,M3.2.0,M11.1.0)'
                - 'America/Kentucky/Louisville (EST5EDT,M3.2.0,M11.1.0)'
                - 'America/Kentucky/Monticello (EST5EDT,M3.2.0,M11.1.0)'
                - 'America/La_Paz (<-04>4)'
                - 'America/Lima (<-05>5)'
                - 'America/Los_Angeles (PST8PDT,M3.2.0,M11.1.0)'
                - 'America/Maceio (<-03>3)'
                - 'America/Managua (CST6)'
                - 'America/Manaus (<-04>4)'
                - 'America/Martinique (AST4)'
                - 'America/Matamoros (CST6CDT,M3.2.0,M11.1.0)'
                - 'America/Mazatlan (MST7)'
                - 'America/Menominee (CST6CDT,M3.2.0,M11.1.0)'
                - 'America/Merida (CST6)'
                - 'America/Metlakatla (AKST9AKDT,M3.2.0,M11.1.0)'
                - 'America/Mexico_City (CST6)'
                - 'America/Miquelon (<-03>3<-02>,M3.2.0,M11.1.0)'
                - 'America/Moncton (AST4ADT,M3.2.0,M11.1.0)'
                - 'America/Monterrey (CST6)'
                - 'America/Montevideo (<-03>3)'
                - 'America/Montserrat (AST4)'
                - 'America/Nassau (EST5EDT,M3.2.0,M11.1.0)'
                - 'America/New_York (EST5EDT,M3.2.0,M11.1.0)'
                - 'America/Nome (AKST9AKDT,M3.2.0,M11.1.0)'
                - 'America/Noronha (<-02>2)'
                - 'America/North_Dakota/Beulah (CST6CDT,M3.2.0,M11.1.0)'
                - 'America/North_Dakota/Center (CST6CDT,M3.2.0,M11.1.0)'
                - 'America/North_Dakota/New_Salem (CST6CDT,M3.2.0,M11.1.0)'
                - 'America/Nuuk (<-02>2<-01>,M3.5.0/-1,M10.5.0/0)'
                - 'America/Ojinaga (CST6CDT,M3.2.0,M11.1.0)'
                - 'America/Panama (EST5)'
                - 'America/Paramaribo (<-03>3)'
                - 'America/Phoenix (MST7)'
                - 'America/Port-au-Prince (EST5EDT,M3.2.0,M11.1.0)'
                - 'America/Port_of_Spain (AST4)'
                - 'America/Porto_Velho (<-04>4)'
                - 'America/Puerto_Rico (AST4)'
                - 'America/Punta_Arenas (<-03>3)'
                - 'America/Rankin_Inlet (CST6CDT,M3.2.0,M11.1.0)'
                - 'America/Recife (<-03>3)'
                - 'America/Regina (CST6)'
                - 'America/Resolute (CST6CDT,M3.2.0,M11.1.0)'
                - 'America/Rio_Branco (<-05>5)'
                - 'America/Santarem (<-03>3)'
                - 'America/Santiago (<-04>4<-03>,M9.1.6/24,M4.1.6/24)'
                - 'America/Santo_Domingo (AST4)'
                - 'America/Sao_Paulo (<-03>3)'
                - 'America/Scoresbysund (<-02>2<-01>,M3.5.0/-1,M10.5.0/0)'
                - 'America/Sitka (AKST9AKDT,M3.2.0,M11.1.0)'
                - 'America/St_Johns (NST3:30NDT,M3.2.0,M11.1.0)'
                - 'America/St_Kitts (AST4)'
                - 'America/St_Lucia (AST4)'
                - 'America/St_Thomas (AST4)'
                - 'America/St_Vincent (AST4)'
                - 'America/Swift_Current (CST6)'
                - 'America/Tegucigalpa (CST6)'
                - 'America/Thule (AST4ADT,M3.2.0,M11.1.0)'
                - 'America/Tijuana (PST8PDT,M3.2.0,M11.1.0)'
                - 'America/Toronto (EST5EDT,M3.2.0,M11.1.0)'
                - 'America/Tortola (AST4)'
                - 'America/Vancouver (PST8PDT,M3.2.0,M11.1.0)'
                - 'America/Whitehorse (MST7)'
                - 'America/Winnipeg (CST6CDT,M3.2.0,M11.1.0)'
                - 'America/Yakutat (AKST9AKDT,M3.2.0,M11.1.0)'
                - 'Antarctica/Casey (<+08>-8)'
                - 'Antarctica/Davis (<+07>-7)'
                - 'Antarctica/DumontDUrville (<+10>-10)'
                - 'Antarctica/Macquarie (AEST-10AEDT,M10.1.0,M4.1.0/3)'
                - 'Antarctica/Mawson (<+05>-5)'
                - 'Antarctica/McMurdo (NZST-12NZDT,M9.5.0,M4.1.0/3)'
                - 'Antarctica/Palmer (<-03>3)'
                - 'Antarctica/Rothera (<-03>3)'
                - 'Antarctica/Syowa (<+03>-3)'
                - 'Antarctica/Troll (<+00>0<+02>-2,M3.5.0/1,M10.5.0/3)'
                - 'Antarctica/Vostok (<+05>-5)'
                - 'Asia/Aden (<+03>-3)'
                - 'Asia/Almaty (<+05>-5)'
                - 'Asia/Amman (<+03>-3)'
                - 'Asia/Anadyr (<+12>-12)'
                - 'Asia/Aqtau (<+05>-5)'
                - 'Asia/Aqtobe (<+05>-5)'
                - 'Asia/Ashgabat (<+05>-5)'
                - 'Asia/Atyrau (<+05>-5)'
                - 'Asia/Baghdad (<+03>-3)'
                - 'Asia/Bahrain (<+03>-3)'
                - 'Asia/Baku (<+04>-4)'
                - 'Asia/Bangkok (<+07>-7)'
                - 'Asia/Barnaul (<+07>-7)'
                - 'Asia/Beirut (EET-2EEST,M3.5.0/0,M10.5.0/0)'
                - 'Asia/Bishkek (<+06>-6)'
                - 'Asia/Brunei (<+08>-8)'
                - 'Asia/Chita (<+09>-9)'
                - 'Asia/Choibalsan (<+08>-8)'
                - 'Asia/Colombo (<+0530>-5:30)'
                - 'Asia/Damascus (<+03>-3)'
                - 'Asia/Dhaka (<+06>-6)'
                - 'Asia/Dili (<+09>-9)'
                - 'Asia/Dubai (<+04>-4)'
                - 'Asia/Dushanbe (<+05>-5)'
                - 'Asia/Famagusta (EET-2EEST,M3.5.0/3,M10.5.0/4)'
                - 'Asia/Gaza (EET-2EEST,M3.4.4/50,M10.4.4/50)'
                - 'Asia/Hebron (EET-2EEST,M3.4.4/50,M10.4.4/50)'
                - 'Asia/Ho_Chi_Minh (<+07>-7)'
                - 'Asia/Hong_Kong (HKT-8)'
                - 'Asia/Hovd (<+07>-7)'
                - 'Asia/Irkutsk (<+08>-8)'
                - 'Asia/Jakarta (WIB-7)'
                - 'Asia/Jayapura (WIT-9)'
                - 'Asia/Jerusalem (IST-2IDT,M3.4.4/26,M10.5.0)'
                - 'Asia/Kabul (<+0430>-4:30)'
                - 'Asia/Kamchatka (<+12>-12)'
                - 'Asia/Karachi (PKT-5)'
                - 'Asia/Kathmandu (<+0545>-5:45)'
                - 'Asia/Khandyga (<+09>-9)'
                - 'Asia/Kolkata (IST-5:30)'
                - 'Asia/Krasnoyarsk (<+07>-7)'
                - 'Asia/Kuala_Lumpur (<+08>-8)'
                - 'Asia/Kuching (<+08>-8)'
                - 'Asia/Kuwait (<+03>-3)'
                - 'Asia/Macau (CST-8)'
                - 'Asia/Magadan (<+11>-11)'
                - 'Asia/Makassar (WITA-8)'
                - 'Asia/Manila (PST-8)'
                - 'Asia/Muscat (<+04>-4)'
                - 'Asia/Nicosia (EET-2EEST,M3.5.0/3,M10.5.0/4)'
                - 'Asia/Novokuznetsk (<+07>-7)'
                - 'Asia/Novosibirsk (<+07>-7)'
                - 'Asia/Omsk (<+06>-6)'
                - 'Asia/Oral (<+05>-5)'
                - 'Asia/Phnom_Penh (<+07>-7)'
                - 'Asia/Pontianak (WIB-7)'
                - 'Asia/Pyongyang (KST-9)'
                - 'Asia/Qatar (<+03>-3)'
                - 'Asia/Qostanay (<+05>-5)'
                - 'Asia/Qyzylorda (<+05>-5)'
                - 'Asia/Riyadh (<+03>-3)'
                - 'Asia/Sakhalin (<+11>-11)'
                - 'Asia/Samarkand (<+05>-5)'
                - 'Asia/Seoul (KST-9)'
                - 'Asia/Shanghai (CST-8)'
                - 'Asia/Singapore (<+08>-8)'
                - 'Asia/Srednekolymsk (<+11>-11)'
                - 'Asia/Taipei (CST-8)'
                - 'Asia/Tashkent (<+05>-5)'
                - 'Asia/Tbilisi (<+04>-4)'
                - 'Asia/Tehran (<+0330>-3:30)'
                - 'Asia/Thimphu (<+06>-6)'
                - 'Asia/Tokyo (JST-9)'
                - 'Asia/Tomsk (<+07>-7)'
                - 'Asia/Ulaanbaatar (<+08>-8)'
                - 'Asia/Urumqi (<+06>-6)'
                - 'Asia/Ust-Nera (<+10>-10)'
                - 'Asia/Vientiane (<+07>-7)'
                - 'Asia/Vladivostok (<+10>-10)'
                - 'Asia/Yakutsk (<+09>-9)'
                - 'Asia/Yangon (<+0630>-6:30)'
                - 'Asia/Yekaterinburg (<+05>-5)'
                - 'Asia/Yerevan (<+04>-4)'
                - 'Atlantic/Azores (<-01>1<+00>,M3.5.0/0,M10.5.0/1)'
                - 'Atlantic/Bermuda (AST4ADT,M3.2.0,M11.1.0)'
                - 'Atlantic/Canary (WET0WEST,M3.5.0/1,M10.5.0)'
                - 'Atlantic/Cape_Verde (<-01>1)'
                - 'Atlantic/Faroe (WET0WEST,M3.5.0/1,M10.5.0)'
                - 'Atlantic/Madeira (WET0WEST,M3.5.0/1,M10.5.0)'
                - 'Atlantic/Reykjavik (GMT0)'
                - 'Atlantic/South_Georgia (<-02>2)'
                - 'Atlantic/St_Helena (GMT0)'
                - 'Atlantic/Stanley (<-03>3)'
                - 'Australia/Adelaide (ACST-9:30ACDT,M10.1.0,M4.1.0/3)'
                - 'Australia/Brisbane (AEST-10)'
                - 'Australia/Broken_Hill (ACST-9:30ACDT,M10.1.0,M4.1.0/3)'
                - 'Australia/Darwin (ACST-9:30)'
                - 'Australia/Eucla (<+0845>-8:45)'
                - 'Australia/Hobart (AEST-10AEDT,M10.1.0,M4.1.0/3)'
                - 'Australia/Lindeman (AEST-10)'
                - 'Australia/Lord_Howe (<+1030>-10:30<+11>-11,M10.1.0,M4.1.0)'
                - 'Australia/Melbourne (AEST-10AEDT,M10.1.0,M4.1.0/3)'
                - 'Australia/Perth (AWST-8)'
                - 'Australia/Sydney (AEST-10AEDT,M10.1.0,M4.1.0/3)'
                - 'Europe/Amsterdam (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Andorra (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Astrakhan (<+04>-4)'
                - 'Europe/Athens (EET-2EEST,M3.5.0/3,M10.5.0/4)'
                - 'Europe/Belgrade (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Berlin (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Brussels (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Bucharest (EET-2EEST,M3.5.0/3,M10.5.0/4)'
                - 'Europe/Budapest (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Chisinau (EET-2EEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Copenhagen (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Dublin (IST-1GMT0,M10.5.0,M3.5.0/1)'
                - 'Europe/Gibraltar (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Guernsey (GMT0BST,M3.5.0/1,M10.5.0)'
                - 'Europe/Helsinki (EET-2EEST,M3.5.0/3,M10.5.0/4)'
                - 'Europe/Isle_of_Man (GMT0BST,M3.5.0/1,M10.5.0)'
                - 'Europe/Istanbul (<+03>-3)'
                - 'Europe/Jersey (GMT0BST,M3.5.0/1,M10.5.0)'
                - 'Europe/Kaliningrad (EET-2)'
                - 'Europe/Kirov (MSK-3)'
                - 'Europe/Kyiv (EET-2EEST,M3.5.0/3,M10.5.0/4)'
                - 'Europe/Lisbon (WET0WEST,M3.5.0/1,M10.5.0)'
                - 'Europe/Ljubljana (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/London (GMT0BST,M3.5.0/1,M10.5.0)'
                - 'Europe/Luxembourg (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Madrid (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Malta (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Minsk (<+03>-3)'
                - 'Europe/Monaco (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Moscow (MSK-3)'
                - 'Europe/Oslo (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Paris (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Prague (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Riga (EET-2EEST,M3.5.0/3,M10.5.0/4)'
                - 'Europe/Rome (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Samara (<+04>-4)'
                - 'Europe/Sarajevo (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Saratov (<+04>-4)'
                - 'Europe/Simferopol (MSK-3)'
                - 'Europe/Skopje (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Sofia (EET-2EEST,M3.5.0/3,M10.5.0/4)'
                - 'Europe/Stockholm (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Tallinn (EET-2EEST,M3.5.0/3,M10.5.0/4)'
                - 'Europe/Tirane (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Ulyanovsk (<+04>-4)'
                - 'Europe/Vaduz (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Vienna (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Vilnius (EET-2EEST,M3.5.0/3,M10.5.0/4)'
                - 'Europe/Volgograd (MSK-3)'
                - 'Europe/Warsaw (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Zagreb (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Europe/Zurich (CET-1CEST,M3.5.0,M10.5.0/3)'
                - 'Indian/Antananarivo (EAT-3)'
                - 'Indian/Chagos (<+06>-6)'
                - 'Indian/Christmas (<+07>-7)'
                - 'Indian/Cocos (<+0630>-6:30)'
                - 'Indian/Comoro (EAT-3)'
                - 'Indian/Kerguelen (<+05>-5)'
                - 'Indian/Mahe (<+04>-4)'
                - 'Indian/Maldives (<+05>-5)'
                - 'Indian/Mauritius (<+04>-4)'
                - 'Indian/Mayotte (EAT-3)'
                - 'Indian/Reunion (<+04>-4)'
                - 'Pacific/Apia (<+13>-13)'
                - 'Pacific/Auckland (NZST-12NZDT,M9.5.0,M4.1.0/3)'
                - 'Pacific/Bougainville (<+11>-11)'
                - 'Pacific/Chatham (<+1245>-12:45<+1345>,M9.5.0/2:45,M4.1.0/3:45)'
                - 'Pacific/Chuuk (<+10>-10)'
                - 'Pacific/Easter (<-06>6<-05>,M9.1.6/22,M4.1.6/22)'
                - 'Pacific/Efate (<+11>-11)'
                - 'Pacific/Fakaofo (<+13>-13)'
                - 'Pacific/Fiji (<+12>-12)'
                - 'Pacific/Funafuti (<+12>-12)'
                - 'Pacific/Galapagos (<-06>6)'
                - 'Pacific/Gambier (<-09>9)'
                - 'Pacific/Guadalcanal (<+11>-11)'
                - 'Pacific/Guam (ChST-10)'
                - 'Pacific/Honolulu (HST10)'
                - 'Pacific/Kanton (<+13>-13)'
                - 'Pacific/Kiritimati (<+14>-14)'
                - 'Pacific/Kosrae (<+11>-11)'
                - 'Pacific/Kwajalein (<+12>-12)'
                - 'Pacific/Majuro (<+12>-12)'
                - 'Pacific/Marquesas (<-0930>9:30)'
                - 'Pacific/Midway (SST11)'
                - 'Pacific/Nauru (<+12>-12)'
                - 'Pacific/Niue (<-11>11)'
                - 'Pacific/Norfolk (<+11>-11<+12>,M10.1.0,M4.1.0/3)'
                - 'Pacific/Noumea (<+11>-11)'
                - 'Pacific/Pago_Pago (SST11)'
                - 'Pacific/Palau (<+09>-9)'
                - 'Pacific/Pitcairn (<-08>8)'
                - 'Pacific/Pohnpei (<+11>-11)'
                - 'Pacific/Port_Moresby (<+10>-10)'
                - 'Pacific/Rarotonga (<-10>10)'
                - 'Pacific/Saipan (ChST-10)'
                - 'Pacific/Tahiti (<-10>10)'
                - 'Pacific/Tarawa (<+12>-12)'
                - 'Pacific/Tongatapu (<+13>-13)'
                - 'Pacific/Wake (<+12>-12)'
                - 'Pacific/Wallis (<+12>-12)'
                - 'Etc/GMT (GMT0)'
                - 'Etc/GMT+14 (<+14>-14)'
                - 'Etc/GMT+13 (<+13>-13)'
                - 'Etc/GMT+12 (<+12>-12)'
                - 'Etc/GMT+11 (<+11>-11)'
                - 'Etc/GMT+10 (<+10>-10)'
                - 'Etc/GMT+9 (<+09>-9)'
                - 'Etc/GMT+8 (<+08>-8)'
                - 'Etc/GMT+7 (<+07>-7)'
                - 'Etc/GMT+6 (<+06>-6)'
                - 'Etc/GMT+5 (<+05>-5)'
                - 'Etc/GMT+4 (<+04>-4)'
                - 'Etc/GMT+3 (<+03>-3)'
                - 'Etc/GMT+2 (<+02>-2)'
                - 'Etc/GMT+1 (<+01>-1)'
                - 'Etc/GMT-1 (<-01>1)'
                - 'Etc/GMT-2 (<-02>2)'
                - 'Etc/GMT-3 (<-03>3)'
                - 'Etc/GMT-4 (<-04>4)'
                - 'Etc/GMT-5 (<-05>5)'
                - 'Etc/GMT-6 (<-06>6)'
                - 'Etc/GMT-7 (<-07>7)'
                - 'Etc/GMT-8 (<-08>8)'
                - 'Etc/GMT-9 (<-09>9)'
                - 'Etc/GMT-10 (<-10>10)'
                - 'Etc/GMT-11 (<-11>11)'
                - 'Etc/GMT-12 (<-12>12)'
                - 'Etc/UTC (UTC0)'
        decimal_separator:
          name: System settings - Decimal Separator
          description: "Choose the decimal separator for displaying numbers."
          default: '.'
          selector:
            select:
              multiple: false
              options:
                - label: '. (Dot)'
                  value: '.'
                - label: ', (Comma)'
                  value: ','
    weather_temperature:
      name: Weather and temperature (optional)
      icon: mdi:weather-partly-snowy-rainy
      description: Select the weather provider and how the ambient temperatures will be displayed.
      collapsed: true
      input:
        weather_entity:
          name: Weather entity from HA
          description: >
            Select your weather entity.

            This will be used for weather information on Home page and all the weather pages.
          default: []
          selector:
            entity:
              filter:
                domain:
                  - weather
        outdoortemp:
          name: Home page - Outdoor Temperature Sensor (Optional)
          description: 'If no outdoor sensor is available, leave the field empty and the value from your selected weather integration will be used automatically.'
          default: []
          selector: &entity_temp_sensor-selector
            entity:
              filter:
                domain:
                  - sensor
                device_class:
                  - temperature
        home_outdoor_temp_label_color:
          name: Home page - Outdoor Temperature Sensor - Text color
          description: &description_text_color "Choose a color for the sensor's display text."
          default: [255, 255, 255]
          selector: &color_selector
            color_rgb:
        home_outdoor_temp_font:
          name: Home page - Outdoor Temperature Sensor font size
          description: >
            The size of the outdoor temperature font

            ***ATTENTION!** Depending on the value shown and the font size, the text may exceed the available space.*
          default: '4'
          selector:
            select:
              multiple: false
              options:
                - label: 16px
                  value: '0'
                - label: 18px
                  value: '1'
                - label: 22px
                  value: '2'
                - label: 26px
                  value: '3'
                - label: 36px
                  value: '4'
                - label: 48px
                  value: '5'
                - label: 72px
                  value: '6'
        home_indoor_temp_visible:
          name: Home Page - Indoor Temperature Sensor Visibility
          description: "Toggle to display the indoor temperature on the Home page."
          default: true
          selector:
            boolean:
        indoortemp:
          name: Home page - Indoor Temperature Sensor - Entity (Optional)
          description: >
            An indoor temperature sensor is not necessary.

            Leave the field empty if you want to use the temperature sensor of the NSPanel.

            Additionally a temperature correction for the NSPanel sensor is possible under HA Devices.
          default: []
          selector: *entity_temp_sensor-selector
        home_indoor_temp_icon:
          name: Home page - Indoor Temperature Sensor - Icon (Optional)
          description: "Icon which should be displayed (Default mdi:thermometer)"
          default: mdi:thermometer
          selector: &selector_icon
            icon:
        home_indoor_temp_icon_color:
          name: Home page - Indoor Temperature Sensor - Icon color
          description: &description_icon_color "Icon color which should be displayed."
          default: [255, 255, 255]
          selector: *color_selector
        home_indoor_temp_label_color:
          name: Home page - Indoor Temperature Sensor - Text color
          description: *description_text_color
          default: [255, 255, 255]
          selector: *color_selector
    home_page_entites_states:
      name: Home page - Entities states (optional)
      icon: mdi:home
      description: Select the entities to be displayed on the Home page.
      collapsed: true
      input:
        home_value01:
          name: Home page - Entity State 01 - Entity (Optional)
          description: &description_entity_displayed "Entity which should be displayed."
          default: []
          selector: &selector_value_entity
            entity:
        home_value01_label_color:
          name: Home page - Entity State 01 - Text color
          description: *description_text_color
          default: [200, 204, 200]
          selector: *color_selector
        home_value01_icon:
          name: Home page - Entity State 01 - Icon (Optional)
          description: &description_icon_automatic_default >
            ***Icon Display:** If not specified, an attribute-defined icon will be used, if available. Otherwise, no icon will be shown.*
          default: []
          selector: *selector_icon
        home_value01_icon_color:
          name: Home page - Entity State 01 - Icon color
          description: *description_icon_color
          default: [200, 204, 200]
          selector: *color_selector
        home_value02:
          name: Home page - Entity State 02 - Entity (Optional)
          description: *description_entity_displayed
          default: []
          selector: *selector_value_entity
        home_value02_label_color:
          name: Home page - Entity State 02 - Text color
          description: *description_text_color
          default: [200, 204, 200]
          selector: *color_selector
        home_value02_icon:
          name: Home page - Entity State 02 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        home_value02_icon_color:
          name: Home page - Entity State 02 - Icon color
          description: *description_icon_color
          default: [200, 204, 200]
          selector: *color_selector
        home_value03:
          name: Home page - Entity State 03 - Entity (Optional)
          description: *description_entity_displayed
          default: []
          selector: *selector_value_entity
        home_value03_label_color:
          name: Home page - Entity State 03 - Text color
          description: *description_text_color
          default: [200, 204, 200]
          selector: *color_selector
        home_value03_icon:
          name: Home page - Entity State 03 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        home_value03_icon_color:
          name: Home page - Entity State 03 - Icon color
          description: *description_icon_color
          default: [200, 204, 200]
          selector: *color_selector
        home_value04:
          name: Home page - Entity State 04 - Entity (Optional)
          description: *description_entity_displayed
          default: []
          selector: *selector_value_entity
        home_value04_label_color:
          name: Home page - Entity State 04 - Text color
          description: *description_text_color
          default: [200, 204, 200]
          selector: *color_selector
        home_value04_icon:
          name: Home page - Entity State 04 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        home_value04_icon_color:
          name: Home page - Entity State 04 - Icon color
          description: *description_icon_color
          default: [200, 204, 200]
          selector: *color_selector
    home_page_chips:
      name: Home page - Chips (optional)
      icon: mdi:home
      description: Select the entities to be displayed on the top of the Home page.
      collapsed: true
      input:
        chip_font_size:
          name: Icon's font size
          description: Please select the size of the icons shown on the chips.
          default: '7'
          selector:
            select:
              multiple: false
              options:
                - label: 24px
                  value: '7'
                - label: 32px
                  value: '8'
        chip01:
          name: Home page - Chip 01 - Entity (Optional)
          description: *description_entity_displayed
          default: []
          selector: &chip-entity-selector
            entity:
              filter:
                domain:
                  - alarm_control_panel
                  - binary_sensor
                  - climate
                  - cover
                  - fan
                  - input_boolean
                  - light
                  - lock
                  - media_player
                  - sensor
                  - switch
        chip01_inverted:
          name: Home page - Chip 01 - Inverted
          description: "If enabled, this chip's display is reversed. It will appear when the linked entity is `off`."
          default: false
          selector:
            boolean:
        chip01_icon:
          name: Home page - Chip 01 - Icon (Optional)
          description: "Specify an icon to show when the entity's state matches. If not set, the entity's default icon is used."
          default: []
          selector: *selector_icon
        chip01_icon_color:
          name: Home page - Chip 01 - Icon color
          description: *description_icon_color
          default: []
          selector: *color_selector
        chip02:
          name: Home page - Chip 02 - Entity (Optional)
          description: *description_entity_displayed
          default: []
          selector: *chip-entity-selector
        chip02_inverted:
          name: Home page - Chip 02 - Inverted
          description: "If enabled, this chip's display is reversed. It will appear when the linked entity is `off`."
          default: false
          selector:
            boolean:
        chip02_icon:
          name: Home page - Chip 02 - Icon (Optional)
          description: "Specify an icon to show when the entity's state matches. If not set, the entity's default icon is used."
          default: []
          selector: *selector_icon
        chip02_icon_color:
          name: Home page - Chip 02 - Icon color
          description: *description_icon_color
          default: []
          selector: *color_selector
        chip03:
          name: Home page - Chip 03 - Entity (Optional)
          description: *description_entity_displayed
          default: []
          selector: *chip-entity-selector
        chip03_inverted:
          name: Home page - Chip 03 - Inverted
          description: "If enabled, this chip's display is reversed. It will appear when the linked entity is `off`."
          default: false
          selector:
            boolean:
        chip03_icon:
          name: Home page - Chip 03 - Icon (Optional)
          description: "Specify an icon to show when the entity's state matches. If not set, the entity's default icon is used."
          default: []
          selector: *selector_icon
        chip03_icon_color:
          name: Home page - Chip 03 - Icon color
          description: *description_icon_color
          default: []
          selector: *color_selector
        chip04:
          name: Home page - Chip 04 - Entity (Optional)
          description: *description_entity_displayed
          default: []
          selector: *chip-entity-selector
        chip04_inverted:
          name: Home page - Chip 04 - Inverted
          description: "If enabled, this chip's display is reversed. It will appear when the linked entity is `off`."
          default: false
          selector:
            boolean:
        chip04_icon:
          name: Home page - Chip 04 - Icon (Optional)
          description: "Specify an icon to show when the entity's state matches. If not set, the entity's default icon is used."
          default: []
          selector: *selector_icon
        chip04_icon_color:
          name: Home page - Chip 04 - Icon color
          description: *description_icon_color
          default: []
          selector: *color_selector
        chip05:
          name: Home page - Chip 05 - Entity (Optional)
          description: *description_entity_displayed
          default: []
          selector: *chip-entity-selector
        chip05_inverted:
          name: Home page - Chip 05 - Inverted
          description: "If enabled, this chip's display is reversed. It will appear when the linked entity is `off`."
          default: false
          selector:
            boolean:
        chip05_icon:
          name: Home page - Chip 05 - Icon (Optional)
          description: "Specify an icon to show when the entity's state matches. If not set, the entity's default icon is used."
          default: []
          selector: *selector_icon
        chip05_icon_color:
          name: Home page - Chip 05 - Icon color
          description: *description_icon_color
          default: []
          selector: *color_selector
        chip06:
          name: Home page - Chip 06 - Entity (Optional)
          description: *description_entity_displayed
          default: []
          selector: *chip-entity-selector
        chip06_inverted:
          name: Home page - Chip 06 - Inverted
          description: "If enabled, this chip's display is reversed. It will appear when the linked entity is `off`."
          default: false
          selector:
            boolean:
        chip06_icon:
          name: Home page - Chip 06 - Icon (Optional)
          description: "Specify an icon to show when the entity's state matches. If not set, the entity's default icon is used."
          default: []
          selector: *selector_icon
        chip06_icon_color:
          name: Home page - Chip 06 - Icon color
          description: *description_icon_color
          default: []
          selector: *color_selector
        chip07:
          name: Home page - Chip 07 - Entity (Optional)
          description: *description_entity_displayed
          default: []
          selector: *chip-entity-selector
        chip07_inverted:
          name: Home page - Chip 07 - Inverted
          description: "If enabled, this chip's display is reversed. It will appear when the linked entity is `off`."
          default: false
          selector:
            boolean:
        chip07_icon:
          name: Home page - Chip 07 - Icon (Optional)
          description: "Specify an icon to show when the entity's state matches. If not set, the entity's default icon is used."
          default: []
          selector: *selector_icon
        chip07_icon_color:
          name: Home page - Chip 07 - Icon color
          description: *description_icon_color
          default: []
          selector: *color_selector
    home_page_custom_buttons:
      name: Home page - Custom buttons (optional)
      icon: mdi:home
      description: Select the custom buttons for the Home page.
      collapsed: true
      input:
        custom_buttons_font_size:
          name: ' '
          description: >
            # ✅ HOME PAGE - CUSTOM BUTTONS ✅

            Please select the size of the icons shown on the custom buttons.
          default: '8'
          selector:
            select:
              multiple: false
              options:
                - label: 24px
                  value: '7'
                - label: 32px
                  value: '8'
        home_custom_button01:
          name: Home page - Custom button 1 - Entity (Optional)
          description: &description_home_custom_button_entity >
            Entity which should be controlled.

            *Entities with supported advanced settings will open it's settings page, all other entities will execute the action or toggle when clicked.*
          default: []
          selector: &selector_home_custom_button_entity
            entity:
              filter:
                domain:
                  - alarm_control_panel
                  - automation
                  - button
                  - climate
                  - cover
                  - fan
                  - input_boolean
                  - input_button
                  - light
                  - lock
                  - media_player
                  - remote
                  - scene
                  - script
                  - switch
        home_custom_button01_icon:
          name: Home page - Custom button 1 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        home_custom_button01_name:
          name: Home Page - Custom Button 1 - Title (Optional)
          description: &description_home_custom_button_title >
            Define a title for display on the button's detailed page, if applicable.
            This title will not appear on the Home page but on the detailed page accessed through this button, where supported.

            In the absence of a specified title, the system will default to using the entity's Friendly Name or, failing that, its `entity_id`.
          default: ""
          selector:
            text:
        home_custom_button02:
          name: Home page - Custom button 2 - Entity (Optional)
          description: *description_home_custom_button_entity
          default: []
          selector: *selector_home_custom_button_entity
        home_custom_button02_icon:
          name: Home page - Custom button 2 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        home_custom_button02_name:
          name: Home Page - Custom Button 2 - Title (Optional)
          description: *description_home_custom_button_title
          default: ""
          selector:
            text:
        home_custom_button03:
          name: Home page - Custom button 3 - Entity (Optional)
          description: *description_home_custom_button_entity
          default: []
          selector: *selector_home_custom_button_entity
        home_custom_button03_icon:
          name: Home page - Custom button 3 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        home_custom_button03_name:
          name: Home Page - Custom Button 3 - Title (Optional)
          description: *description_home_custom_button_title
          default: ""
          selector:
            text:
        home_custom_button04:
          name: Home page - Custom button 4 - Entity (Optional)
          description: *description_home_custom_button_entity
          default: []
          selector: *selector_home_custom_button_entity
        home_custom_button04_icon:
          name: Home page - Custom button 4 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        home_custom_button04_name:
          name: Home Page - Custom Button 4 - Title (Optional)
          description: *description_home_custom_button_title
          default: ""
          selector:
            text:
        home_custom_button05:
          name: Home page - Custom button 5 - Entity (Optional)
          description: *description_home_custom_button_entity
          default: []
          selector: *selector_home_custom_button_entity
        home_custom_button05_icon:
          name: Home page - Custom button 5 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        home_custom_button05_name:
          name: Home Page - Custom Button 5 - Title (Optional)
          description: *description_home_custom_button_title
          default: ""
          selector:
            text:
        home_custom_button06:
          name: Home page - Custom button 6 - Entity (Optional)
          description: *description_home_custom_button_entity
          default: []
          selector: *selector_home_custom_button_entity
        home_custom_button06_icon:
          name: Home page - Custom button 6 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        home_custom_button06_name:
          name: Home Page - Custom Button 6 - Title (Optional)
          description: *description_home_custom_button_title
          default: ""
          selector:
            text:
        alarm:  # This key was kept with this name to support inputs from legacy versions where the alarm was the only option at that button
          name: Home page - Custom button 7 - Entity (Optional)
          description: *description_home_custom_button_entity
          default: []
          selector: *selector_home_custom_button_entity
        home_custom_button07_icon:
          name: Home page - Custom button 7 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        home_custom_button07_name:
          name: Home Page - Custom Button 7 - Title (Optional)
          description: *description_home_custom_button_title
          default: ""
          selector:
            text:
    home_page_general_settings:
      name: Home page - General settings (optional)
      icon: mdi:home
      collapsed: true
      input:
        relay01_icon:
          name: Home page - Relay 01 - Chip Icon (Optional)
          description: "Icon which should be displayed (Default mdi:numeric-1-box-outline)."
          default: mdi:numeric-1-box-outline
          selector: *selector_icon
        relay01_icon_color:
          name: Home page - Relay 01 - Icon color
          description: *description_icon_color
          default: []
          selector: *color_selector
        relay02_icon:
          name: Home page - Relay 02 - Chip Icon (Optional)
          description: "Icon which should be displayed (Default mdi:numeric-2-box-outline)."
          default: mdi:numeric-2-box-outline
          selector: *selector_icon
        relay02_icon_color:
          name: Home page - Relay 02 - Icon color
          description: *description_icon_color
          default: []
          selector: *color_selector
        time_label_color:
          name: Time - Text color
          description: >
            *HOME page*

            *Choose a color for the time's display text.*
          default: [255, 255, 255]
          selector: *color_selector
        date_label_color:
          name: Date - Text color
          description: >
            *HOME page*

            *Choose a color for the date's display text.*
          default: [255, 255, 255]
          selector: *color_selector
        home_page_background_update:
          name: Home page - Update in the background
          description: >
            When enabled, the Home page will be updated even when not visible or while the panel is sleeping, enhancing the user's experience when navigating between the pages.

            Disabling this may save some network and database consumption, with the cost of some slowness when constructing the Home page.
          default: true
          selector:
            boolean:
    climate_settings:
      name: Climate entity (optional)
      icon: mdi:thermostat-cog
      description: Select the main climate entity.
      collapsed: true
      input:
        climate:
          name: Main climate Entity (Optional)
          description: >
            This is used to show the internal temperature in the Home page, with a link to the climate page.
            If a climate entity is not provided here, the internal temperature sensor will be used, without the link.

            *Refer to add-ons documentation if you want to control the climate system with your panel's relays.*
          default: []
          selector:
            entity:
              filter:
                domain: climate
        climate_chip_always_visible:
          name: Main Climate - Always Show Chip
          description: "Keep the climate chip visible on the interface, even when the climate entity is idle or turned off."
          default: false
          selector:
            boolean:
    climate_page_settings:
      name: Climate page (optional)
      icon: mdi:thermostat-cog
      description: Select what to display in the climate page.
      collapsed: true
      input:
        climate_button08:
          name: Climate page - Custom button 01 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: &climate-custom-button-entity-selector
            entity:
              filter:
                domain:
                  - automation
                  - binary_sensor
                  - button
                  - cover
                  - fan
                  - input_boolean
                  - input_button
                  - light
                  - lock
                  - person
                  - remote
                  - scene
                  - script
                  - switch
        climate_button08_icon:
          name: Climate page - Custom button 01 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        climate_button08_icon_color:
          name: Climate page - Custom button 01 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        climate_button08_hold_custom_action:
          name: Climate page - Custom button 01 - Hold action (Optional)
          description: "The action(s) to launch on hold."
          default: []
          selector:
            action:
            ## Climate page - Custom button 02
        climate_button09:
          name: Climate page - Custom button 02 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *climate-custom-button-entity-selector
        climate_button09_icon:
          name: Climate page - Custom button 02 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        climate_button09_icon_color:
          name: Climate page - Custom button 02 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        climate_button09_hold_custom_action:
          name: Climate page - Custom button 02 - Hold action (Optional)
          description: "The action(s) to launch on hold."
          default: []
          selector:
            action:
        climate_value01:
          name: Climate page - Entity State 01 - Entity (Optional)
          description: *description_entity_displayed
          default: []
          selector: *selector_value_entity
        climate_value01_icon:
          name: Climate page - Entity State 01 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        climate_value01_icon_color:
          name: Climate page - Entity State 01 - Icon color
          description: *description_icon_color
          default: [200, 204, 200]
          selector: *color_selector
        climate_value01_label_color:
          name: Climate page - Entity State 01 - Text color
          description: *description_text_color
          default: [200, 204, 200]
          selector: *color_selector
        climate_value02:
          name: Climate page - Entity State 02 - Entity (Optional)
          description: *description_entity_displayed
          default: []
          selector: *selector_value_entity
        climate_value02_icon:
          name: Climate page - Entity State 02 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        climate_value02_icon_color:
          name: Climate page - Entity State 02 - Icon color
          description: *description_icon_color
          default: [200, 204, 200]
          selector: *color_selector
        climate_value02_label_color:
          name: Climate page - Entity State 02 - Text color
          description: *description_text_color
          default: [200, 204, 200]
          selector: *color_selector
        climate_value03:
          name: Climate page - Entity State 03 - Entity (Optional)
          description: *description_entity_displayed
          default: []
          selector: *selector_value_entity
        climate_value03_icon:
          name: Climate page - Entity State 03 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        climate_value03_icon_color:
          name: Climate page - Entity State 03 - Icon color
          description: *description_icon_color
          default: [200, 204, 200]
          selector: *color_selector
        climate_value03_label_color:
          name: Climate page - Entity State 03 - Text color
          description: *description_text_color
          default: [200, 204, 200]
          selector: *color_selector
        climate_value04:
          name: Climate page - Entity State 04 - Entity (Optional)
          description: *description_entity_displayed
          default: []
          selector: *selector_value_entity
        climate_value04_icon:
          name: Climate page - Entity State 04 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        climate_value04_icon_color:
          name: Climate page - Entity State 04 - Icon color
          description: *description_icon_color
          default: [200, 204, 200]
          selector: *color_selector
        climate_value04_label_color:
          name: Climate page - Entity State 04 - Text color
          description: *description_text_color
          default: [200, 204, 200]
          selector: *color_selector
    qrcode_settings:
      name: QR code (optional)
      icon: mdi:qrcode-scan
      description: Select how to display the QR code.
      collapsed: true
      input:
        qrcode_enabled:
          name: Enable QR code?
          description: Activate QR Code page and QR Code Button on the Home page.
          default: false
          selector:
            boolean:
        qrcode_label:
          name: QR Code page - Label (Optional)
          description: "Label which should be displayed."
          default: ""
          selector:
            text:
        qrcode_value:
          name: QR Code content - VALUE (Optional)
          description: "Value you want to display as QR code."
          default: ""
          selector:
            text:
        home_button05_icon:
          name: Home page - QR Code - Icon (Optional)
          description: "Icon which should be displayed (Default mdi:qrcode-scan)."
          default: mdi:qrcode-scan
          selector: *selector_icon
        home_button05_icon_color:
          name: QR Code - Icon color
          description: *description_icon_color
          default: [200, 204, 200]
          selector: *color_selector
    hardware_buttons:
      name: Hardware buttons (optional)
      icon: mdi:gesture-tap-button
      description: Select how the physical buttons will behave.
      collapsed: true
      input:
        hw_buttons_bars_pages:
          name: Hardware Buttons - Visibility Pages
          description: >
            Choose the pages where the bars, indicating the status of entities linked to hardware buttons, will be displayed.

            ***Attention!** Overlapping of button bars with other components may occur on some pages. Please proceed with caution.*
          default:
            - '2'
            - '61440'
            - '3932160'
            - '65536'
            - '131072'
            - '512'
            - '256'
            - '134217728'
            - '124'
            - '8388608'
            - '128'
            - '2048'
            - '4194304'
            - '1024'
            - '33554432'
            - '67108864'
            - '16777216'
          selector:
            select:
              multiple: true
              options:
                - label: "Home (default)"
                  value: '2'                          # 2^1
                - label: "Buttons pages"
                  value: '61440'                      # 2^12 + 2^12 + 2^14 + 2^15
                - label: "Entities pages"
                  value: '3932160'                    # 2^18 + 2^19 + 2^20 + 2^21
                - label: "Notification page"
                  value: '65536'                      # 2^16
                - label: "QR code page"
                  value: '131072'                     # 2^17
                - label: "Screen saver (sleep) page"
                  value: '512'                        # 2^9
                - label: "Settings page"
                  value: '256'                        # 2^8
                - label: "Utilities page"
                  value: '134217728'                  # 2^27
                - label: "Weather pages"
                  value: '124'                        # 2^2 + 2^3 + 2^4 + 2^5 + 2^6
                - label: "Alarm control panel page"
                  value: '8388608'                    # 2^23
                - label: "Climate page"
                  value: '128'                        # 2^7
                - label: "Cover page"
                  value: '2048'                       # 2^11
                - label: "Fan page"
                  value: '4194304'                    # 2^22
                - label: "Light page"
                  value: '1024'                       # 2^10
                - label: "Media player page"
                  value: '33554432'                   # 2^25
                - label: "Confirm pop-up page"
                  value: '67108864'                   # 2^26
                - label: "Keyboard pop-up page"
                  value: '16777216'                   # 2^24
        hw_buttons_bar_color_on:
          name: Hardware Buttons - Bar color when `On` (Optional)
          description: "Choose a color for the button's bars when the controlled entity is `On`."
          default: [31, 169, 255]
          selector: *color_selector
        hw_buttons_bar_color_off:
          name: Hardware Buttons - Bar color when `Off` (Optional)
          description: "Choose a color for the button's bars when the controlled entity is `Off`."
          default: [44, 44, 44]
          selector: *color_selector
        hw_button_bar_left_always_show:
          name: Hardware Buttons - Left - Always Show Bar (Optional)
          description: >
            Controls the visibility of the **left** button bar.
            By default, the bar is hidden when no entity is assigned.
            Enabling this option keeps the bar visible at all times, showing the `Off` state by default.

            Note: The bar remains visible if an entity is assigned, regardless of this setting.
          default: false
          selector:
            boolean:
        hw_button_bar_right_always_show:
          name: Hardware Buttons - Right - Always Show Bar (Optional)
          description: >
            Controls the visibility of the **right** button bar.
            By default, the bar is hidden when no entity is assigned.
            Enabling this option keeps the bar visible at all times, showing the `Off` state by default.

            Note: The bar remains visible if an entity is assigned, regardless of this setting.
          default: false
          selector:
            boolean:
        relay_1_local_fallback:
          name: Activate relay 1 local fallback - Enable/Disable (Optional)
          default: false
          description: >
            Activate this to use left button to toggle relay 1 if the panel is offline.

            *When left button is using the entity related to relay 1 the processing will always be local, even if fallback is disabled.*
          selector:
            boolean:
        left_button_entity:
          name: Left hardware button - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: &hardware-button-selector
            entity:
              filter:
                domain:
                  - alarm_control_panel
                  - automation
                  - button
                  - climate
                  - cover
                  - fan
                  - input_boolean
                  - input_button
                  - light
                  - lock
                  - media_player
                  - remote
                  - scene
                  - script
                  - switch
        left_button_name:
          name: Left hardware button - Label (Optional)
          description: >
            Label which should be displayed (10 characters are supported).

            ***Note:** This label is not visible on the US landscape model.*
          default: ""
          selector:
            text:
        left_button_hold_select:
          name: Left hardware button hold assignment (Optional)
          description: "Select what should happen on hold."
          default: 'Default'
          selector: &hardware-button-hold-selector
            select:
              options:
                - Default
                - Custom Action
        left_button_hold_custom_action:
          name: Left hardware button custom hold action (Optional)
          description: "The action(s) to launch on hold."
          default: []
          selector:
            action:
        left_button_state_entity:
          name: Left hardware button - State Indicator Entity (Optional)
          description: >
            Specifies the entity reflecting the state of the left button's indicator bar.

            If not set, the state of the controlled entity itself will dictate the indicator's state.
          default: []
          selector: &hardware-button-state-selector
            entity:
              filter:
                domain:
                  - alarm_control_panel
                  - binary_sensor
                  - climate
                  - cover
                  - fan
                  - input_boolean
                  - light
                  - lock
                  - media_player
                  - remote
                  - switch
        left_button_color:
          name: Left hardware button - Text color
          description: "Choose a color for the button's display text."
          default: [200, 204, 200]
          selector: *color_selector
        relay_2_local_fallback:
          name: Activate relay 2 local fallback - Enable/Disable (Optional)
          default: false
          description: >
            Activate this to use right button to toggle relay 2 if the panel is offline.

            *When right button is using the entity related to relay 2 the processing will always be local, even if fallback is disabled.*
          selector:
            boolean:
        right_button_entity:
          name: Right hardware button - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *hardware-button-selector
        right_button_name:
          name: Right hardware button - Label (Optional)
          description: >
            Label which should be displayed (10 characters are supported).

            ***Note:** This label is not visible on the US landscape model.*
          default: ""
          selector:
            text:
        right_button_hold_select:
          name: Right hardware button hold assignment (Optional)
          description: "Select what should happen on hold."
          default: 'Default'
          selector: *hardware-button-hold-selector
        right_button_hold_custom_action:
          name: Right hardware button custom hold action (Optional)
          description: "The action(s) to launch on hold."
          default: []
          selector:
            action:
        right_button_state_entity:
          name: Right hardware button - State Indicator Entity (Optional)
          description: >
            Specifies the entity reflecting the state of the right button's indicator bar.

            If not set, the state of the controlled entity itself will dictate the indicator's state.
          default: []
          selector: *hardware-button-state-selector
        right_button_color:
          name: Right hardware button - Text color
          description: "Choose a color for the button's display text."
          default: [200, 204, 200]
          selector: *color_selector
    button_pages:
      name: Button pages - Overall (optional)
      icon: mdi:gesture-tap-button
      description: Select how to display the button pages.
      collapsed: true
      input:
        button_pages_icon_size:
          name: Icon size
          description: Please select the size of the icons shown on the button pages.
          default: '8'
          selector:
            select:
              multiple: false
              options:
                - label: 24px
                  value: '7'
                - label: 32px
                  value: '8'
                - label: 48px
                  value: '10'
    button_page_01:
      name: Button page 01 (optional)
      icon: mdi:gesture-tap-button
      description: Select what to display in the button page.
      collapsed: true
      input:
        button_page01_label:
          name: Page title
          description: Please select the label which should be displayed in the top of the page.
          default: ""
          selector:
            text:
        entity01:
          name: Button page 1, Button 1 - Entity (Optional)
          description: Entity which should toggle.
          default: []
          selector: &button-entity-selector
            entity:
              filter:
                domain:
                  - alarm_control_panel
                  - automation
                  - binary_sensor
                  - button
                  - climate
                  - cover
                  - fan
                  - input_boolean
                  - input_button
                  - light
                  - lock
                  - media_player
                  - person
                  - remote
                  - scene
                  - script
                  - switch
        entity01_name:
          name: Button page 1, Button 1 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity01_icon:
          name: Button page 1, Button 1 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity01_icon_color:
          name: Button page 1, Button 1 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity01_confirm:
          name: Button page 1, Button 1 - Confirm execution of the button press
          default: false
          description: &description_ask_for_confirmation >
            *Ask for confirmation to execute action*
          selector:
            boolean:
        entity02:
          name: Button page 1, Button 2 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity02_name:
          name: Button page 1, Button 2 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity02_icon:
          name: Button page 1, Button 2 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity02_icon_color:
          name: Button page 1, Button 2 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity02_confirm:
          name: Button page 1, Button 2 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity03:
          name: Button page 1, Button 3 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity03_name:
          name: Button page 1, Button 3 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity03_icon:
          name: Button page 1, Button 3 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity03_icon_color:
          name: Button page 1, Button 3 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity03_confirm:
          name: Button page 1, Button 3 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity04:
          name: Button page 1, Button 4 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity04_name:
          name: Button page 1, Button 4 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity04_icon:
          name: Button page 1, Button 4 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity04_icon_color:
          name: Button page 1, Button 4 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity04_confirm:
          name: Button page 1, Button 4 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity05:
          name: Button page 1, Button 5 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity05_name:
          name: Button page 1, Button 5 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity05_icon:
          name: Button page 1, Button 5 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity05_icon_color:
          name: Button page 1, Button 5 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity05_confirm:
          name: Button page 1, Button 5 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity06:
          name: Button page 1, Button 6 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity06_name:
          name: Button page 1, Button 6 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity06_icon:
          name: Button page 1, Button 6 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity06_icon_color:
          name: Button page 1, Button 6 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity06_confirm:
          name: Button page 1, Button 6 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity07:
          name: Button page 1, Button 7 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity07_name:
          name: Button page 1, Button 7 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity07_icon:
          name: Button page 1, Button 7 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity07_icon_color:
          name: Button page 1, Button 7 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity07_confirm:
          name: Button page 1, Button 7 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity08:
          name: Button page 1, Button 8 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity08_name:
          name: Button page 1, Button 8 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity08_icon:
          name: Button page 1, Button 8 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity08_icon_color:
          name: Button page 1, Button 8 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity08_confirm:
          name: Button page 1, Button 8 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
    button_page_02:
      name: Button page 02 (optional)
      icon: mdi:gesture-tap-button
      description: Select what to display in the button page.
      collapsed: true
      input:
        button_page02_label:
          name: Page title
          description: Please select the label which should be displayed in the top of the page.
          default: ""
          selector:
            text:
        entity09:
          name: Button page 2, Button 1 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity09_name:
          name: Button page 2, Button 1 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity09_icon:
          name: Button page 2, Button 1 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity09_icon_color:
          name: Button page 2, Button 1 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity09_confirm:
          name: Button page 2, Button 1 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity10:
          name: Button page 2, Button 2 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity10_name:
          name: Button page 2, Button 2 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity10_icon:
          name: Button page 2, Button 2 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity10_icon_color:
          name: Button page 2, Button 2 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity10_confirm:
          name: Button page 2, Button 2 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity11:
          name: Button page 2, Button 3 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity11_name:
          name: Button page 2, Button 3 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity11_icon:
          name: Button page 2, Button 3 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity11_icon_color:
          name: Button page 2, Button 3 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity11_confirm:
          name: Button page 2, Button 3 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity12:
          name: Button page 2, Button 4 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity12_name:
          name: Button page 2, Button 4 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity12_icon:
          name: Button page 2, Button 4 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity12_icon_color:
          name: Button page 2, Button 4 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity12_confirm:
          name: Button page 2, Button 4 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity13:
          name: Button page 2, Button 5 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity13_name:
          name: Button page 2, Button 5 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity13_icon:
          name: Button page 2, Button 5 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity13_icon_color:
          name: Button page 2, Button 5 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity13_confirm:
          name: Button page 2, Button 5 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity14:
          name: Button page 2, Button 6 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity14_name:
          name: Button page 2, Button 6 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity14_icon:
          name: Button page 2, Button 6 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity14_icon_color:
          name: Button page 2, Button 6 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity14_confirm:
          name: Button page 2, Button 6 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity15:
          name: Button page 2, Button 7 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity15_name:
          name: Button page 2, Button 7 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity15_icon:
          name: Button page 2, Button 7 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity15_icon_color:
          name: Button page 2, Button 7 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity15_confirm:
          name: Button page 2, Button 7 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity16:
          name: Button page 2, Button 8 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity16_name:
          name: Button page 2, Button 8 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity16_icon:
          name: Button page 2, Button 8 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity16_icon_color:
          name: Button page 2, Button 8 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity16_confirm:
          name: Button page 2, Button 8 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
    button_page_03:
      name: Button page 03 (optional)
      icon: mdi:gesture-tap-button
      description: Select what to display in the button page.
      collapsed: true
      input:
        button_page03_label:
          name: Page title
          description: Please select the label which should be displayed in the top of the page.
          default: ""
          selector:
            text:
        entity17:
          name: Button page 3, Button 1 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity17_name:
          name: Button page 3, Button 1 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity17_icon:
          name: Button page 3, Button 1 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity17_icon_color:
          name: Button page 3, Button 1 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity17_confirm:
          name: Button page 3, Button 1 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity18:
          name: Button page 3, Button 2 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity18_name:
          name: Button page 3, Button 2 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity18_icon:
          name: Button page 3, Button 2 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity18_icon_color:
          name: Button page 3, Button 2 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity18_confirm:
          name: Button page 3, Button 2 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity19:
          name: Button page 3, Button 3 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity19_name:
          name: Button page 3, Button 3 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity19_icon:
          name: Button page 3, Button 3 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity19_icon_color:
          name: Button page 3, Button 3 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity19_confirm:
          name: Button page 3, Button 3 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity20:
          name: Button page 3, Button 4 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity20_name:
          name: Button page 3, Button 4 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity20_icon:
          name: Button page 3, Button 4 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity20_icon_color:
          name: Button page 3, Button 4 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity20_confirm:
          name: Button page 3, Button 4 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity21:
          name: Button page 3, Button 5 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity21_name:
          name: Button page 3, Button 5 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity21_icon:
          name: Button page 3, Button 5 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity21_icon_color:
          name: Button page 3, Button 5 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity21_confirm:
          name: Button page 3, Button 5 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity22:
          name: Button page 3, Button 6 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity22_name:
          name: Button page 3, Button 6 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity22_icon:
          name: Button page 3, Button 6 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity22_icon_color:
          name: Button page 3, Button 6 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity22_confirm:
          name: Button page 3, Button 6 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity23:
          name: Button page 3, Button 7 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity23_name:
          name: Button page 3, Button 7 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity23_icon:
          name: Button page 3, Button 7 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity23_icon_color:
          name: Button page 3, Button 7 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity23_confirm:
          name: Button page 3, Button 7 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity24:
          name: Button page 3, Button 8 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity24_name:
          name: Button page 3, Button 8 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity24_icon:
          name: Button page 3, Button 8 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity24_icon_color:
          name: Button page 3, Button 8 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity24_confirm:
          name: Button page 3, Button 8 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
    button_page_04:
      name: Button page 04 (optional)
      icon: mdi:gesture-tap-button
      description: Select what to display in the button page.
      collapsed: true
      input:
        button_page04_label:
          name: Page title
          description: Please select the label which should be displayed in the top of the page.
          default: ""
          selector:
            text:
        entity25:
          name: Button page 4, Button 1 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity25_name:
          name: Button page 4, Button 1 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity25_icon:
          name: Button page 4, Button 1 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity25_icon_color:
          name: Button page 4, Button 1 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity25_confirm:
          name: Button page 4, Button 1 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity26:
          name: Button page 4, Button 2 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity26_name:
          name: Button page 4, Button 2 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity26_icon:
          name: Button page 4, Button 2 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity26_icon_color:
          name: Button page 4, Button 2 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity26_confirm:
          name: Button page 4, Button 2 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity27:
          name: Button page 4, Button 3 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity27_name:
          name: Button page 4, Button 3 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity27_icon:
          name: Button page 4, Button 3 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity27_icon_color:
          name: Button page 4, Button 3 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity27_confirm:
          name: Button page 4, Button 3 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity28:
          name: Button page 4, Button 4 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity28_name:
          name: Button page 4, Button 4 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity28_icon:
          name: Button page 4, Button 4 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity28_icon_color:
          name: Button page 4, Button 4 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity28_confirm:
          name: Button page 4, Button 4 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity29:
          name: Button page 4, Button 5 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity29_name:
          name: Button page 4, Button 5 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity29_icon:
          name: Button page 4, Button 5 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity29_icon_color:
          name: Button page 4, Button 5 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity29_confirm:
          name: Button page 4, Button 5 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity30:
          name: Button page 4, Button 6 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity30_name:
          name: Button page 4, Button 6 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity30_icon:
          name: Button page 4, Button 6 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity30_icon_color:
          name: Button page 4, Button 6 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity30_confirm:
          name: Button page 4, Button 6 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity31:
          name: Button page 4, Button 7 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity31_name:
          name: Button page 4, Button 7 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity31_icon:
          name: Button page 4, Button 7 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity31_icon_color:
          name: Button page 4, Button 7 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity31_confirm:
          name: Button page 4, Button 7 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
        entity32:
          name: Button page 4, Button 8 - Entity (Optional)
          description: "Entity to be controlled."
          default: []
          selector: *button-entity-selector
        entity32_name:
          name: Button page 4, Button 8 - Label (Optional)
          description: "Specify a label for this button (supports up to 10 characters)."
          default: ""
          selector:
            text:
        entity32_icon:
          name: Button page 4, Button 8 - Icon (Optional)
          description: *description_icon_automatic_default
          default: []
          selector: *selector_icon
        entity32_icon_color:
          name: Button page 4, Button 8 - Icon color
          description: "Icon color which should be displayed when button is `On`."
          default: [0, 128, 248]
          selector: *color_selector
        entity32_confirm:
          name: Button page 4, Button 8 - Confirm execution of the button press
          default: false
          description: *description_ask_for_confirmation
          selector:
            boolean:
    entities_pages:
      name: Entities pages - Overall (optional)
      icon: mdi:format-list-bulleted-square
      description: Select how to display the entities pages.
      collapsed: true
      input:
        home_button06_icon:
          name: Entity page - Icon (Optional)
          description: >
            *HOME page*

            *Icon which should be displayed (Default mdi:format-list-bulleted-square)*
          default: mdi:format-list-bulleted-square  # EDCF
          selector: *selector_icon
        home_button06_icon_color:
          name: Entity page - Icon color
          description: *description_icon_color
          default: [200, 204, 200]
          selector: *color_selector
        entitypages_value_alignment:
          name: Value column alignment
          description: >
            *Entity pages*
            *Select the alignment for the column containing the values on the entity pages.*
          default: "0"
          selector:
            select:
              multiple: false
              options:
                - label: "Right (default)"
                  value: "0"
                - label: "Center"
                  value: "1"
                - label: "Left"
                  value: "2"
        entitypages_show_entities_icons:
          name: Entity Pages - Show Entity Icons
          description: "Display icons associated with each entity."
          default: true
          selector:
            boolean:
    entities_page_01:
      name: Entities page 01 (optional)
      icon: mdi:format-list-bulleted-square
      description: Select what to display in the entities page.
      collapsed: true
      input:
        entity_page01_label:
          name: Page title
          description: Please select the label which should be displayed in the top of the page.
          default: ""
          selector:
            text:
        entities_entity01:
          name: Entity page 1, Row 1 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity01_name:
          name: Entity page 1, Row 1 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity01_icon:
          name: Entity page 1, Row 1 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity02:
          name: Entity page 1, Row 2 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity02_name:
          name: Entity page 1, Row 2 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity02_icon:
          name: Entity page 1, Row 2 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity03:
          name: Entity page 1, Row 3 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity03_name:
          name: Entity page 1, Row 3 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity03_icon:
          name: Entity page 1, Row 3 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity04:
          name: Entity page 1, Row 4 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity04_name:
          name: Entity page 1, Row 4 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity04_icon:
          name: Entity page 1, Row 4 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity05:
          name: Entity page 1, Row 5 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity05_name:
          name: Entity page 1, Row 5 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity05_icon:
          name: Entity page 1, Row 5 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity06:
          name: Entity page 1, Row 6 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity06_name:
          name: Entity page 1, Row 6 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity06_icon:
          name: Entity page 1, Row 6 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity07:
          name: Entity page 1, Row 7 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity07_name:
          name: Entity page 1, Row 7 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity07_icon:
          name: Entity page 1, Row 7 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity08:
          name: Entity page 1, Row 8 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity08_name:
          name: Entity page 1, Row 8 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity08_icon:
          name: Entity page 1, Row 8 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
    entities_page_02:
      name: Entities page 02 (optional)
      icon: mdi:format-list-bulleted-square
      description: Select what to display in the entities page.
      collapsed: true
      input:
        entity_page02_label:
          name: Page title
          description: Please select the label which should be displayed in the top of the page.
          default: ""
          selector:
            text:
        entities_entity09:
          name: Entity page 2, Row 1 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity09_name:
          name: Entity page 2, Row 1 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity09_icon:
          name: Entity page 2, Row 1 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity10:
          name: Entity page 2, Row 2 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity10_name:
          name: Entity page 2, Row 2 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity10_icon:
          name: Entity page 2, Row 2 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity11:
          name: Entity page 2, Row 3 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity11_name:
          name: Entity page 2, Row 3 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity11_icon:
          name: Entity page 2, Row 3 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity12:
          name: Entity page 2, Row 4 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity12_name:
          name: Entity page 2, Row 4 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity12_icon:
          name: Entity page 2, Row 4 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity13:
          name: Entity page 2, Row 5 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity13_name:
          name: Entity page 2, Row 5 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity13_icon:
          name: Entity page 2, Row 5 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity14:
          name: Entity page 2, Row 6 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity14_name:
          name: Entity page 2, Row 6 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity14_icon:
          name: Entity page 2, Row 6 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity15:
          name: Entity page 2, Row 7 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity15_name:
          name: Entity page 2, Row 7 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity15_icon:
          name: Entity page 2, Row 7 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity16:
          name: Entity page 2, Row 8 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity16_name:
          name: Entity page 2, Row 8 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity16_icon:
          name: Entity page 2, Row 8 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
    entities_page_03:
      name: Entities page 03 (optional)
      icon: mdi:format-list-bulleted-square
      description: Select what to display in the entities page.
      collapsed: true
      input:
        entity_page03_label:
          name: Page title
          description: Please select the label which should be displayed in the top of the page.
          default: ""
          selector:
            text:
        entities_entity17:
          name: Entity page 3, Row 1 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity17_name:
          name: Entity page 3, Row 1 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity17_icon:
          name: Entity page 3, Row 1 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity18:
          name: Entity page 3, Row 2 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity18_name:
          name: Entity page 3, Row 2 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity18_icon:
          name: Entity page 3, Row 2 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity19:
          name: Entity page 3, Row 3 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity19_name:
          name: Entity page 3, Row 3 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity19_icon:
          name: Entity page 3, Row 3 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity20:
          name: Entity page 3, Row 4 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity20_name:
          name: Entity page 3, Row 4 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity20_icon:
          name: Entity page 3, Row 4 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity21:
          name: Entity page 3, Row 5 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity21_name:
          name: Entity page 3, Row 5 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity21_icon:
          name: Entity page 3, Row 5 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity22:
          name: Entity page 3, Row 6 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity22_name:
          name: Entity page 3, Row 6 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity22_icon:
          name: Entity page 3, Row 6 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity23:
          name: Entity page 3, Row 7 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity23_name:
          name: Entity page 3, Row 7 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity23_icon:
          name: Entity page 3, Row 7 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity24:
          name: Entity page 3, Row 8 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity24_name:
          name: Entity page 3, Row 8 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity24_icon:
          name: Entity page 3, Row 8 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
    entities_page_04:
      name: Entities page 04 (optional)
      icon: mdi:format-list-bulleted-square
      description: Select what to display in the entities page.
      collapsed: true
      input:
        entity_page04_label:
          name: Page title
          description: Please select the label which should be displayed in the top of the page.
          default: ""
          selector:
            text:
        entities_entity25:
          name: Entity page 4, Row 1 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity25_name:
          name: Entity page 4, Row 1 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity25_icon:
          name: Entity page 4, Row 1 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity26:
          name: Entity page 4, Row 2 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity26_name:
          name: Entity page 4, Row 2 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity26_icon:
          name: Entity page 4, Row 2 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity27:
          name: Entity page 4, Row 3 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity27_name:
          name: Entity page 4, Row 3 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity27_icon:
          name: Entity page 4, Row 3 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity28:
          name: Entity page 4, Row 4 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity28_name:
          name: Entity page 4, Row 4 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity28_icon:
          name: Entity page 4, Row 4 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity29:
          name: Entity page 4, Row 5 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity29_name:
          name: Entity page 4, Row 5 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity29_icon:
          name: Entity page 4, Row 5 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity30:
          name: Entity page 4, Row 6 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity30_name:
          name: Entity page 4, Row 6 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity30_icon:
          name: Entity page 4, Row 6 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity31:
          name: Entity page 4, Row 7 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity31_name:
          name: Entity page 4, Row 7 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity31_icon:
          name: Entity page 4, Row 7 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
        entities_entity32:
          name: Entity page 4, Row 8 - Entity (Optional)
          description: "Choose an entity to display in this position. If left blank, no entity will be shown."
          default: []
          selector:
            entity:
        entities_entity32_name:
          name: Entity page 4, Row 8 - Label (Optional)
          description: "Specify a custom label for this entity (optional). This label will replace the entity's default `friendly_name` if provided."
          default: ""
          selector:
            text:
        entities_entity32_icon:
          name: Entity page 4, Row 8 - Icon (Optional)
          description: "Set a custom icon for this entity (optional). If not set, the entity's default icon is used, if available. Leave blank for no icon."
          default: []
          selector: *selector_icon
    utitilities_page:
      name: Utilities page (optional)
      icon: mdi:gauge
      description: Select what to display in the Utilities page.
      collapsed: true
      input:
        utilities_enabled:
          name: Show utilities icon on Home page
          description: Activate Utilities page and Utilities button on the Home page.
          default: false
          selector:
            boolean:
        home_button08_icon:
          name: Home page - Utilities Icon (Optional)
          description: "Icon which should be displayed on the Home page (Default mdi:gauge)."
          default: mdi:gauge
          selector: *selector_icon
        home_button08_icon_color:
          name: Home page - Utilities Icon color
          description: *description_icon_color
          default: [200, 204, 200]
          selector: *color_selector
        utilities_page_cursor_width:
          name: Utilities Page - Cursor Width
          description: "Set the width of cursors indicating utility flows. Use 0 for no cursor, or 255 for automatic sizing."
          default: 255
          selector:
            number:
              min: 0
              max: 255
        utilities_page01_label:
          name: Utilities page - Label (Optional)
          description: "Label which should be displayed in the top of the page."
          default: "Utilitites Dashboard"
          selector:
            text: {}
        utilities_page01_icon:
          name: Utilities page - Icon (Optional)
          description: "Select the icon to be shown in the top left corner of the page."
          default: mdi:gauge
          selector: *selector_icon
        utilities_page01_home_label:
          name: Utilities page - Home - Label (Optional)
          description: "Label which should be displayed in the Home area."
          default: "Home"
          selector:
            text: {}
        utilities_page01_home_icon:
          name: Utilities page - Home - Icon (Optional)
          description: "Select the icon to be shown in the Home area. (Default: mdi:home-lightning-bolt-outline)."
          default: mdi:home-lightning-bolt-outline
          selector: *selector_icon
        utilities_page01_home_value1:
          name: Utilities page - Home - Value 1 (Optional)
          description: "Select the entity with values to be shown in the Home area."
          default: []
          selector:
            entity:
        utilities_page01_home_value2:
          name: Utilities page - Home - Value 2 (Optional)
          description: "Select the entity with values to be shown in the Home area."
          default: []
          selector:
            entity:
        utilities_page01_home_color:
          name: Utilities page - Home - Color (Optional)
          description: "Select the color for the items related to the Home area."
          default: [192, 192, 192]
          selector: *color_selector
        utilities_page01_grid_label:
          name: Utilities page - Grid - Label (Optional)
          description: "Label which should be displayed in the Grid area."
          default: "Grid"
          selector:
            text: {}
        utilities_page01_grid_icon:
          name: Utilities page - Grid - Icon (Optional)
          description: "Select the icon to be shown in the Grid area. (Default: mdi:transmission-tower)."
          default: mdi:transmission-tower
          selector: *selector_icon
        utilities_page01_grid_value1:
          name: Utilities page - Grid - Value 1 (Optional)
          description: "Select the entity with values to be shown in the Grid area."
          default: []
          selector:
            entity:
        utilities_page01_grid_value2:
          name: Utilities page - Grid - Value 2 (Optional)
          description: "Select the entity with values to be shown in the Grid area."
          default: []
          selector:
            entity:
        utilities_page01_grid_color:
          name: Utilities page - Grid - Color (Optional)
          description: "Select the color for the items related to the Grid area."
          default: [192, 192, 192]
          selector: *color_selector
        utilities_page01_main_line_reference:
          name: Main Line Direction Reference
          description: "Select a sensor to use as a reference for the main line's movement direction."
          default: []
          selector:
            entity:
              filter:
                domain:
                  - sensor
        utilities_page01_main_line_inverted:
          name: Main Line Direction Inverted
          description: "Enable this to reverse the main line's movement direction relative to the sensor's readings."
          default: false
          selector:
            boolean:
            ##### Utilities page 01 - Group 1 #####
        utilities_page01_group01_label:
          name: Utilities page - Group 1 - Label (Optional)
          description: "Label which should be displayed in the Group 1 area."
          default: ""
          selector:
            text:
        utilities_page01_group01_icon:
          name: Utilities page - Group 1 - Icon (Optional)
          description: "Select the icon to be shown in the Group 1 area."
          default: []
          selector: *selector_icon
        utilities_page01_group01_value1:
          name: Utilities page - Group 1 - Value 1 (Optional)
          description: "Select the entity with values to be shown in the Group 1 area."
          default: []
          selector:
            entity:
        utilities_page01_group01_value2:
          name: Utilities page - Group 1 - Value 2 (Optional)
          description: "Select the entity with values to be shown in the Group 1 area."
          default: []
          selector:
            entity:
        utilities_page01_group01_color:
          name: Utilities page - Group 1 - Color (Optional)
          description: "Select the color for the items related to the Group 1 area."
          default: [192, 192, 192]
          selector: *color_selector
        utilities_page01_group01_line_reference:
          name: Utilities page - Group 1 - Line Direction Reference
          description: "Select a sensor to use as a reference for the Group 1 line's movement direction."
          default: []
          selector:
            entity:
              filter:
                domain:
                  - sensor
        utilities_page01_group01_line_inverted:
          name: Utilities page - Group 1 - Line Direction Inverted
          description: "Enable this to reverse the Group 1 line's movement direction relative to the sensor's readings."
          default: false
          selector:
            boolean:
            ##### Utilities page 01 - Group 2 #####
        utilities_page01_group02_label:
          name: Utilities page - Group 2 - Label (Optional)
          description: "Label which should be displayed in the Group 2 area."
          default: ""
          selector:
            text:
        utilities_page01_group02_icon:
          name: Utilities page - Group 2 - Icon (Optional)
          description: "Select the icon to be shown in the Group 2 area."
          default: []
          selector: *selector_icon
        utilities_page01_group02_value1:
          name: Utilities page - Group 2 - Value 1 (Optional)
          description: "Select the entity with values to be shown in the Group 2 area."
          default: []
          selector:
            entity:
        utilities_page01_group02_value2:
          name: Utilities page - Group 2 - Value 2 (Optional)
          description: "Select the entity with values to be shown in the Group 2 area."
          default: []
          selector:
            entity:
        utilities_page01_group02_color:
          name: Utilities page - Group 2 - Color (Optional)
          description: "Select the color for the items related to the Group 2 area."
          default: [192, 192, 192]
          selector: *color_selector
        utilities_page01_group02_line_reference:
          name: Utilities page - Group 2 - Line Direction Reference
          description: "Select a sensor to use as a reference for the Group 2 line's movement direction."
          default: []
          selector:
            entity:
              filter:
                domain:
                  - sensor
        utilities_page01_group02_line_inverted:
          name: Utilities page - Group 2 - Line Direction Inverted
          description: "Enable this to reverse the Group 2 line's movement direction relative to the sensor's readings."
          default: false
          selector:
            boolean:
            ##### Utilities page 01 - Group 3 #####
        utilities_page01_group03_label:
          name: Utilities page - Group 3 - Label (Optional)
          description: "Label which should be displayed in the Group 3 area."
          default: ""
          selector:
            text:
        utilities_page01_group03_icon:
          name: Utilities page - Group 3 - Icon (Optional)
          description: "Select the icon to be shown in the Group 3 area."
          default: []
          selector: *selector_icon
        utilities_page01_group03_value1:
          name: Utilities page - Group 3 - Value 1 (Optional)
          description: "Select the entity with values to be shown in the Group 3 area."
          default: []
          selector:
            entity:
        utilities_page01_group03_value2:
          name: Utilities page - Group 3 - Value 2 (Optional)
          description: "Select the entity with values to be shown in the Group 3 area."
          default: []
          selector:
            entity:
        utilities_page01_group03_color:
          name: Utilities page - Group 3 - Color (Optional)
          description: "Select the color for the items related to the Group 3 area."
          default: [192, 192, 192]
          selector: *color_selector
        utilities_page01_group03_line_reference:
          name: Utilities page - Group 3 - Line Direction Reference
          description: "Select a sensor to use as a reference for the Group 3 line's movement direction."
          default: []
          selector:
            entity:
              filter:
                domain:
                  - sensor
        utilities_page01_group03_line_inverted:
          name: Utilities page - Group 3 - Line Direction Inverted
          description: "Enable this to reverse the Group 3 line's movement direction relative to the sensor's readings."
          default: false
          selector:
            boolean:
            ##### Utilities page 01 - Group 4 #####
        utilities_page01_group04_label:
          name: Utilities page - Group 4 - Label (Optional)
          description: "Label which should be displayed in the Group 4 area."
          default: ""
          selector:
            text:
        utilities_page01_group04_icon:
          name: Utilities page - Group 4 - Icon (Optional)
          description: "Select the icon to be shown in the Group 4 area."
          default: []
          selector: *selector_icon
        utilities_page01_group04_value1:
          name: Utilities page - Group 4 - Value 1 (Optional)
          description: "Select the entity with values to be shown in the Group 4 area."
          default: []
          selector:
            entity:
        utilities_page01_group04_value2:
          name: Utilities page - Group 4 - Value 2 (Optional)
          description: "Select the entity with values to be shown in the Group 4 area."
          default: []
          selector:
            entity:
        utilities_page01_group04_color:
          name: Utilities page - Group 4 - Color (Optional)
          description: "Select the color for the items related to the Group 4 area."
          default: [192, 192, 192]
          selector: *color_selector
        utilities_page01_group04_line_reference:
          name: Utilities page - Group 4 - Line Direction Reference
          description: "Select a sensor to use as a reference for the Group 4 line's movement direction."
          default: []
          selector:
            entity:
              filter:
                domain:
                  - sensor
        utilities_page01_group04_line_inverted:
          name: Utilities page - Group 4 - Line Direction Inverted
          description: "Enable this to reverse the Group 4 line's movement direction relative to the sensor's readings."
          default: false
          selector:
            boolean:
        utilities_page01_group05_label:
          name: Utilities page - Group 5 - Label (Optional)
          description: "Label which should be displayed in the Group 5 area."
          default: ""
          selector:
            text:
        utilities_page01_group05_icon:
          name: Utilities page - Group 5 - Icon (Optional)
          description: "Select the icon to be shown in the Group 5 area."
          default: []
          selector: *selector_icon
        utilities_page01_group05_value1:
          name: Utilities page - Group 5 - Value 1 (Optional)
          description: "Select the entity with values to be shown in the Group 5 area."
          default: []
          selector:
            entity:
        utilities_page01_group05_value2:
          name: Utilities page - Group 5 - Value 2 (Optional)
          description: "Select the entity with values to be shown in the Group 5 area."
          default: []
          selector:
            entity:
        utilities_page01_group05_color:
          name: Utilities page - Group 5 - Color (Optional)
          description: "Select the color for the items related to the Group 5 area."
          default: [192, 192, 192]
          selector: *color_selector
        utilities_page01_group05_line_reference:
          name: Utilities page - Group 5 - Line Direction Reference
          description: "Select a sensor to use as a reference for the Group 5 line's movement direction."
          default: []
          selector:
            entity:
              filter:
                domain:
                  - sensor
        utilities_page01_group05_line_inverted:
          name: Utilities page - Group 5 - Line Direction Inverted
          description: "Enable this to reverse the Group 5 line's movement direction relative to the sensor's readings."
          default: false
          selector:
            boolean:
        utilities_page01_group06_label:
          name: Utilities page - Group 6 - Label (Optional)
          description: "Label which should be displayed in the Group 6 area."
          default: ""
          selector:
            text:
        utilities_page01_group06_icon:
          name: Utilities page - Group 6 - Icon (Optional)
          description: "Select the icon to be shown in the Group 6 area."
          default: []
          selector: *selector_icon
        utilities_page01_group06_value1:
          name: Utilities page - Group 6 - Value 1 (Optional)
          description: "Select the entity with values to be shown in the Group 6 area."
          default: []
          selector:
            entity:
        utilities_page01_group06_value2:
          name: Utilities page - Group 6 - Value 2 (Optional)
          description: "Select the entity with values to be shown in the Group 6 area."
          default: []
          selector:
            entity:
        utilities_page01_group06_color:
          name: Utilities page - Group 6 - Color (Optional)
          description: "Select the color for the items related to the Group 6 area."
          default: [192, 192, 192]
          selector: *color_selector
        utilities_page01_group06_line_reference:
          name: Utilities page - Group 6 - Line Direction Reference
          description: "Select a sensor to use as a reference for the Group 6 line's movement direction."
          default: []
          selector:
            entity:
              filter:
                domain:
                  - sensor
        utilities_page01_group06_line_inverted:
          name: Utilities page - Group 6 - Line Direction Inverted
          description: "Enable this to reverse the Group 6 line's movement direction relative to the sensor's readings."
          default: false
          selector:
            boolean:
    notifications:
      name: Notifications (optional)
      icon: mdi:email
      collapsed: true
      input:
        home_button04_icon:
          name: Home page - Notification - Icon (Optional)
          description: "Icon which should be displayed (Default mdi:email)."
          default: mdi:email  # E1ED
          selector: *selector_icon
        home_button04_icon_color01:
          name: Home page - Notification read - Icon color
          description: *description_icon_color
          default: [200, 204, 200]
          selector: *color_selector
        home_button04_icon_color02:
          name: Home page - Notification unread - Icon color
          description: *description_icon_color
          default: [248, 0, 0]  # 63488 Red
          selector: *color_selector
    screensaver_settings:
      name: Screensaver (optional)
      icon: mdi:sleep
      description: Select how your panel will behave while sleeping.
      collapsed: true
      input:
        screensaver_display_time:
          name: Screen saver - Display time
          description: >
            Enable the display of time while sleeping (screensaver).


            **Important!**

            1. *Keeping the display always "on" may increase the temperature on your panel,
            requiring adjustments on the **Temperature correction** control to keep consistence with the environment temperature.*

            2. *Please set **Display Brightness Sleep** accordingly under the device's page
            (Settings > Devices & Services > ESPHome) to have the text visible.*
          default: false
          selector:
            boolean:
        screensaver_display_time_font_size:
          name: Screen saver - Display time font size
          description: >
            Font size to be used when displaying the time while sleeping (screensaver).

            ***ATTENTION!!** Some fonts may be limited by unavailable language chars or space in the screen.
            Please fall back to the default size if you have issues.*
          default: '6'
          selector:
            select:
              multiple: false
              options:
                - label: 72px (default)
                  value: '6'
                - label: 112px
                  value: '11'
                - label: 192px
                  value: '12'
        screensaver_display_time_font_color:
          name: Screen saver - Display time font color
          description: "Font color to be used when displaying the time while sleeping (screensaver)."
          default: [64, 64, 64]
          selector: *color_selector
        wake_up_sensors:
          name: Wake-up sensors
          description: "Select a sensors to wake-up the panel when the sensor turns `On`."
          default: []
          selector:
            entity:
              multiple: true
              filter:
                domain:
                  - binary_sensor
                device_class:
                  - door
                  - garage_door
                  - lock
                  - motion
                  - occupancy
                  - opening
                  - smoke
                  - sound
                  - vibration
                  - window
    media_player_settings:
      name: Media player (optional)
      icon: mdi:movie-cog
      collapsed: true
      input:
        media_player_update_interval:
          name: Media player - Update interval
          description: >
            Interval (msec) to call for an update from the media player entity.
            Lower values will improve the responsiveness, but could spam your Home Assistant with constant requests,
            while higher values will reduce the load on HA but the Media Player page can be laggy.
          default: 5000
          selector:
            number:
              min: 500
              max: 60000
              unit_of_measurement: milliseconds
        media_player_update_delay:
          name: Media player - Delay (msec) after entity updade call?
          default: 500
          selector:
            number:
              min: 0
              max: 5000
              unit_of_measurement: milliseconds
    advanced_settings:
      name: Advanced settings (optional)
      icon: mdi:cogs
      collapsed: true
      input:
        icon_color_fallback_on:
          name: Icon fallback color when state is "**ON**"
          description: >
            *General*

            *Which default color should be used for icons when the state is **ON** while a custom color is not selected and the domain does not provides a state-based color?*
          default: [200, 204, 200]
          selector: *color_selector
        icon_color_fallback_off:
          name: Icon fallback color when state is "**OFF**"
          description: >
            *General*

            *Which default color should be used fo icons when the state is **OFF**?*
          default: [92, 92, 92]
          selector: *color_selector
        delay:
          name: Command Delay to Prevent Overload
          description: >
            Adjusts the delay between sequential commands to the Nextion display, preventing overload and synchronization issues.
            While increasing delay enhances stability, it may slow down page rendering.
          default: 10
          selector:
            number:
              min: 0
              max: 250
              step: 1
              unit_of_measurement: milliseconds
              mode: box
        delay_boot:
          name: Command Delay to Prevent Overload during panel's boot
          description: >
            Adjusts the delay between sequential commands to the Nextion display, preventing overload and synchronization issues.
            While increasing delay enhances stability, it may slow down the boot sequence.
          default: 250
          selector:
            number:
              min: 0
              max: 2500
              step: 1
              unit_of_measurement: milliseconds
              mode: box
        tft_path:
          name: Nextion TFT File Folder (Optional)
          description: >
            Specify the path to the folder containing the Nextion TFT file.
            Note that configuring the [Folder Watcher](https://www.home-assistant.io/integrations/folder_watcher/) in `configuration.yaml` is required for this path to be monitored.

            With this, the Blueprint will trigger a TFT upload every time a file on that folder changed.

            **Note:**

            - This is to be used together with the option `nextion_upload_tft` on the "Update TFT Display - Model" option on the device's page.

            - This is a relative path on Home Assistant file system pointing to the www folder where you store your `nspanel_xxx.tft` files. Please do not use the url here.
          default: ""
          selector:
            text: {}
        domain_automation_button_action:
          name: System settings - Button action for automation entities
          description: >
            Select the button action when associated to `automation.xxx` entities.

            ***Toggle:** Enable/disable the automation (default).*

            ***Trigger:** Run the automation (ignoring conditions).*
          default: "toggle"
          selector:
            select:
              multiple: false
              options:
                - label: "Toggle (default)"
                  value: "toggle"
                - label: "Trigger"
                  value: "trigger"
        sun_entity:
          name: System Settings - Sun Entity
          description: "Select the entity that indicates the Sun's position."
          default: "sun.sun"
          selector:
            entity:
              filter:
                domain:
                  - sun

mode: parallel
max: 50

trace:
  stored_traces: 10

trigger_variables:
  nspanel_deviceid: !input nspanel_name
  nspanel_entities: '{{ device_entities(nspanel_deviceid) }}'
  device_name: >
    {%- if nspanel_entities | count > 0 %}
      {{ (nspanel_entities | selectattr(None, "search", "_nextion_display") | list | first).split(".")[1].split("_nextion_display")[0] }}
    {%- elif nspanel_deviceid is string %}
      {{ nspanel_deviceid | regex_replace("[^a-zA-Z0-9]", "_") | regex_replace("_+", "_") | lower }}
    {%- endif %}

  device_name_sensor: >
    {{
      nspanel_entities | selectattr(None, "search", "sensor.*_device_name") | list | last
      if nspanel_entities | selectattr(None, "search", "sensor.*_device_name") | list | count > 0
      else ("sensor." ~ device_name ~ "_device_name")
    }}

  relay01_entity: >
    {{
      nspanel_entities | selectattr(None, "search", "switch.*_relay_1") | list | last
      if nspanel_entities | selectattr(None, "search", "switch.*_relay_1") | list | count > 0
      else ("switch." ~ device_name ~ "_relay_1")
    }}
  relay02_entity: >
    {{
      nspanel_entities | selectattr(None, "search", "switch.*_relay_2") | list | last
      if nspanel_entities | selectattr(None, "search", "switch.*_relay_2") | list | count > 0
      else ("switch." ~ device_name ~ "_relay_2")
    }}

  currentpage: >
    {{
      nspanel_entities | selectattr(None, "search", "sensor.*_current_page") | list | last
      if nspanel_entities | selectattr(None, "search", "sensor.*_current_page") | list | count > 0
      else ("sensor." ~ device_name ~ "_current_page")
    }}
  nspaneltemp: >
    {{
      nspanel_entities | selectattr(None, "search", "sensor.*_temperature") | list | last
      if nspanel_entities | selectattr(None, "search", "sensor.*_temperature") | list | count > 0
      else ("sensor." ~ device_name ~ "_temperature")
    }}

  thermostat_embedded: >
    {{
      nspanel_entities | selectattr(None, "search", "climate.*_thermostat") | list | last
      if nspanel_entities | selectattr(None, "search", "climate.*_thermostat") | list | count > 0
      else ("climate." ~ device_name ~ "_thermostat")
    }}

  utilities_line_reference:
    page01:
      main: !input utilities_page01_main_line_reference
      group01: !input utilities_page01_group01_line_reference
      group02: !input utilities_page01_group02_line_reference
      group03: !input utilities_page01_group03_line_reference
      group04: !input utilities_page01_group04_line_reference
      group05: !input utilities_page01_group05_line_reference
      group06: !input utilities_page01_group06_line_reference

variables:
  blueprint_version: '4.3.29'
  pages:
    current: '{{ states(currentpage) }}'
    home: "home"
    weatherpages:
      - "weather01"
      - "weather02"
      - "weather03"
      - "weather04"
      - "weather05"
    climate: "climate"
    settings: "settings"
    boot: "boot"
    screensaver: "screensaver"
    light: "light"
    cover: "cover"
    fan: "fan"
    buttonpages:
      - "buttonpage01"
      - "buttonpage02"
      - "buttonpage03"
      - "buttonpage04"
    notification: "notification"
    qrcode: "qrcode"
    entitypages:
      - "entitypage01"
      - "entitypage02"
      - "entitypage03"
      - "entitypage04"
    alarm: "alarm"
    keyb_num: "keyb_num"
    media_player: "media_player"
    confirm: "confirm"
    utilities: "utilities"

  home_page_background_update: !input home_page_background_update

  indoor_temperature_sensor_input: !input indoortemp
  indoor_temperature_sensor: >
    {{
      indoor_temperature_sensor_input
      if indoor_temperature_sensor_input is string and indoor_temperature_sensor_input.split(".") | count == 2
      else nspaneltemp
    }}
  embedded_indoor_temperature: '{{ indoor_temperature_sensor == nspaneltemp }}'

  nextion_display_sensor: >
    {{
      nspanel_entities | selectattr(None, "search", "sensor.*_nextion_display") | list | last
      if nspanel_entities | selectattr(None, "search", "sensor.*_nextion_display") | list | count > 0
      else ("sensor." ~ device_name ~ "_nextion_display")
    }}

  detailed_entity: >
    {{
      nspanel_entities | selectattr(None, "search", "sensor.*_detailed_entity") | list | last
      if nspanel_entities | selectattr(None, "search", "sensor.*_detailed_entity") | list | count > 0
      else ("sensor." ~ device_name ~ "_detailed_entity")
    }}

# yamllint disable rule:indentation rule:comments-indentation
trigger:
  ##### Trigger - General #################################################################################################################

    ##### Panel Event - This is the new main event handler introduced on v4.0 to get info from the panel #####
    - id: nspanel_event
      platform: event
      event_type: esphome.nspanel_ha_blueprint
      event_data:
        device_id: !input nspanel_name

    ##### Automation reload or HA started
    - platform: event
      event_type: automation_reloaded
      id: automation_reloaded
    - platform: homeassistant
      event: start
      id: ha_started

      ##### Wake-up sensor
    - platform: state
      entity_id: !input wake_up_sensors
      to: "on"
      id: wake_up_sensors

  ##### Trigger - Buttons - State change #################################################################################################################
    ##### Button01 Sync #####
    - platform: state
      entity_id: !input 'entity01'
      id: trigger_buttonpage_state

    ##### Button02 Sync #####
    - platform: state
      entity_id: !input 'entity02'
      id: trigger_buttonpage_state

    ##### Button03 Sync #####
    - platform: state
      entity_id: !input 'entity03'
      id: trigger_buttonpage_state

    ##### Button04 Sync #####
    - platform: state
      entity_id: !input 'entity04'
      id: trigger_buttonpage_state

    ##### Button05 Sync #####
    - platform: state
      entity_id: !input 'entity05'
      id: trigger_buttonpage_state

    ##### Button06 Sync #####
    - platform: state
      entity_id: !input 'entity06'
      id: trigger_buttonpage_state

    ##### Button07 Sync #####
    - platform: state
      entity_id: !input 'entity07'
      id: trigger_buttonpage_state

    ##### Button08 Sync #####
    - platform: state
      entity_id: !input 'entity08'
      id: trigger_buttonpage_state

    ##### Button09 Sync #####
    - platform: state
      entity_id: !input 'entity09'
      id: trigger_buttonpage_state

    ##### Button10 Sync #####
    - platform: state
      entity_id: !input 'entity10'
      id: trigger_buttonpage_state

    ##### Button11 Sync #####
    - platform: state
      entity_id: !input 'entity11'
      id: trigger_buttonpage_state

    ##### Button12 Sync #####
    - platform: state
      entity_id: !input 'entity12'
      id: trigger_buttonpage_state

    ##### Button13 Sync #####
    - platform: state
      entity_id: !input 'entity13'
      id: trigger_buttonpage_state

    ##### Button14 Sync #####
    - platform: state
      entity_id: !input 'entity14'
      id: trigger_buttonpage_state

    ##### Button15 Sync #####
    - platform: state
      entity_id: !input 'entity15'
      id: trigger_buttonpage_state

    ##### Button16 Sync #####
    - platform: state
      entity_id: !input 'entity16'
      id: trigger_buttonpage_state

    ##### Button17 Sync #####
    - platform: state
      entity_id: !input 'entity17'
      id: trigger_buttonpage_state

    ##### Button18 Sync #####
    - platform: state
      entity_id: !input 'entity18'
      id: trigger_buttonpage_state

    ##### Button19 Sync #####
    - platform: state
      entity_id: !input 'entity19'
      id: trigger_buttonpage_state

    ##### Button20 Sync #####
    - platform: state
      entity_id: !input 'entity20'
      id: trigger_buttonpage_state

    ##### Button21 Sync #####
    - platform: state
      entity_id: !input 'entity21'
      id: trigger_buttonpage_state

    ##### Button22 Sync #####
    - platform: state
      entity_id: !input 'entity22'
      id: trigger_buttonpage_state

    ##### Button23 Sync #####
    - platform: state
      entity_id: !input 'entity23'
      id: trigger_buttonpage_state

    ##### Button24 Sync #####
    - platform: state
      entity_id: !input 'entity24'
      id: trigger_buttonpage_state

    ##### Button25 Sync #####
    - platform: state
      entity_id: !input 'entity25'
      id: trigger_buttonpage_state

    ##### Button26 Sync #####
    - platform: state
      entity_id: !input 'entity26'
      id: trigger_buttonpage_state

    ##### Button27 Sync #####
    - platform: state
      entity_id: !input 'entity27'
      id: trigger_buttonpage_state

    ##### Button28 Sync #####
    - platform: state
      entity_id: !input 'entity28'
      id: trigger_buttonpage_state

    ##### Button29 Sync #####
    - platform: state
      entity_id: !input 'entity29'
      id: trigger_buttonpage_state

    ##### Button30 Sync #####
    - platform: state
      entity_id: !input 'entity30'
      id: trigger_buttonpage_state

    ##### Button31 Sync #####
    - platform: state
      entity_id: !input 'entity31'
      id: trigger_buttonpage_state

    ##### Button32 Sync #####
    - platform: state
      entity_id: !input 'entity32'
      id: trigger_buttonpage_state

  ##### Trigger - Entity pages - State change ###############################################################################################
    - alias: entities_entity01
      platform: state
      entity_id: !input 'entities_entity01'
      id: trigger_entitypage_state

    - alias: entities_entity02
      platform: state
      entity_id: !input 'entities_entity02'
      id: trigger_entitypage_state

    - alias: entities_entity03
      platform: state
      entity_id: !input 'entities_entity03'
      id: trigger_entitypage_state

    - alias: entities_entity04
      platform: state
      entity_id: !input 'entities_entity04'
      id: trigger_entitypage_state

    - alias: entities_entity05
      platform: state
      entity_id: !input 'entities_entity05'
      id: trigger_entitypage_state

    - alias: entities_entity06
      platform: state
      entity_id: !input 'entities_entity06'
      id: trigger_entitypage_state

    - alias: entities_entity07
      platform: state
      entity_id: !input 'entities_entity07'
      id: trigger_entitypage_state

    - alias: entities_entity08
      platform: state
      entity_id: !input 'entities_entity08'
      id: trigger_entitypage_state

    - alias: entities_entity09
      platform: state
      entity_id: !input 'entities_entity09'
      id: trigger_entitypage_state

    - alias: entities_entity10
      platform: state
      entity_id: !input 'entities_entity10'
      id: trigger_entitypage_state

    - alias: entities_entity11
      platform: state
      entity_id: !input 'entities_entity11'
      id: trigger_entitypage_state

    - alias: entities_entity12
      platform: state
      entity_id: !input 'entities_entity12'
      id: trigger_entitypage_state

    - alias: entities_entity13
      platform: state
      entity_id: !input 'entities_entity13'
      id: trigger_entitypage_state

    - alias: entities_entity14
      platform: state
      entity_id: !input 'entities_entity14'
      id: trigger_entitypage_state

    - alias: entities_entity15
      platform: state
      entity_id: !input 'entities_entity15'
      id: trigger_entitypage_state

    - alias: entities_entity16
      platform: state
      entity_id: !input 'entities_entity16'
      id: trigger_entitypage_state

    - alias: entities_entity17
      platform: state
      entity_id: !input 'entities_entity17'
      id: trigger_entitypage_state

    - alias: entities_entity18
      platform: state
      entity_id: !input 'entities_entity18'
      id: trigger_entitypage_state

    - alias: entities_entity19
      platform: state
      entity_id: !input 'entities_entity19'
      id: trigger_entitypage_state

    - alias: entities_entity20
      platform: state
      entity_id: !input 'entities_entity20'
      id: trigger_entitypage_state

    - alias: entities_entity21
      platform: state
      entity_id: !input 'entities_entity21'
      id: trigger_entitypage_state

    - alias: entities_entity22
      platform: state
      entity_id: !input 'entities_entity22'
      id: trigger_entitypage_state

    - alias: entities_entity23
      platform: state
      entity_id: !input 'entities_entity23'
      id: trigger_entitypage_state

    - alias: entities_entity24
      platform: state
      entity_id: !input 'entities_entity24'
      id: trigger_entitypage_state

    - alias: entities_entity25
      platform: state
      entity_id: !input 'entities_entity25'
      id: trigger_entitypage_state

    - alias: entities_entity26
      platform: state
      entity_id: !input 'entities_entity26'
      id: trigger_entitypage_state

    - alias: entities_entity27
      platform: state
      entity_id: !input 'entities_entity27'
      id: trigger_entitypage_state

    - alias: entities_entity28
      platform: state
      entity_id: !input 'entities_entity28'
      id: trigger_entitypage_state

    - alias: entities_entity29
      platform: state
      entity_id: !input 'entities_entity29'
      id: trigger_entitypage_state

    - alias: entities_entity30
      platform: state
      entity_id: !input 'entities_entity30'
      id: trigger_entitypage_state

    - alias: entities_entity31
      platform: state
      entity_id: !input 'entities_entity31'
      id: trigger_entitypage_state

    - alias: entities_entity32
      platform: state
      entity_id: !input 'entities_entity32'
      id: trigger_entitypage_state

  ##### Trigger - Home - Chips - State change #################################################################################################################
    ##### Chip 01 #####
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: !input 'chip01'
      id: trigger_chip_state

    ##### Chip 02 #####
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: !input 'chip02'
      id: trigger_chip_state

    ##### Chip 03 #####
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: !input 'chip03'
      id: trigger_chip_state

    ##### Chip 04 #####
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: !input 'chip04'
      id: trigger_chip_state

    ##### Chip 05 #####
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: !input 'chip05'
      id: trigger_chip_state

    ##### Chip 06 #####
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: !input 'chip06'
      id: trigger_chip_state

    ##### Chip 07 #####
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: !input 'chip07'
      id: trigger_chip_state

  ##### Trigger - Home - Values - State change #################################################################################################################

    ##### HOME Value 01 #####
    - platform: state
      entity_id: !input home_value01
      not_to:
        - unknown
        - unavailable
      for:
        seconds: 1
      id: home_values_state

    ##### HOME Value 02 #####
    - platform: state
      entity_id: !input home_value02
      not_to:
        - unknown
        - unavailable
      for:
        seconds: 1
      id: home_values_state

    ##### HOME Value 03 #####
    - platform: state
      entity_id: !input home_value03
      not_to:
        - unknown
        - unavailable
      for:
        seconds: 1
      id: home_values_state

    ##### HOME Value 04 #####
    - platform: state
      entity_id: !input home_value04
      not_to:
        - unknown
        - unavailable
      for:
        seconds: 1
      id: home_values_state

  ##### Trigger - Home - Custom buttons - State change #################################################################################################################
    ##### Custom button 01 #####
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: !input 'home_custom_button01'
      id: home_custom_buttons
    ##### Custom button 02 #####
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: !input 'home_custom_button02'
      id: home_custom_buttons
    ##### Custom button 03 #####
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: !input 'home_custom_button03'
      id: home_custom_buttons
    ##### Custom button 04 #####
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: !input 'home_custom_button04'
      id: home_custom_buttons
    ##### Custom button 05 #####
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: !input 'home_custom_button05'
      id: home_custom_buttons
    ##### Custom button 06 #####
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: !input 'home_custom_button06'
      id: home_custom_buttons
    ##### Custom button 07 #####
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: !input 'alarm'
      id: home_custom_buttons

  ##### Trigger - Relays - State change #################################################################################################################

    ##### Relay01 - Trigger 'relay01_state' #####
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: '{{ relay01_entity }}'
      id: relay01_state

    ##### Relay02 - Trigger 'relay02_state' #####
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: '{{ relay02_entity }}'
      id: relay02_state

  ##### Trigger - Climate - State change #################################################################################################################
    ##### Climate - Trigger 'climate_state' #####
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: !input 'climate'
      id: climate_state

  ##### Trigger - Climate - Values - State change #################################################################################################################
    ##### Climate Value 01 #####
    - platform: state
      entity_id: !input 'climate_value01'
      not_to:
        - unknown
        - unavailable
      for:
        seconds: 1
      id: trigger_climatepage_value_state
    ##### Climate Value 02 #####
    - platform: state
      entity_id: !input 'climate_value02'
      not_to:
        - unknown
        - unavailable
      for:
        seconds: 1
      id: trigger_climatepage_value_state
    ##### Climate Value 03 #####
    - platform: state
      entity_id: !input 'climate_value03'
      not_to:
        - unknown
        - unavailable
      for:
        seconds: 1
      id: trigger_climatepage_value_state
    ##### Climate Value 04 #####
    - platform: state
      entity_id: !input 'climate_value04'
      not_to:
        - unknown
        - unavailable
      for:
        seconds: 1
      id: trigger_climatepage_value_state

  ##### Trigger - Climate - Custom buttons - State change #################################################################################################################
    ##### Climate Button page 1, Button 8 #####
    - platform: state
      entity_id: !input climate_button08
      not_to:
        - unknown
        - unavailable
      for:
        seconds: 1
      id: climate_button08_state
    ##### Climate Button page 2, Button 1 #####
    - platform: state
      entity_id: !input climate_button09
      not_to:
        - unknown
        - unavailable
      for:
        seconds: 1
      id: climate_button09_state

  ##### Trigger - Hardware buttons #################################################################################################################

    ##### Left Button - State #####
    - platform: state
      entity_id: !input left_button_entity
      id: left_button_state
    - platform: state
      entity_id: !input left_button_state_entity
      id: left_button_alt_state

    ##### Right Button - State #####
    - platform: state
      entity_id: !input right_button_entity
      id: right_button_state
    - platform: state
      entity_id: !input right_button_state_entity
      id: right_button_alt_state

  ##### Trigger - Page utilities - State change #################################################################################################################
    ##### Page utilities - Main line #####
    - platform: template
      value_template: >
        {% set line_ref_id = utilities_line_reference.page01.main %}
        {% set line_ref_state = (states(line_ref_id) | float(0)) if line_ref_id is string and line_ref_id.split(".") == 2 else 0 %}
        {{ ((line_ref_state > 0) - (line_ref_state < 0)) }}
      id: utilities_page
      for:
        seconds: 1
    ##### Page utilities - Home #####
    - platform: state
      entity_id: !input utilities_page01_home_value1
      id: utilities_page
      for:
        seconds: 1
    - platform: state
      entity_id: !input utilities_page01_home_value2
      id: utilities_page
      for:
        seconds: 1
    ##### Page utilities - Grid #####
    - platform: state
      entity_id: !input utilities_page01_grid_value1
      id: utilities_page
      for:
        seconds: 1
    - platform: state
      entity_id: !input utilities_page01_grid_value2
      id: utilities_page
      for:
        seconds: 1
    ##### Page utilities - Group 01 #####
    - platform: state
      entity_id: !input utilities_page01_group01_value1
      id: utilities_page
      for:
        seconds: 1
    - platform: state
      entity_id: !input utilities_page01_group01_value2
      id: utilities_page
      for:
        seconds: 1
    - platform: template
      value_template: >
        {% set line_ref_id = utilities_line_reference.page01.group01 %}
        {% set line_ref_state = (states(line_ref_id) | float(0)) if line_ref_id is string and line_ref_id.split(".") == 2 else 0 %}
        {{ ((line_ref_state > 0) - (line_ref_state < 0)) }}
      id: utilities_page
      for:
        seconds: 1
    ##### Page utilities - Group 02 #####
    - platform: state
      entity_id: !input utilities_page01_group02_value1
      id: utilities_page
      for:
        seconds: 1
    - platform: state
      entity_id: !input utilities_page01_group02_value2
      id: utilities_page
      for:
        seconds: 1
    - platform: template
      value_template: >
        {% set line_ref_id = utilities_line_reference.page01.group02 %}
        {% set line_ref_state = (states(line_ref_id) | float(0)) if line_ref_id is string and line_ref_id.split(".") == 2 else 0 %}
        {{ ((line_ref_state > 0) - (line_ref_state < 0)) }}
      id: utilities_page
      for:
        seconds: 1
    ##### Page utilities - Group 03 #####
    - platform: state
      entity_id: !input utilities_page01_group03_value1
      id: utilities_page
      for:
        seconds: 1
    - platform: state
      entity_id: !input utilities_page01_group03_value2
      id: utilities_page
      for:
        seconds: 1
    - platform: template
      value_template: >
        {% set line_ref_id = utilities_line_reference.page01.group03 %}
        {% set line_ref_state = (states(line_ref_id) | float(0)) if line_ref_id is string and line_ref_id.split(".") == 2 else 0 %}
        {{ ((line_ref_state > 0) - (line_ref_state < 0)) }}
      id: utilities_page
      for:
        seconds: 1
    ##### Page utilities - Group 04 #####
    - platform: state
      entity_id: !input utilities_page01_group04_value1
      id: utilities_page
      for:
        seconds: 1
    - platform: state
      entity_id: !input utilities_page01_group04_value2
      id: utilities_page
      for:
        seconds: 1
    - platform: template
      value_template: >
        {% set line_ref_id = utilities_line_reference.page01.group04 %}
        {% set line_ref_state = (states(line_ref_id) | float(0)) if line_ref_id is string and line_ref_id.split(".") == 2 else 0 %}
        {{ ((line_ref_state > 0) - (line_ref_state < 0)) }}
      id: utilities_page
      for:
        seconds: 1
    ##### Page utilities - Group 05 #####
    - platform: state
      entity_id: !input utilities_page01_group05_value1
      id: utilities_page
      for:
        seconds: 1
    - platform: state
      entity_id: !input utilities_page01_group05_value2
      id: utilities_page
      for:
        seconds: 1
    - platform: template
      value_template: >
        {% set line_ref_id = utilities_line_reference.page01.group05 %}
        {% set line_ref_state = (states(line_ref_id) | float(0)) if line_ref_id is string and line_ref_id.split(".") == 2 else 0 %}
        {{ ((line_ref_state > 0) - (line_ref_state < 0)) }}
      id: utilities_page
      for:
        seconds: 1
    ##### Page utilities - Group 06 #####
    - platform: state
      entity_id: !input utilities_page01_group06_value1
      id: utilities_page
      for:
        seconds: 1
    - platform: state
      entity_id: !input utilities_page01_group06_value2
      id: utilities_page
      for:
        seconds: 1
    - platform: template
      value_template: >
        {% set line_ref_id = utilities_line_reference.page01.group06 %}
        {% set line_ref_state = (states(line_ref_id) | float(0)) if line_ref_id is string and line_ref_id.split(".") == 2 else 0 %}
        {{ ((line_ref_state > 0) - (line_ref_state < 0)) }}
      id: utilities_page
      for:
        seconds: 1

  ##### Trigger - Time #################################################################################################################

    ##### Time - Trigger 'time_state' #####
    - platform: time_pattern
      minutes: 0
      seconds: 0
      id: time_state

  ##### Trigger - Temperatures #################################################################################################################

    ##### Outdoor Temp - Trigger 'outdoortemp_state' #####
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: !input 'outdoortemp'
      id: outdoortemp_state

    ##### indoor Temp Sensor - Trigger 'indoortemp_state' #####
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: !input indoortemp
      id: indoortemp_state

  ##### Trigger - Weather #################################################################################################################
    #### Weather state changed #######
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: !input weather_entity
      id: weather_state_change
    - platform: state
      entity_id: !input sun_entity
      id: sun_state_change

  ##### Trigger - TFT #################################################################################################################

    ##### TFT Upload - Trigger 'tft_upload' #####
    - platform: event
      event_type: folder_watcher
      event_data:
        event_type: modified
        path: !input 'tft_path'
      id: tft_upload
# yamllint enable rule:indentation rule:comments-indentation

# yamllint disable rule:line-length
condition:
  - >  # Trigger is coming from panel's event or Nextion display must be connected
    {{
      trigger.id in ["automation_reloaded", "ha_started", "nspanel_event"] or
      (states(nextion_display_sensor) | default(false) and has_value(device_name_sensor))
    }}
  - >  # Update page Home only when visible or home_page_background_update is enabled
    {{
      trigger.id not in ["home_values_state", "trigger_chip_state"] or
      home_page_background_update or
      pages.current == pages.home
    }}
  - >  # Do not update values when page utilities is not visible
    {{ trigger.id != "utilities_page" or pages.current == pages.utilities }}
  - >  # Do not update values when page entities is not visible
    {{ trigger.id != "trigger_entitypage_state" or pages.current in pages.entitypages }}
  - >  # Do not update values when page climate is not visible
    {{
      pages.current == pages.climate or
      trigger.id not in ["trigger_climatepage_value_state", "climate_button08_state", "climate_button09_state"]
    }}
  - >  # Do not update values when page button is not visible
    {{
      trigger.id != "trigger_buttonpage_state" or
      pages.current in pages.buttonpages or
      (pages.current in [pages.light, pages.cover, pages.climate, pages.fan, pages.alarm] and trigger.entity_id is defined and trigger.entity_id == states(detailed_entity))
    }}
  - >  # Don't update indoor temp when embedded temp is used
    {{
      trigger.id != "indoortemp_state" or
      ((home_page_background_update or pages.current == pages.home ) and not embedded_indoor_temperature)
    }}
  - condition: or  # Do not update component if state haven't changed (ignore attributes changed) - event based triggers
    conditions:
      - '{{ trigger.id != "home_custom_buttons" }}'
      - condition: and
        conditions:
          - '{{ home_page_background_update or pages.current == pages.home }}'
          - '{{ trigger.event is defined and trigger.event.data is defined }}'
          - '{{ trigger.event.data.entity_id is defined }}'
          - '{{ trigger.event.data.entity_id is not match "media_player." }}'
      - condition: and
        conditions:
          - '{{ home_page_background_update or pages.current == pages.home }}'
          - '{{ trigger.event is defined and trigger.event.data is defined }}'
          - '{{ trigger.event.data.new_state is defined and trigger.event.data.new_state.state is defined }}'
          - '{{ trigger.event.data.old_state is defined and trigger.event.data.old_state.state is defined }}'
          - '{{ trigger.event.data.new_state.state != trigger.event.data.old_state.state }}'
# yamllint enable rule:line-length

action:
  - variables:
      ##### GENERAL #####
      nspanel_name: >
        {{
          trigger.event.data.device_name
          if
            trigger is defined and
            trigger.event is defined and
            trigger.event.data is defined and
            trigger.event.data.device_name is defined and
            trigger.event.data.device_name is string and trigger.event.data.device_name | length > 0
          else
            (
              states(device_name_sensor)
              if has_value(device_name_sensor)
              else device_name
            )
        }}

      esphome_version: >
        {%
          set esphome_version_sensor =
            nspanel_entities | selectattr(None, "search", "sensor.*_esphome_version") | list | last
            if nspanel_entities | selectattr(None, "search", "sensor.*_esphome_version") | list | count > 0
            else ("sensor." ~ device_name ~ "_esphome_version")
        %}
        {{
          version(trigger.event.data.esphome_version)
          if
            trigger is defined and
            trigger.event is defined and
            trigger.event.data is defined and
            trigger.event.data.esphome_version is defined and
            trigger.event.data.esphome_version is string and trigger.event.data.esphome_version | length > 0
          else
            (
              version(states(esphome_version_sensor))
              if has_value(esphome_version_sensor)
              else version("0.0.0")
            )
        }}

      date_format_temp: !input 'date_format'
      # Avoid breaking change for existing users with legacy type format
      date_format: '{{ date_format_temp if date_format_temp not in ["%d.%m", "%d/%m", "%-d/%-m", "%-m/%-d"] else "%A, " ~ date_format_temp }}'

      sun_entity_input: !input sun_entity
      sun_entity: >
        {{
          sun_entity_input
          if
            sun_entity_input is string and
            sun_entity_input.split("sun.") | count == 2
          else ((states.sun | map(attribute="entity_id") | list | first) if states.sun | selectattr("entity_id", "defined") | list | count > 0 else None)
        }}
      sun_is_up: '{{ is_state(sun_entity, "above_horizon") if sun_entity is string and sun_entity.split("sun.") | count == 2 else true }}'

      # yamllint disable rule:line-length rule:braces
      device_class_icons:
        cover: { "awning-closed": "window-closed", "awning-closing": "arrow-down-box", "awning-open": "window-open", "awning-opening": "arrow-up-box", "blind-closed": "blinds-horizontal-closed", "blind-closing": "arrow-down-box", "blind-open": "blinds-horizontal", "blind-opening": "arrow-up-box", "curtain-closed": "curtains-closed", "curtains-closing": "arrow-collapse-horizontal", "curtains-open": "curtains-open", "arrow-split-vertical": "curtains-open", "damper-closed": "circle-slice-8", "damper-closing": "circle", "damper-open": "circle", "damper-opening": "circle", "door-closed": "door-closed", "door-closing": "door-open", "door-open": "door-open", "door-opening": "door-open", "garage-closed": "garage", "garage-closing": "arrow-down-box", "garage-open": "garage-open", "garage-opening": "arrow-up-box", "gate-closed": "gate", "gate-closing": "gate-arrow-right", "gate-open": "gate-open", "gate-opening": "gate-arrow-left", "shade-closed": "roller-shade-closed", "shade-closing": "arrow-down-box", "shade-open": "roller-shade", "shade-opening": "arrow-up-box", "shutter-closed": "window-shutter", "shutter-closing": "arrow-down-box", "shutter-open": "window-shutter-open", "shutter-opening": "arrow-up-box", "window-closed": "window-closed", "window-closing": "arrow-down-box", "window-open": "window-open", "window-opening": "arrow-up-box" }
        binary_sensor: { "battery-on": "battery-outline", "battery-off": "battery", "battery_charging-on": "battery-charging", "battery_charging-off": "battery", "carbon_monoxide-on": "smoke-detector-alert", "carbon_monoxide-off": "smoke-detector", "cold-on": "snowflake", "cold-off": "thermometer", "connectivity-on": "check-network-outline", "connectivity-off": "close-network-outline", "door-on": "door-open", "door-off": "door-closed", "garage_door-on": "garage-open", "garage_door-off": "garage", "gas-on": "alert-circle", "gas-off": "check-circle", "heat-on": "fire", "heat-off": "thermometer", "light-on": "brightness-7", "light-off": "brightness-5", "lock-on": "lock-open", "lock-off": "lock", "moisture-on": "water", "moisture-off": "water-off", "motion-on": "motion-sensor", "motion-off": "motion-sensor-off", "moving-on": "octagon", "moving-off": "arrow-right", "occupancy-on": "home", "occupancy-off": "home-outline", "opening-on": "square-outline", "opening-off": "square", "plug-on": "power-plug", "plug-off": "power-plug-off", "power-on": "power-plug", "power-off": "power-plug-off", "presence-on": "home", "presence-off": "home-outline", "problem-on": "alert-circle", "problem-off": "check-circle", "running-on": "play", "running-off": "stop", "safety-on": "alert-circle", "safety-off": "check-circle", "smoke-on": "smoke-detector-variant-alert", "smoke-off": "smoke-detector-variant", "sound-on": "music-note", "sound-off": "music-note-off", "tamper-on": "alert-circle", "tamper-off": "check-circle", "update-on": "package-up", "update-off": "package", "vibration-on": "vibrate", "vibration-off": "crop-portrait", "window-on": "window-open", "window-off": "window-closed" }
        sensor: { "apparent_power": "flash", "aqi": "air-filter", "atmospheric_pressure": "thermometer-lines", "battery": "battery", "carbon_dioxide": "molecule-co2", "carbon_monoxide": "molecule-co", "current": "current-ac", "data_rate": "transmission-tower", "data_size": "database", "date": "calendar", "distance": "arrow-left-right", "duration": "progress-clock", "energy": "lightning-bolt", "energy_storage": "car-battery", "enum": "eye", "frequency": "sine-wave", "gas": "meter-gas", "humidity": "water-percent", "illuminance": "brightness-5", "irradiance": "sun-wireless", "moisture": "water-percent", "monetary": "cash", "nitrogen_dioxide": "molecule", "nitrogen_monoxide": "molecule", "nitrous_oxide": "molecule", "ozone": "molecule", "ph": "ph", "pm1": "molecule", "pm10": "molecule", "pm25": "molecule", "power": "flash", "power_factor": "angle-acute", "precipitation": "weather-rainy", "precipitation_intensity": "weather-pouring", "pressure": "gauge", "reactive_power": "flash", "signal_strength": "wifi", "sound_pressure": "ear-hearing", "speed": "speedometer", "sulphur_dioxide": "molecule", "temperature": "thermometer", "timestamp": "clock", "volatile_organic_compounds": "molecule", "volatile_organic_compounds_parts": "molecule", "voltage": "sine-wave", "volume": "car-coolant-level", "water": "water", "weight": "weight", "wind_speed": "weather-windy" }
        switch: { "outlet-on": "power-plug", "outlet-off": "power-plug-off", "switch-on": "toggle-switch-variant", "switch-off": toggle-switch-variant-off" }
      all_icons: { blank: "\uFFFF", void: "\uFFFF", unknown: "\uE027", unavailable: "\uE027", ab-testing: "\uE1C8", abacus: "\uF6DF", abjad-arabic: "\uF327", abjad-hebrew: "\uF328", abugida-devanagari: "\uF329", abugida-thai: "\uF32A", access-point: "\uE002", access-point-check: "\uF537", access-point-minus: "\uF538", access-point-network: "\uE001", access-point-network-off: "\uEBE0", access-point-off: "\uF510", access-point-plus: "\uF539", access-point-remove: "\uF53A", account: "\uE003", account-alert: "\uE004", account-alert-outline: "\uEB4F", account-arrow-down: "\uF867", account-arrow-down-outline: "\uF868", account-arrow-left: "\uEB50", account-arrow-left-outline: "\uEB51", account-arrow-right: "\uEB52", account-arrow-right-outline: "\uEB53", account-arrow-up: "\uF866", account-arrow-up-outline: "\uF869", account-box: "\uE005", account-box-multiple: "\uE933", account-box-multiple-outline: "\uF009", account-box-outline: "\uE006", account-cancel: "\uF2DE", account-cancel-outline: "\uF2DF", account-cash: "\uF096", account-cash-outline: "\uF097", account-check: "\uE007", account-check-outline: "\uEBE1", account-child: "\uEA88", account-child-circle: "\uEA89", account-child-outline: "\uF0C7", account-circle: "\uE008", account-circle-outline: "\uEB54", account-clock: "\uEB55", account-clock-outline: "\uEB56", account-cog: "\uF36F", account-cog-outline: "\uF370", account-convert: "\uE009", account-convert-outline: "\uF300", account-cowboy-hat: "\uEE9A", account-cowboy-hat-outline: "\uF7F2", account-details: "\uE630", account-details-outline: "\uF371", account-edit: "\uE6BB", account-edit-outline: "\uEFFA", account-eye: "\uE41F", account-eye-outline: "\uF27A", account-filter: "\uE935", account-filter-outline: "\uEF9C", account-group: "\uE848", account-group-outline: "\uEB57", account-hard-hat: "\uE5B4", account-hard-hat-outline: "\uFA1E", account-heart: "\uE898", account-heart-outline: "\uEBE2", account-injury: "\uF814", account-injury-outline: "\uF815", account-key: "\uE00A", account-key-outline: "\uEBE3", account-lock: "\uF15D", account-lock-open: "\uF95F", account-lock-open-outline: "\uF960", account-lock-outline: "\uF15E", account-minus: "\uE00C", account-minus-outline: "\uEAEB", account-multiple: "\uE00D", account-multiple-check: "\uE8C4", account-multiple-check-outline: "\uF1FD", account-multiple-minus: "\uE5D2", account-multiple-minus-outline: "\uEBE4", account-multiple-outline: "\uE00E", account-multiple-plus: "\uE00F", account-multiple-plus-outline: "\uE7FF", account-multiple-remove: "\uF209", account-multiple-remove-outline: "\uF20A", account-music: "\uE802", account-music-outline: "\uECE8", account-network: "\uE010", account-network-outline: "\uEBE5", account-off: "\uE011", account-off-outline: "\uEBE6", account-outline: "\uE012", account-plus: "\uE013", account-plus-outline: "\uE800", account-question: "\uEB58", account-question-outline: "\uEB59", account-reactivate: "\uF52A", account-reactivate-outline: "\uF52B", account-remove: "\uE014", account-remove-outline: "\uEAEC", account-school: "\uFA1F", account-school-outline: "\uFA20", account-search: "\uE015", account-search-outline: "\uE934", account-settings: "\uE62F", account-settings-outline: "\uF0C8", account-star: "\uE016", account-star-outline: "\uEBE7", account-supervisor: "\uEA8A", account-supervisor-circle: "\uEA8B", account-supervisor-circle-outline: "\uF4EB", account-supervisor-outline: "\uF12C", account-switch: "\uE018", account-switch-outline: "\uE4CA", account-sync: "\uF91A", account-sync-outline: "\uF91B", account-tie: "\uECE2", account-tie-hat: "\uF897", account-tie-hat-outline: "\uF898", account-tie-outline: "\uF0C9", account-tie-voice: "\uF307", account-tie-voice-off: "\uF309", account-tie-voice-off-outline: "\uF30A", account-tie-voice-outline: "\uF308", account-tie-woman: "\uFA8B", account-voice: "\uE5CA", account-voice-off: "\uEED3", account-wrench: "\uF899", account-wrench-outline: "\uF89A", adjust: "\uE019", advertisements: "\uF929", advertisements-off: "\uF92A", air-conditioner: "\uE01A", air-filter: "\uED42", air-horn: "\uEDAB", air-humidifier: "\uF098", air-humidifier-off: "\uF465", air-purifier: "\uED43", airbag: "\uEBE8", airballoon: "\uE01B", airballoon-outline: "\uF00A", airplane: "\uE01C", airplane-alert: "\uF879", airplane-check: "\uF87A", airplane-clock: "\uF87B", airplane-cog: "\uF87C", airplane-edit: "\uF87D", airplane-landing: "\uE5D3", airplane-marker: "\uF87E", airplane-minus: "\uF87F", airplane-off: "\uE01D", airplane-plus: "\uF880", airplane-remove: "\uF881", airplane-search: "\uF882", airplane-settings: "\uF883", airplane-takeoff: "\uE5D4", airport: "\uE84A", alarm: "\uE01F", alarm-bell: "\uE78D", alarm-check: "\uE020", alarm-light: "\uE78E", alarm-light-off: "\uF71D", alarm-light-off-outline: "\uF71E", alarm-light-outline: "\uEBE9", alarm-multiple: "\uE021", alarm-note: "\uEE70", alarm-note-off: "\uEE71", alarm-off: "\uE022", alarm-panel: "\uF5C3", alarm-panel-outline: "\uF5C4", alarm-plus: "\uE023", alarm-snooze: "\uE68D", album: "\uE024", alert: "\uE025", alert-box: "\uE026", alert-box-outline: "\uECE3", alert-circle: "\uE027", alert-circle-check: "\uF1EC", alert-circle-check-outline: "\uF1ED", alert-circle-outline: "\uE5D5", alert-decagram: "\uE6BC", alert-decagram-outline: "\uECE4", alert-minus: "\uF4BA", alert-minus-outline: "\uF4BD", alert-octagon: "\uE028", alert-octagon-outline: "\uECE5", alert-octagram: "\uE766", alert-octagram-outline: "\uECE6", alert-outline: "\uE029", alert-plus: "\uF4B9", alert-plus-outline: "\uF4BC", alert-remove: "\uF4BB", alert-remove-outline: "\uF4BE", alert-rhombus: "\uF1CD", alert-rhombus-outline: "\uF1CE", alien: "\uE899", alien-outline: "\uF0CA", align-horizontal-center: "\uF1C2", align-horizontal-distribute: "\uF961", align-horizontal-left: "\uF1C1", align-horizontal-right: "\uF1C3", align-vertical-bottom: "\uF1C4", align-vertical-center: "\uF1C5", align-vertical-distribute: "\uF962", align-vertical-top: "\uF1C6", all-inclusive: "\uE6BD", all-inclusive-box: "\uF88C", all-inclusive-box-outline: "\uF88D", allergy: "\uF257", alpha: "\uE02A", alpha-a: "\uEAED", alpha-a-box: "\uEB07", alpha-a-box-outline: "\uEBEA", alpha-a-circle: "\uEBEB", alpha-a-circle-outline: "\uEBEC", alpha-b: "\uEAEE", alpha-b-box: "\uEB08", alpha-b-box-outline: "\uEBED", alpha-b-circle: "\uEBEE", alpha-b-circle-outline: "\uEBEF", alpha-c: "\uEAEF", alpha-c-box: "\uEB09", alpha-c-box-outline: "\uEBF0", alpha-c-circle: "\uEBF1", alpha-c-circle-outline: "\uEBF2", alpha-d: "\uEAF0", alpha-d-box: "\uEB0A", alpha-d-box-outline: "\uEBF3", alpha-d-circle: "\uEBF4", alpha-d-circle-outline: "\uEBF5", alpha-e: "\uEAF1", alpha-e-box: "\uEB0B", alpha-e-box-outline: "\uEBF6", alpha-e-circle: "\uEBF7", alpha-e-circle-outline: "\uEBF8", alpha-f: "\uEAF2", alpha-f-box: "\uEB0C", alpha-f-box-outline: "\uEBF9", alpha-f-circle: "\uEBFA", alpha-f-circle-outline: "\uEBFB", alpha-g: "\uEAF3", alpha-g-box: "\uEB0D", alpha-g-box-outline: "\uEBFC", alpha-g-circle: "\uEBFD", alpha-g-circle-outline: "\uEBFE", alpha-h: "\uEAF4", alpha-h-box: "\uEB0E", alpha-h-box-outline: "\uEBFF", alpha-h-circle: "\uEC00", alpha-h-circle-outline: "\uEC01", alpha-i: "\uEAF5", alpha-i-box: "\uEB0F", alpha-i-box-outline: "\uEC02", alpha-i-circle: "\uEC03", alpha-i-circle-outline: "\uEC04", alpha-j: "\uEAF6", alpha-j-box: "\uEB10", alpha-j-box-outline: "\uEC05", alpha-j-circle: "\uEC06", alpha-j-circle-outline: "\uEC07", alpha-k: "\uEAF7", alpha-k-box: "\uEB11", alpha-k-box-outline: "\uEC08", alpha-k-circle: "\uEC09", alpha-k-circle-outline: "\uEC0A", alpha-l: "\uEAF8", alpha-l-box: "\uEB12", alpha-l-box-outline: "\uEC0B", alpha-l-circle: "\uEC0C", alpha-l-circle-outline: "\uEC0D", alpha-m: "\uEAF9", alpha-m-box: "\uEB13", alpha-m-box-outline: "\uEC0E", alpha-m-circle: "\uEC0F", alpha-m-circle-outline: "\uEC10", alpha-n: "\uEAFA", alpha-n-box: "\uEB14", alpha-n-box-outline: "\uEC11", alpha-n-circle: "\uEC12", alpha-n-circle-outline: "\uEC13", alpha-o: "\uEAFB", alpha-o-box: "\uEB15", alpha-o-box-outline: "\uEC14", alpha-o-circle: "\uEC15", alpha-o-circle-outline: "\uEC16", alpha-p: "\uEAFC", alpha-p-box: "\uEB16", alpha-p-box-outline: "\uEC17", alpha-p-circle: "\uEC18", alpha-p-circle-outline: "\uEC19", alpha-q: "\uEAFD", alpha-q-box: "\uEB17", alpha-q-box-outline: "\uEC1A", alpha-q-circle: "\uEC1B", alpha-q-circle-outline: "\uEC1C", alpha-r: "\uEAFE", alpha-r-box: "\uEB18", alpha-r-box-outline: "\uEC1D", alpha-r-circle: "\uEC1E", alpha-r-circle-outline: "\uEC1F", alpha-s: "\uEAFF", alpha-s-box: "\uEB19", alpha-s-box-outline: "\uEC20", alpha-s-circle: "\uEC21", alpha-s-circle-outline: "\uEC22", alpha-t: "\uEB00", alpha-t-box: "\uEB1A", alpha-t-box-outline: "\uEC23", alpha-t-circle: "\uEC24", alpha-t-circle-outline: "\uEC25", alpha-u: "\uEB01", alpha-u-box: "\uEB1B", alpha-u-box-outline: "\uEC26", alpha-u-circle: "\uEC27", alpha-u-circle-outline: "\uEC28", alpha-v: "\uEB02", alpha-v-box: "\uEB1C", alpha-v-box-outline: "\uEC29", alpha-v-circle: "\uEC2A", alpha-v-circle-outline: "\uEC2B", alpha-w: "\uEB03", alpha-w-box: "\uEB1D", alpha-w-box-outline: "\uEC2C", alpha-w-circle: "\uEC2D", alpha-w-circle-outline: "\uEC2E", alpha-x: "\uEB04", alpha-x-box: "\uEB1E", alpha-x-box-outline: "\uEC2F", alpha-x-circle: "\uEC30", alpha-x-circle-outline: "\uEC31", alpha-y: "\uEB05", alpha-y-box: "\uEB1F", alpha-y-box-outline: "\uEC32", alpha-y-circle: "\uEC33", alpha-y-circle-outline: "\uEC34", alpha-z: "\uEB06", alpha-z-box: "\uEB20", alpha-z-box-outline: "\uEC35", alpha-z-circle: "\uEC36", alpha-z-circle-outline: "\uEC37", alphabet-aurebesh: "\uF32B", alphabet-cyrillic: "\uF32C", alphabet-greek: "\uF32D", alphabet-latin: "\uF32E", alphabet-piqad: "\uF32F", alphabet-tengwar: "\uF336", alphabetical: "\uE02B", alphabetical-off: "\uF00B", alphabetical-variant: "\uF00C", alphabetical-variant-off: "\uF00D", altimeter: "\uE5D6", ambulance: "\uE02E", ammunition: "\uECE7", ampersand: "\uEA8C", amplifier: "\uE02F", amplifier-off: "\uF1B4", anchor: "\uE030", android: "\uE031", android-messages: "\uED44", android-studio: "\uE033", angle-acute: "\uE936", angle-obtuse: "\uE937", angle-right: "\uE938", angular: "\uE6B1", angularjs: "\uE6BE", animation: "\uE5D7", animation-outline: "\uEA8E", animation-play: "\uE939", animation-play-outline: "\uEA8F", ansible: "\uF099", antenna: "\uF118", anvil: "\uE89A", apache-kafka: "\uF00E", api: "\uF09A", api-off: "\uF256", apple: "\uE034", apple-finder: "\uE035", apple-icloud: "\uE037", apple-ios: "\uE036", apple-keyboard-caps: "\uE631", apple-keyboard-command: "\uE632", apple-keyboard-control: "\uE633", apple-keyboard-option: "\uE634", apple-keyboard-shift: "\uE635", apple-safari: "\uE038", application: "\uE8C5", application-array: "\uF0F4", application-array-outline: "\uF0F5", application-braces: "\uF0F6", application-braces-outline: "\uF0F7", application-brackets: "\uEC8A", application-brackets-outline: "\uEC8B", application-cog: "\uE674", application-cog-outline: "\uF576", application-edit: "\uE0AD", application-edit-outline: "\uE618", application-export: "\uEDAC", application-import: "\uEDAD", application-outline: "\uE613", application-parentheses: "\uF0F8", application-parentheses-outline: "\uF0F9", application-settings: "\uEB5F", application-settings-outline: "\uF554", application-variable: "\uF0FA", application-variable-outline: "\uF0FB", approximately-equal: "\uEF9D", approximately-equal-box: "\uEF9E", apps: "\uE03A", apps-box: "\uED45", arch: "\uE8C6", archive: "\uE03B", archive-alert: "\uF4FC", archive-alert-outline: "\uF4FD", archive-arrow-down: "\uF258", archive-arrow-down-outline: "\uF259", archive-arrow-up: "\uF25A", archive-arrow-up-outline: "\uF25B", archive-cancel: "\uF74A", archive-cancel-outline: "\uF74B", archive-check: "\uF74C", archive-check-outline: "\uF74D", archive-clock: "\uF74E", archive-clock-outline: "\uF74F", archive-cog: "\uF750", archive-cog-outline: "\uF751", archive-edit: "\uF752", archive-edit-outline: "\uF753", archive-eye: "\uF754", archive-eye-outline: "\uF755", archive-lock: "\uF756", archive-lock-open: "\uF757", archive-lock-open-outline: "\uF758", archive-lock-outline: "\uF759", archive-marker: "\uF75A", archive-marker-outline: "\uF75B", archive-minus: "\uF75C", archive-minus-outline: "\uF75D", archive-music: "\uF75E", archive-music-outline: "\uF75F", archive-off: "\uF760", archive-off-outline: "\uF761", archive-outline: "\uF20D", archive-plus: "\uF762", archive-plus-outline: "\uF763", archive-refresh: "\uF764", archive-refresh-outline: "\uF765", archive-remove: "\uF766", archive-remove-outline: "\uF767", archive-search: "\uF768", archive-search-outline: "\uF769", archive-settings: "\uF76A", archive-settings-outline: "\uF76B", archive-star: "\uF76C", archive-star-outline: "\uF76D", archive-sync: "\uF76E", archive-sync-outline: "\uF76F", arm-flex: "\uEFD6", arm-flex-outline: "\uEFD5", arrange-bring-forward: "\uE03C", arrange-bring-to-front: "\uE03D", arrange-send-backward: "\uE03E", arrange-send-to-back: "\uE03F", arrow-all: "\uE040", arrow-bottom-left: "\uE041", arrow-bottom-left-bold-box: "\uF963", arrow-bottom-left-bold-box-outline: "\uF964", arrow-bottom-left-bold-outline: "\uE9B6", arrow-bottom-left-thick: "\uE9B7", arrow-bottom-left-thin: "\uF9B5", arrow-bottom-left-thin-circle-outline: "\uF595", arrow-bottom-right: "\uE042", arrow-bottom-right-bold-box: "\uF965", arrow-bottom-right-bold-box-outline: "\uF966", arrow-bottom-right-bold-outline: "\uE9B8", arrow-bottom-right-thick: "\uE9B9", arrow-bottom-right-thin: "\uF9B6", arrow-bottom-right-thin-circle-outline: "\uF594", arrow-collapse: "\uE614", arrow-collapse-all: "\uE043", arrow-collapse-down: "\uE791", arrow-collapse-horizontal: "\uE84B", arrow-collapse-left: "\uE792", arrow-collapse-right: "\uE793", arrow-collapse-up: "\uE794", arrow-collapse-vertical: "\uE84C", arrow-decision: "\uE9BA", arrow-decision-auto: "\uE9BB", arrow-decision-auto-outline: "\uE9BC", arrow-decision-outline: "\uE9BD", arrow-down: "\uE044", arrow-down-bold: "\uE72D", arrow-down-bold-box: "\uE72E", arrow-down-bold-box-outline: "\uE72F", arrow-down-bold-circle: "\uE046", arrow-down-bold-circle-outline: "\uE047", arrow-down-bold-hexagon-outline: "\uE048", arrow-down-bold-outline: "\uE9BE", arrow-down-box: "\uE6BF", arrow-down-circle: "\uECDA", arrow-down-circle-outline: "\uECDB", arrow-down-drop-circle: "\uE049", arrow-down-drop-circle-outline: "\uE04A", arrow-down-left: "\uF7A0", arrow-down-left-bold: "\uF7A1", arrow-down-right: "\uF7A2", arrow-down-right-bold: "\uF7A3", arrow-down-thick: "\uE045", arrow-down-thin: "\uF9B2", arrow-down-thin-circle-outline: "\uF598", arrow-expand: "\uE615", arrow-expand-all: "\uE04B", arrow-expand-down: "\uE795", arrow-expand-horizontal: "\uE84D", arrow-expand-left: "\uE796", arrow-expand-right: "\uE797", arrow-expand-up: "\uE798", arrow-expand-vertical: "\uE84E", arrow-horizontal-lock: "\uF15A", arrow-left: "\uE04C", arrow-left-bold: "\uE730", arrow-left-bold-box: "\uE731", arrow-left-bold-box-outline: "\uE732", arrow-left-bold-circle: "\uE04E", arrow-left-bold-circle-outline: "\uE04F", arrow-left-bold-hexagon-outline: "\uE050", arrow-left-bold-outline: "\uE9BF", arrow-left-bottom: "\uF7A4", arrow-left-bottom-bold: "\uF7A5", arrow-left-box: "\uE6C0", arrow-left-circle: "\uECDC", arrow-left-circle-outline: "\uECDD", arrow-left-drop-circle: "\uE051", arrow-left-drop-circle-outline: "\uE052", arrow-left-right: "\uEE72", arrow-left-right-bold: "\uEE73", arrow-left-right-bold-outline: "\uE9C0", arrow-left-thick: "\uE04D", arrow-left-thin: "\uF9B0", arrow-left-thin-circle-outline: "\uF599", arrow-left-top: "\uF7A6", arrow-left-top-bold: "\uF7A7", arrow-projectile: "\uF83F", arrow-projectile-multiple: "\uF83E", arrow-right: "\uE053", arrow-right-bold: "\uE733", arrow-right-bold-box: "\uE734", arrow-right-bold-box-outline: "\uE735", arrow-right-bold-circle: "\uE055", arrow-right-bold-circle-outline: "\uE056", arrow-right-bold-hexagon-outline: "\uE057", arrow-right-bold-outline: "\uE9C1", arrow-right-bottom: "\uF7A8", arrow-right-bottom-bold: "\uF7A9", arrow-right-box: "\uE6C1", arrow-right-circle: "\uECDE", arrow-right-circle-outline: "\uECDF", arrow-right-drop-circle: "\uE058", arrow-right-drop-circle-outline: "\uE059", arrow-right-thick: "\uE054", arrow-right-thin: "\uF9AF", arrow-right-thin-circle-outline: "\uF597", arrow-right-top: "\uF7AA", arrow-right-top-bold: "\uF7AB", arrow-split-horizontal: "\uE93A", arrow-split-vertical: "\uE93B", arrow-top-left: "\uE05A", arrow-top-left-bold-box: "\uF967", arrow-top-left-bold-box-outline: "\uF968", arrow-top-left-bold-outline: "\uE9C2", arrow-top-left-bottom-right: "\uEE74", arrow-top-left-bottom-right-bold: "\uEE75", arrow-top-left-thick: "\uE9C3", arrow-top-left-thin: "\uF9B4", arrow-top-left-thin-circle-outline: "\uF592", arrow-top-right: "\uE05B", arrow-top-right-bold-box: "\uF969", arrow-top-right-bold-box-outline: "\uF96A", arrow-top-right-bold-outline: "\uE9C4", arrow-top-right-bottom-left: "\uEE76", arrow-top-right-bottom-left-bold: "\uEE77", arrow-top-right-thick: "\uE9C5", arrow-top-right-thin: "\uF9B3", arrow-top-right-thin-circle-outline: "\uF593", arrow-u-down-left: "\uF7AC", arrow-u-down-left-bold: "\uF7AD", arrow-u-down-right: "\uF7AE", arrow-u-down-right-bold: "\uF7AF", arrow-u-left-bottom: "\uF7B0", arrow-u-left-bottom-bold: "\uF7B1", arrow-u-left-top: "\uF7B2", arrow-u-left-top-bold: "\uF7B3", arrow-u-right-bottom: "\uF7B4", arrow-u-right-bottom-bold: "\uF7B5", arrow-u-right-top: "\uF7B6", arrow-u-right-top-bold: "\uF7B7", arrow-u-up-left: "\uF7B8", arrow-u-up-left-bold: "\uF7B9", arrow-u-up-right: "\uF7BA", arrow-u-up-right-bold: "\uF7BB", arrow-up: "\uE05C", arrow-up-bold: "\uE736", arrow-up-bold-box: "\uE737", arrow-up-bold-box-outline: "\uE738", arrow-up-bold-circle: "\uE05E", arrow-up-bold-circle-outline: "\uE05F", arrow-up-bold-hexagon-outline: "\uE060", arrow-up-bold-outline: "\uE9C6", arrow-up-box: "\uE6C2", arrow-up-circle: "\uECE0", arrow-up-circle-outline: "\uECE1", arrow-up-down: "\uEE78", arrow-up-down-bold: "\uEE79", arrow-up-down-bold-outline: "\uE9C7", arrow-up-drop-circle: "\uE061", arrow-up-drop-circle-outline: "\uE062", arrow-up-left: "\uF7BC", arrow-up-left-bold: "\uF7BD", arrow-up-right: "\uF7BE", arrow-up-right-bold: "\uF7BF", arrow-up-thick: "\uE05D", arrow-up-thin: "\uF9B1", arrow-up-thin-circle-outline: "\uF596", arrow-vertical-lock: "\uF15B", artstation: "\uEB5A", aspect-ratio: "\uEA23", assistant: "\uE063", asterisk: "\uE6C3", asterisk-circle-outline: "\uFA26", at: "\uE064", atlassian: "\uE803", atm: "\uED46", atom: "\uE767", atom-variant: "\uEE7A", attachment: "\uE065", attachment-check: "\uFAC0", attachment-lock: "\uF9C3", attachment-minus: "\uFAC1", attachment-off: "\uFAC2", attachment-plus: "\uFAC3", attachment-remove: "\uFAC4", audio-input-rca: "\uF86A", audio-input-stereo-minijack: "\uF86B", audio-input-xlr: "\uF86C", audio-video: "\uE93C", audio-video-off: "\uF1B5", augmented-reality: "\uE84F", auto-download: "\uF37D", auto-fix: "\uE067", auto-upload: "\uE068", autorenew: "\uE069", autorenew-off: "\uF9E6", av-timer: "\uE06A", aws: "\uEE0E", axe: "\uE8C7", axe-battle: "\uF841", axis: "\uED47", axis-arrow: "\uED48", axis-arrow-info: "\uF40D", axis-arrow-lock: "\uED49", axis-lock: "\uED4A", axis-x-arrow: "\uED4B", axis-x-arrow-lock: "\uED4C", axis-x-rotate-clockwise: "\uED4D", axis-x-rotate-counterclockwise: "\uED4E", axis-x-y-arrow-lock: "\uED4F", axis-y-arrow: "\uED50", axis-y-arrow-lock: "\uED51", axis-y-rotate-clockwise: "\uED52", axis-y-rotate-counterclockwise: "\uED53", axis-z-arrow: "\uED54", axis-z-arrow-lock: "\uED55", axis-z-rotate-clockwise: "\uED56", axis-z-rotate-counterclockwise: "\uED57", babel: "\uEA24", baby: "\uE06B", baby-bottle: "\uEF38", baby-bottle-outline: "\uEF39", baby-buggy: "\uF3DF", baby-carriage: "\uE68E", baby-carriage-off: "\uEF9F", baby-face: "\uEE7B", baby-face-outline: "\uEE7C", backburger: "\uE06C", backspace: "\uE06D", backspace-outline: "\uEB5B", backspace-reverse: "\uEE7D", backspace-reverse-outline: "\uEE7E", backup-restore: "\uE06E", bacteria: "\uEED4", bacteria-outline: "\uEED5", badge-account: "\uEDA6", badge-account-alert: "\uEDA7", badge-account-alert-outline: "\uEDA8", badge-account-horizontal: "\uEE0C", badge-account-horizontal-outline: "\uEE0D", badge-account-outline: "\uEDA9", badminton: "\uE850", bag-carry-on: "\uEF3A", bag-carry-on-check: "\uED64", bag-carry-on-off: "\uEF3B", bag-checked: "\uEF3C", bag-personal: "\uEE0F", bag-personal-off: "\uEE10", bag-personal-off-outline: "\uEE11", bag-personal-outline: "\uEE12", bag-suitcase: "\uF58A", bag-suitcase-off: "\uF58C", bag-suitcase-off-outline: "\uF58D", bag-suitcase-outline: "\uF58B", baguette: "\uEF3D", balcony: "\uF816", balloon: "\uEA25", ballot: "\uE9C8", ballot-outline: "\uE9C9", ballot-recount: "\uEC38", ballot-recount-outline: "\uEC39", bandage: "\uEDAE", bank: "\uE06F", bank-check: "\uF654", bank-minus: "\uEDAF", bank-off: "\uF655", bank-off-outline: "\uF656", bank-outline: "\uEE7F", bank-plus: "\uEDB0", bank-remove: "\uEDB1", bank-transfer: "\uEA26", bank-transfer-in: "\uEA27", bank-transfer-out: "\uEA28", barcode: "\uE070", barcode-off: "\uF235", barcode-scan: "\uE071", barley: "\uE072", barley-off: "\uEB5C", barn: "\uEB5D", barrel: "\uE073", barrel-outline: "\uFA27", baseball: "\uE851", baseball-bat: "\uE852", baseball-diamond: "\uF5EB", baseball-diamond-outline: "\uF5EC", bash: "\uF182", basket: "\uE075", basket-check: "\uF8E4", basket-check-outline: "\uF8E5", basket-fill: "\uE076", basket-minus: "\uF522", basket-minus-outline: "\uF523", basket-off: "\uF524", basket-off-outline: "\uF525", basket-outline: "\uF180", basket-plus: "\uF526", basket-plus-outline: "\uF527", basket-remove: "\uF528", basket-remove-outline: "\uF529", basket-unfill: "\uE077", basketball: "\uE805", basketball-hoop: "\uEC3A", basketball-hoop-outline: "\uEC3B", bat: "\uEB5E", bathtub: "\uF817", bathtub-outline: "\uF818", battery: "\uE078", battery-10: "\uE079", battery-10-bluetooth: "\uE93D", battery-20: "\uE07A", battery-20-bluetooth: "\uE93E", battery-30: "\uE07B", battery-30-bluetooth: "\uE93F", battery-40: "\uE07C", battery-40-bluetooth: "\uE940", battery-50: "\uE07D", battery-50-bluetooth: "\uE941", battery-60: "\uE07E", battery-60-bluetooth: "\uE942", battery-70: "\uE07F", battery-70-bluetooth: "\uE943", battery-80: "\uE080", battery-80-bluetooth: "\uE944", battery-90: "\uE081", battery-90-bluetooth: "\uE945", battery-alert: "\uE082", battery-alert-bluetooth: "\uE946", battery-alert-variant: "\uF0CB", battery-alert-variant-outline: "\uF0CC", battery-arrow-down: "\uF7DD", battery-arrow-down-outline: "\uF7DE", battery-arrow-up: "\uF7DF", battery-arrow-up-outline: "\uF7E0", battery-bluetooth: "\uE947", battery-bluetooth-variant: "\uE948", battery-charging: "\uE083", battery-charging-10: "\uE89B", battery-charging-100: "\uE084", battery-charging-20: "\uE085", battery-charging-30: "\uE086", battery-charging-40: "\uE087", battery-charging-50: "\uE89C", battery-charging-60: "\uE088", battery-charging-70: "\uE89D", battery-charging-80: "\uE089", battery-charging-90: "\uE08A", battery-charging-high: "\uF2A5", battery-charging-low: "\uF2A3", battery-charging-medium: "\uF2A4", battery-charging-outline: "\uE89E", battery-charging-wireless: "\uE806", battery-charging-wireless-10: "\uE807", battery-charging-wireless-20: "\uE808", battery-charging-wireless-30: "\uE809", battery-charging-wireless-40: "\uE80A", battery-charging-wireless-50: "\uE80B", battery-charging-wireless-60: "\uE80C", battery-charging-wireless-70: "\uE80D", battery-charging-wireless-80: "\uE80E", battery-charging-wireless-90: "\uE80F", battery-charging-wireless-alert: "\uE810", battery-charging-wireless-outline: "\uE811", battery-check: "\uF7E1", battery-check-outline: "\uF7E2", battery-clock: "\uF9E4", battery-clock-outline: "\uF9E5", battery-heart: "\uF20E", battery-heart-outline: "\uF20F", battery-heart-variant: "\uF210", battery-high: "\uF2A2", battery-lock: "\uF79B", battery-lock-open: "\uF79C", battery-low: "\uF2A0", battery-medium: "\uF2A1", battery-minus: "\uF7E3", battery-minus-outline: "\uF7E4", battery-minus-variant: "\uE08B", battery-negative: "\uE08C", battery-off: "\uF25C", battery-off-outline: "\uF25D", battery-outline: "\uE08D", battery-plus: "\uF7E5", battery-plus-outline: "\uF7E6", battery-plus-variant: "\uE08E", battery-positive: "\uE08F", battery-remove: "\uF7E7", battery-remove-outline: "\uF7E8", battery-sync: "\uF833", battery-sync-outline: "\uF834", battery-unknown: "\uE090", battery-unknown-bluetooth: "\uE949", beach: "\uE091", beaker: "\uECE9", beaker-alert: "\uF228", beaker-alert-outline: "\uF229", beaker-check: "\uF22A", beaker-check-outline: "\uF22B", beaker-minus: "\uF22C", beaker-minus-outline: "\uF22D", beaker-outline: "\uE68F", beaker-plus: "\uF22E", beaker-plus-outline: "\uF22F", beaker-question: "\uF230", beaker-question-outline: "\uF231", beaker-remove: "\uF232", beaker-remove-outline: "\uF233", bed: "\uE2E2", bed-double: "\uEFD3", bed-double-outline: "\uEFD2", bed-empty: "\uE89F", bed-king: "\uEFD1", bed-king-outline: "\uEFD0", bed-outline: "\uE098", bed-queen: "\uEFCF", bed-queen-outline: "\uEFDA", bed-single: "\uF06C", bed-single-outline: "\uF06D", bee: "\uEFA0", bee-flower: "\uEFA1", beehive-off-outline: "\uF3EC", beehive-outline: "\uF0CD", beekeeper: "\uF4E1", beer: "\uE097", beer-outline: "\uF30B", bell: "\uE099", bell-alert: "\uED58", bell-alert-outline: "\uEE80", bell-badge: "\uF16A", bell-badge-outline: "\uE177", bell-cancel: "\uF3E6", bell-cancel-outline: "\uF3E7", bell-check: "\uF1E4", bell-check-outline: "\uF1E5", bell-circle: "\uED59", bell-circle-outline: "\uED5A", bell-cog: "\uFA28", bell-cog-outline: "\uFA29", bell-minus: "\uF3E8", bell-minus-outline: "\uF3E9", bell-off: "\uE09A", bell-off-outline: "\uEA90", bell-outline: "\uE09B", bell-plus: "\uE09C", bell-plus-outline: "\uEA91", bell-remove: "\uF3EA", bell-remove-outline: "\uF3EB", bell-ring: "\uE09D", bell-ring-outline: "\uE09E", bell-sleep: "\uE09F", bell-sleep-outline: "\uEA92", beta: "\uE0A0", betamax: "\uE9CA", biathlon: "\uEE13", bicycle: "\uF09B", bicycle-basket: "\uF234", bicycle-cargo: "\uF89B", bicycle-electric: "\uF5B3", bicycle-penny-farthing: "\uF5E8", bike: "\uE0A2", bike-fast: "\uF11E", billboard: "\uF00F", billiards: "\uEB60", billiards-rack: "\uEB61", binoculars: "\uE0A4", bio: "\uE0A5", biohazard: "\uE0A6", bird: "\uF5C5", bitbucket: "\uE0A7", bitcoin: "\uE812", black-mesa: "\uE0A8", blender: "\uECEA", blender-outline: "\uF819", blender-software: "\uE0AA", blinds: "\uE0AB", blinds-horizontal: "\uFA2A", blinds-horizontal-closed: "\uFA2B", blinds-open: "\uF010", blinds-vertical: "\uFA2C", blinds-vertical-closed: "\uFA2D", block-helper: "\uE0AC", blood-bag: "\uECEB", bluetooth: "\uE0AE", bluetooth-audio: "\uE0AF", bluetooth-connect: "\uE0B0", bluetooth-off: "\uE0B1", bluetooth-settings: "\uE0B2", bluetooth-transfer: "\uE0B3", blur: "\uE0B4", blur-linear: "\uE0B5", blur-off: "\uE0B6", blur-radial: "\uE0B7", bolt: "\uEDB2", bomb: "\uE690", bomb-off: "\uE6C4", bone: "\uE0B8", bone-off: "\uF9DF", book: "\uE0B9", book-account: "\uF3AC", book-account-outline: "\uF3AD", book-alert: "\uF67B", book-alert-outline: "\uF67C", book-alphabet: "\uE61C", book-arrow-down: "\uF67D", book-arrow-down-outline: "\uF67E", book-arrow-left: "\uF67F", book-arrow-left-outline: "\uF680", book-arrow-right: "\uF681", book-arrow-right-outline: "\uF682", book-arrow-up: "\uF683", book-arrow-up-outline: "\uF684", book-cancel: "\uF685", book-cancel-outline: "\uF686", book-check: "\uF4F2", book-check-outline: "\uF4F3", book-clock: "\uF687", book-clock-outline: "\uF688", book-cog: "\uF689", book-cog-outline: "\uF68A", book-cross: "\uE0A1", book-edit: "\uF68B", book-edit-outline: "\uF68C", book-education: "\uF6C8", book-education-outline: "\uF6C9", book-heart: "\uFA1C", book-heart-outline: "\uFA1D", book-information-variant: "\uF06E", book-lock: "\uE799", book-lock-open: "\uE79A", book-lock-open-outline: "\uF68D", book-lock-outline: "\uF68E", book-marker: "\uF68F", book-marker-outline: "\uF690", book-minus: "\uE5D8", book-minus-multiple: "\uEA93", book-minus-multiple-outline: "\uE90A", book-minus-outline: "\uF691", book-multiple: "\uE0BA", book-multiple-outline: "\uE435", book-music: "\uE066", book-music-outline: "\uF692", book-off: "\uF693", book-off-outline: "\uF694", book-open: "\uE0BC", book-open-blank-variant: "\uE0BD", book-open-outline: "\uEB62", book-open-page-variant: "\uE5D9", book-open-page-variant-outline: "\uF5D5", book-open-variant: "\uF4F6", book-outline: "\uEB63", book-play: "\uEE81", book-play-outline: "\uEE82", book-plus: "\uE5DA", book-plus-multiple: "\uEA94", book-plus-multiple-outline: "\uEADD", book-plus-outline: "\uF695", book-refresh: "\uF696", book-refresh-outline: "\uF697", book-remove: "\uEA96", book-remove-multiple: "\uEA95", book-remove-multiple-outline: "\uE4C9", book-remove-outline: "\uF698", book-search: "\uEE83", book-search-outline: "\uEE84", book-settings: "\uF699", book-settings-outline: "\uF69A", book-sync: "\uF69B", book-sync-outline: "\uF6C7", book-variant: "\uE0BE", book-variant-multiple: "\uE0BB", bookmark: "\uE0BF", bookmark-box-multiple: "\uF96B", bookmark-box-multiple-outline: "\uF96C", bookmark-check: "\uE0C0", bookmark-check-outline: "\uF37A", bookmark-minus: "\uE9CB", bookmark-minus-outline: "\uE9CC", bookmark-multiple: "\uEE14", bookmark-multiple-outline: "\uEE15", bookmark-music: "\uE0C1", bookmark-music-outline: "\uF378", bookmark-off: "\uE9CD", bookmark-off-outline: "\uE9CE", bookmark-outline: "\uE0C2", bookmark-plus: "\uE0C4", bookmark-plus-outline: "\uE0C3", bookmark-remove: "\uE0C5", bookmark-remove-outline: "\uF379", bookshelf: "\uF25E", boom-gate: "\uEE85", boom-gate-alert: "\uEE86", boom-gate-alert-outline: "\uEE87", boom-gate-arrow-down: "\uEE88", boom-gate-arrow-down-outline: "\uEE89", boom-gate-arrow-up: "\uEE8B", boom-gate-arrow-up-outline: "\uEE8C", boom-gate-outline: "\uEE8A", boom-gate-up: "\uF7F8", boom-gate-up-outline: "\uF7F9", boombox: "\uE5DB", boomerang: "\uF0CE", bootstrap: "\uE6C5", border-all: "\uE0C6", border-all-variant: "\uE8A0", border-bottom: "\uE0C7", border-bottom-variant: "\uE8A1", border-color: "\uE0C8", border-horizontal: "\uE0C9", border-inside: "\uE0CA", border-left: "\uE0CB", border-left-variant: "\uE8A2", border-none: "\uE0CC", border-none-variant: "\uE8A3", border-outside: "\uE0CD", border-right: "\uE0CE", border-right-variant: "\uE8A4", border-style: "\uE0CF", border-top: "\uE0D0", border-top-variant: "\uE8A5", border-vertical: "\uE0D1", bottle-soda: "\uF06F", bottle-soda-classic: "\uF070", bottle-soda-classic-outline: "\uF362", bottle-soda-outline: "\uF071", bottle-tonic: "\uF12D", bottle-tonic-outline: "\uF12E", bottle-tonic-plus: "\uF12F", bottle-tonic-plus-outline: "\uF130", bottle-tonic-skull: "\uF131", bottle-tonic-skull-outline: "\uF132", bottle-wine: "\uE853", bottle-wine-outline: "\uF30F", bow-arrow: "\uF840", bow-tie: "\uE677", bowl: "\uE28D", bowl-mix: "\uE616", bowl-mix-outline: "\uE2E3", bowl-outline: "\uE2A8", bowling: "\uE0D2", box: "\uE0D3", box-cutter: "\uE0D4", box-cutter-off: "\uEB49", box-shadow: "\uE636", boxing-glove: "\uEB64", braille: "\uE9CF", brain: "\uE9D0", bread-slice: "\uECED", bread-slice-outline: "\uECEE", bridge: "\uE617", briefcase: "\uE0D5", briefcase-account: "\uECEF", briefcase-account-outline: "\uECF0", briefcase-arrow-left-right: "\uFA8C", briefcase-arrow-left-right-outline: "\uFA8D", briefcase-arrow-up-down: "\uFA8E", briefcase-arrow-up-down-outline: "\uFA8F", briefcase-check: "\uE0D6", briefcase-check-outline: "\uF31D", briefcase-clock: "\uF0CF", briefcase-clock-outline: "\uF0D0", briefcase-download: "\uE0D7", briefcase-download-outline: "\uEC3C", briefcase-edit: "\uEA97", briefcase-edit-outline: "\uEC3D", briefcase-eye: "\uF7D8", briefcase-eye-outline: "\uF7D9", briefcase-minus: "\uEA29", briefcase-minus-outline: "\uEC3E", briefcase-off: "\uF657", briefcase-off-outline: "\uF658", briefcase-outline: "\uE813", briefcase-plus: "\uEA2A", briefcase-plus-outline: "\uEC3F", briefcase-remove: "\uEA2B", briefcase-remove-outline: "\uEC40", briefcase-search: "\uEA2C", briefcase-search-outline: "\uEC41", briefcase-upload: "\uE0D8", briefcase-upload-outline: "\uEC42", briefcase-variant: "\uF493", briefcase-variant-off: "\uF659", briefcase-variant-off-outline: "\uF65A", briefcase-variant-outline: "\uF494", brightness-1: "\uE0D9", brightness-2: "\uE0DA", brightness-3: "\uE0DB", brightness-4: "\uE0DC", brightness-5: "\uE0DD", brightness-6: "\uE0DE", brightness-7: "\uE0DF", brightness-auto: "\uE0E0", brightness-percent: "\uECF1", broadcast: "\uF71F", broadcast-off: "\uF720", broom: "\uE0E1", brush: "\uE0E2", brush-off: "\uF770", brush-outline: "\uFA0C", brush-variant: "\uF812", bucket: "\uF414", bucket-outline: "\uF415", buffet: "\uE577", bug: "\uE0E3", bug-check: "\uEA2D", bug-check-outline: "\uEA2E", bug-outline: "\uEA2F", bugle: "\uEDB3", bulkhead-light: "\uFA2E", bulldozer: "\uEB21", bullet: "\uECF2", bulletin-board: "\uE0E4", bullhorn: "\uE0E5", bullhorn-outline: "\uEB22", bullhorn-variant: "\uF96D", bullhorn-variant-outline: "\uF96E", bullseye: "\uE5DC", bullseye-arrow: "\uE8C8", bulma: "\uF2E6", bunk-bed: "\uF301", bunk-bed-outline: "\uE096", bus: "\uE0E6", bus-alert: "\uEA98", bus-articulated-end: "\uE79B", bus-articulated-front: "\uE79C", bus-clock: "\uE8C9", bus-double-decker: "\uE79D", bus-electric: "\uF91C", bus-marker: "\uF211", bus-multiple: "\uEF3E", bus-school: "\uE79E", bus-side: "\uE79F", bus-stop: "\uF011", bus-stop-covered: "\uF012", bus-stop-uncovered: "\uF013", butterfly: "\uF588", butterfly-outline: "\uF589", cabin-a-frame: "\uF88B", cable-data: "\uF393", cached: "\uE0E7", cactus: "\uEDB4", cake: "\uE0E8", cake-layered: "\uE0E9", cake-variant: "\uE0EA", cake-variant-outline: "\uF7EF", calculator: "\uE0EB", calculator-variant: "\uEA99", calculator-variant-outline: "\uF5A5", calendar: "\uE0EC", calendar-account: "\uEED6", calendar-account-outline: "\uEED7", calendar-alert: "\uEA30", calendar-arrow-left: "\uF133", calendar-arrow-right: "\uF134", calendar-blank: "\uE0ED", calendar-blank-multiple: "\uF072", calendar-blank-outline: "\uEB65", calendar-check: "\uE0EE", calendar-check-outline: "\uEC43", calendar-clock: "\uE0EF", calendar-clock-outline: "\uF6E0", calendar-collapse-horizontal: "\uF89C", calendar-cursor: "\uF57A", calendar-edit: "\uE8A6", calendar-end: "\uF66B", calendar-expand-horizontal: "\uF89D", calendar-export: "\uEB23", calendar-heart: "\uE9D1", calendar-import: "\uEB24", calendar-lock: "\uF640", calendar-lock-outline: "\uF641", calendar-minus: "\uED5B", calendar-month: "\uEE16", calendar-month-outline: "\uEE17", calendar-multiple: "\uE0F0", calendar-multiple-check: "\uE0F1", calendar-multiselect: "\uEA31", calendar-outline: "\uEB66", calendar-plus: "\uE0F2", calendar-question: "\uE691", calendar-range: "\uE678", calendar-range-outline: "\uEB67", calendar-refresh: "\uE1E0", calendar-refresh-outline: "\uE202", calendar-remove: "\uE0F3", calendar-remove-outline: "\uEC44", calendar-search: "\uE94B", calendar-star: "\uE9D2", calendar-start: "\uF66C", calendar-sync: "\uEE8D", calendar-sync-outline: "\uEE8E", calendar-text: "\uE0F4", calendar-text-outline: "\uEC45", calendar-today: "\uE0F5", calendar-today-outline: "\uFA2F", calendar-week: "\uEA32", calendar-week-begin: "\uEA33", calendar-week-begin-outline: "\uFA30", calendar-week-end: "\uFA31", calendar-week-end-outline: "\uFA32", calendar-week-outline: "\uFA33", calendar-weekend: "\uEED8", calendar-weekend-outline: "\uEED9", call-made: "\uE0F6", call-merge: "\uE0F7", call-missed: "\uE0F8", call-received: "\uE0F9", call-split: "\uE0FA", camcorder: "\uE0FB", camcorder-off: "\uE0FE", camera: "\uE0FF", camera-account: "\uE8CA", camera-burst: "\uE692", camera-control: "\uEB68", camera-document: "\uF870", camera-document-off: "\uF871", camera-enhance: "\uE100", camera-enhance-outline: "\uEB69", camera-flip: "\uF5D8", camera-flip-outline: "\uF5D9", camera-front: "\uE101", camera-front-variant: "\uE102", camera-gopro: "\uE7A0", camera-image: "\uE8CB", camera-iris: "\uE103", camera-lock: "\uFA13", camera-lock-outline: "\uFA14", camera-marker: "\uF9A6", camera-marker-outline: "\uF9A7", camera-metering-center: "\uE7A1", camera-metering-matrix: "\uE7A2", camera-metering-partial: "\uE7A3", camera-metering-spot: "\uE7A4", camera-off: "\uE5DE", camera-off-outline: "\uF9BE", camera-outline: "\uED5C", camera-party-mode: "\uE104", camera-plus: "\uEEDA", camera-plus-outline: "\uEEDB", camera-rear: "\uE105", camera-rear-variant: "\uE106", camera-retake: "\uEE18", camera-retake-outline: "\uEE19", camera-switch: "\uE107", camera-switch-outline: "\uE849", camera-timer: "\uE108", camera-wireless: "\uEDB5", camera-wireless-outline: "\uEDB6", campfire: "\uEEDC", cancel: "\uE739", candelabra: "\uF7D1", candelabra-fire: "\uF7D2", candle: "\uE5E1", candy: "\uF96F", candy-off: "\uF970", candy-off-outline: "\uF971", candy-outline: "\uF972", candycane: "\uE109", cannabis: "\uE7A5", cannabis-off: "\uF66D", caps-lock: "\uEA9A", car: "\uE10A", car-2-plus: "\uF014", car-3-plus: "\uF015", car-arrow-left: "\uF3B1", car-arrow-right: "\uF3B2", car-back: "\uEE1A", car-battery: "\uE10B", car-brake-abs: "\uEC46", car-brake-alert: "\uEC47", car-brake-fluid-level: "\uF908", car-brake-hold: "\uED5D", car-brake-low-pressure: "\uF909", car-brake-parking: "\uED5E", car-brake-retarder: "\uF016", car-brake-temperature: "\uF90A", car-brake-worn-linings: "\uF90B", car-child-seat: "\uEFA2", car-clock: "\uF973", car-clutch: "\uF017", car-cog: "\uF3CB", car-connected: "\uE10C", car-convertible: "\uE7A6", car-coolant-level: "\uF018", car-cruise-control: "\uED5F", car-defrost-front: "\uED60", car-defrost-rear: "\uED61", car-door: "\uEB6A", car-door-lock: "\uF09C", car-electric: "\uEB6B", car-electric-outline: "\uF5B4", car-emergency: "\uF60E", car-esp: "\uEC48", car-estate: "\uE7A7", car-hatchback: "\uE7A8", car-info: "\uF1BD", car-key: "\uEB6C", car-lifted-pickup: "\uF52C", car-light-alert: "\uF90C", car-light-dimmed: "\uEC49", car-light-fog: "\uEC4A", car-light-high: "\uEC4B", car-limousine: "\uE8CC", car-multiple: "\uEB6D", car-off: "\uEE1B", car-outline: "\uF4EC", car-parking-lights: "\uED62", car-pickup: "\uE7A9", car-seat: "\uEFA3", car-seat-cooler: "\uEFA4", car-seat-heater: "\uEFA5", car-select: "\uF878", car-settings: "\uF3CC", car-shift-pattern: "\uEF3F", car-side: "\uE7AA", car-speed-limiter: "\uF90D", car-sports: "\uE7AB", car-tire-alert: "\uEC4C", car-traction-control: "\uED63", car-turbocharger: "\uF019", car-wash: "\uE10D", car-windshield: "\uF01A", car-windshield-outline: "\uF01B", car-wireless: "\uF877", car-wrench: "\uF813", carabiner: "\uF4BF", caravan: "\uE7AC", card: "\uEB6E", card-account-details: "\uE5D1", card-account-details-outline: "\uEDAA", card-account-details-star: "\uE2A2", card-account-details-star-outline: "\uE6DA", card-account-mail: "\uE18D", card-account-mail-outline: "\uEE97", card-account-phone: "\uEE98", card-account-phone-outline: "\uEE99", card-bulleted: "\uEB6F", card-bulleted-off: "\uEB70", card-bulleted-off-outline: "\uEB71", card-bulleted-outline: "\uEB72", card-bulleted-settings: "\uEB73", card-bulleted-settings-outline: "\uEB74", card-minus: "\uF5FF", card-minus-outline: "\uF600", card-multiple: "\uF7F0", card-multiple-outline: "\uF7F1", card-off: "\uF601", card-off-outline: "\uF602", card-outline: "\uEB75", card-plus: "\uF1FE", card-plus-outline: "\uF1FF", card-remove: "\uF603", card-remove-outline: "\uF604", card-search: "\uF073", card-search-outline: "\uF074", card-text: "\uEB76", card-text-outline: "\uEB77", cards: "\uE637", cards-club: "\uE8CD", cards-club-outline: "\uF89E", cards-diamond: "\uE8CE", cards-diamond-outline: "\uF01C", cards-heart: "\uE8CF", cards-heart-outline: "\uF89F", cards-outline: "\uE638", cards-playing: "\uF8A0", cards-playing-club: "\uF8A1", cards-playing-club-multiple: "\uF8A2", cards-playing-club-multiple-outline: "\uF8A3", cards-playing-club-outline: "\uF8A4", cards-playing-diamond: "\uF8A5", cards-playing-diamond-multiple: "\uF8A6", cards-playing-diamond-multiple-outline: "\uF8A7", cards-playing-diamond-outline: "\uF8A8", cards-playing-heart: "\uF8A9", cards-playing-heart-multiple: "\uF8AA", cards-playing-heart-multiple-outline: "\uF8AB", cards-playing-heart-outline: "\uF8AC", cards-playing-outline: "\uE639", cards-playing-spade: "\uF8AD", cards-playing-spade-multiple: "\uF8AE", cards-playing-spade-multiple-outline: "\uF8AF", cards-playing-spade-outline: "\uF8B0", cards-spade: "\uE8D0", cards-spade-outline: "\uF8B1", cards-variant: "\uE6C6", carrot: "\uE10E", cart: "\uE10F", cart-arrow-down: "\uED65", cart-arrow-right: "\uEC4D", cart-arrow-up: "\uED66", cart-check: "\uF5E9", cart-heart: "\uF8DF", cart-minus: "\uED67", cart-off: "\uE66A", cart-outline: "\uE110", cart-plus: "\uE111", cart-remove: "\uED68", cart-variant: "\uF5EA", case-sensitive-alt: "\uE112", cash: "\uE113", cash-100: "\uE114", cash-check: "\uF4ED", cash-clock: "\uFA90", cash-fast: "\uF85B", cash-lock: "\uF4E9", cash-lock-open: "\uF4EA", cash-marker: "\uEDB7", cash-minus: "\uF25F", cash-multiple: "\uE115", cash-plus: "\uF260", cash-refund: "\uEA9B", cash-register: "\uECF3", cash-remove: "\uF261", cash-sync: "\uFA91", cassette: "\uE9D3", cast: "\uE117", cast-audio: "\uF01D", cast-audio-variant: "\uF748", cast-connected: "\uE118", cast-education: "\uEE1C", cast-off: "\uE789", cast-variant: "\uE01E", castle: "\uE119", cat: "\uE11A", cctv: "\uE7AD", cctv-off: "\uF85E", ceiling-fan: "\uF796", ceiling-fan-light: "\uF797", ceiling-light: "\uE768", ceiling-light-multiple: "\uF8DC", ceiling-light-multiple-outline: "\uF8DD", ceiling-light-outline: "\uF7C6", cellphone: "\uE11B", cellphone-arrow-down: "\uE9D4", cellphone-arrow-down-variant: "\uF9C4", cellphone-basic: "\uE11D", cellphone-charging: "\uF396", cellphone-check: "\uF7FC", cellphone-cog: "\uE950", cellphone-dock: "\uE11E", cellphone-information: "\uEF40", cellphone-key: "\uE94D", cellphone-link: "\uE120", cellphone-link-off: "\uE121", cellphone-lock: "\uE94E", cellphone-marker: "\uF839", cellphone-message: "\uE8D2", cellphone-message-off: "\uF0D1", cellphone-nfc: "\uEE8F", cellphone-nfc-off: "\uF2D7", cellphone-off: "\uE94F", cellphone-play: "\uF01E", cellphone-remove: "\uE94C", cellphone-screenshot: "\uEA34", cellphone-settings: "\uE122", cellphone-sound: "\uE951", cellphone-text: "\uE8D1", cellphone-wireless: "\uE814", centos: "\uF119", certificate: "\uE123", certificate-outline: "\uF187", chair-rolling: "\uEF47", chair-school: "\uE124", chandelier: "\uF792", charity: "\uEC4E", chart-arc: "\uE125", chart-areaspline: "\uE126", chart-areaspline-variant: "\uEE90", chart-bar: "\uE127", chart-bar-stacked: "\uE769", chart-bell-curve: "\uEC4F", chart-bell-curve-cumulative: "\uEFA6", chart-box: "\uF54C", chart-box-outline: "\uF54D", chart-box-plus-outline: "\uF54E", chart-bubble: "\uE5E2", chart-donut: "\uE7AE", chart-donut-variant: "\uE7AF", chart-gantt: "\uE66B", chart-histogram: "\uE128", chart-line: "\uE129", chart-line-stacked: "\uE76A", chart-line-variant: "\uE7B0", chart-multiline: "\uE8D3", chart-multiple: "\uF212", chart-pie: "\uE12A", chart-ppf: "\uF37F", chart-sankey: "\uF1DE", chart-sankey-variant: "\uF1DF", chart-scatter-plot: "\uEE91", chart-scatter-plot-hexbin: "\uE66C", chart-timeline: "\uE66D", chart-timeline-variant: "\uEE92", chart-timeline-variant-shimmer: "\uF5B5", chart-tree: "\uEE93", chart-waterfall: "\uF917", chat: "\uEB78", chat-alert: "\uEB79", chat-alert-outline: "\uF2C8", chat-minus: "\uF40F", chat-minus-outline: "\uF412", chat-outline: "\uEEDD", chat-plus: "\uF40E", chat-plus-outline: "\uF411", chat-processing: "\uEB7A", chat-processing-outline: "\uF2C9", chat-question: "\uF737", chat-question-outline: "\uF738", chat-remove: "\uF410", chat-remove-outline: "\uF413", chat-sleep: "\uF2D0", chat-sleep-outline: "\uF2D1", check: "\uE12B", check-all: "\uE12C", check-bold: "\uEE1D", check-circle: "\uE5DF", check-circle-outline: "\uE5E0", check-decagram: "\uE790", check-decagram-outline: "\uF73F", check-network: "\uEC52", check-network-outline: "\uEC53", check-outline: "\uE854", check-underline: "\uEE1E", check-underline-circle: "\uEE1F", check-underline-circle-outline: "\uEE20", checkbook: "\uEA9C", checkbox-blank: "\uE12D", checkbox-blank-badge: "\uF175", checkbox-blank-badge-outline: "\uE116", checkbox-blank-circle: "\uE12E", checkbox-blank-circle-outline: "\uE12F", checkbox-blank-off: "\uF2EB", checkbox-blank-off-outline: "\uF2EC", checkbox-blank-outline: "\uE130", checkbox-intermediate: "\uE855", checkbox-marked: "\uE131", checkbox-marked-circle: "\uE132", checkbox-marked-circle-outline: "\uE133", checkbox-marked-circle-plus-outline: "\uF926", checkbox-marked-outline: "\uE134", checkbox-multiple-blank: "\uE135", checkbox-multiple-blank-circle: "\uE63A", checkbox-multiple-blank-circle-outline: "\uE63B", checkbox-multiple-blank-outline: "\uE136", checkbox-multiple-marked: "\uE137", checkbox-multiple-marked-circle: "\uE63C", checkbox-multiple-marked-circle-outline: "\uE63D", checkbox-multiple-marked-outline: "\uE138", checkbox-multiple-outline: "\uEC50", checkbox-outline: "\uEC51", checkerboard: "\uE139", checkerboard-minus: "\uF201", checkerboard-plus: "\uF200", checkerboard-remove: "\uF202", cheese: "\uF2B8", cheese-off: "\uF3ED", chef-hat: "\uEB7B", chemical-weapon: "\uE13A", chess-bishop: "\uE85B", chess-king: "\uE856", chess-knight: "\uE857", chess-pawn: "\uE858", chess-queen: "\uE859", chess-rook: "\uE85A", chevron-double-down: "\uE13B", chevron-double-left: "\uE13C", chevron-double-right: "\uE13D", chevron-double-up: "\uE13E", chevron-down: "\uE13F", chevron-down-box: "\uE9D5", chevron-down-box-outline: "\uE9D6", chevron-down-circle: "\uEB25", chevron-down-circle-outline: "\uEB26", chevron-left: "\uE140", chevron-left-box: "\uE9D7", chevron-left-box-outline: "\uE9D8", chevron-left-circle: "\uEB27", chevron-left-circle-outline: "\uEB28", chevron-right: "\uE141", chevron-right-box: "\uE9D9", chevron-right-box-outline: "\uE9DA", chevron-right-circle: "\uEB29", chevron-right-circle-outline: "\uEB2A", chevron-triple-down: "\uEDB8", chevron-triple-left: "\uEDB9", chevron-triple-right: "\uEDBA", chevron-triple-up: "\uEDBB", chevron-up: "\uE142", chevron-up-box: "\uE9DB", chevron-up-box-outline: "\uE9DC", chevron-up-circle: "\uEB2B", chevron-up-circle-outline: "\uEB2C", chili-alert: "\uF7E9", chili-alert-outline: "\uF7EA", chili-hot: "\uE7B1", chili-hot-outline: "\uF7EB", chili-medium: "\uE7B2", chili-medium-outline: "\uF7EC", chili-mild: "\uE7B3", chili-mild-outline: "\uF7ED", chili-off: "\uF466", chili-off-outline: "\uF7EE", chip: "\uE619", church: "\uE143", cigar: "\uF188", cigar-off: "\uF41A", circle: "\uE764", circle-box: "\uF5DB", circle-box-outline: "\uF5DC", circle-double: "\uEE94", circle-edit-outline: "\uE8D4", circle-expand: "\uEE95", circle-half: "\uF394", circle-half-full: "\uF395", circle-medium: "\uE9DD", circle-multiple: "\uEB37", circle-multiple-outline: "\uE694", circle-off-outline: "\uF0D2", circle-opacity: "\uF852", circle-outline: "\uE765", circle-slice-1: "\uEA9D", circle-slice-2: "\uEA9E", circle-slice-3: "\uEA9F", circle-slice-4: "\uEAA0", circle-slice-5: "\uEAA1", circle-slice-6: "\uEAA2", circle-slice-7: "\uEAA3", circle-slice-8: "\uEAA4", circle-small: "\uE9DE", circular-saw: "\uEE21", city: "\uE145", city-variant: "\uEA35", city-variant-outline: "\uEA36", clipboard: "\uE146", clipboard-account: "\uE147", clipboard-account-outline: "\uEC54", clipboard-alert: "\uE148", clipboard-alert-outline: "\uECF6", clipboard-arrow-down: "\uE149", clipboard-arrow-down-outline: "\uEC55", clipboard-arrow-left: "\uE14A", clipboard-arrow-left-outline: "\uECF7", clipboard-arrow-right: "\uECF8", clipboard-arrow-right-outline: "\uECF9", clipboard-arrow-up: "\uEC56", clipboard-arrow-up-outline: "\uEC57", clipboard-check: "\uE14D", clipboard-check-multiple: "\uF262", clipboard-check-multiple-outline: "\uF263", clipboard-check-outline: "\uE8A7", clipboard-clock: "\uF6E1", clipboard-clock-outline: "\uF6E2", clipboard-edit: "\uF4E4", clipboard-edit-outline: "\uF4E5", clipboard-file: "\uF264", clipboard-file-outline: "\uF265", clipboard-flow: "\uE6C7", clipboard-flow-outline: "\uF116", clipboard-list: "\uF0D3", clipboard-list-outline: "\uF0D4", clipboard-minus: "\uF617", clipboard-minus-outline: "\uF618", clipboard-multiple: "\uF266", clipboard-multiple-outline: "\uF267", clipboard-off: "\uF619", clipboard-off-outline: "\uF61A", clipboard-outline: "\uE14B", clipboard-play: "\uEC58", clipboard-play-multiple: "\uF268", clipboard-play-multiple-outline: "\uF269", clipboard-play-outline: "\uEC59", clipboard-plus: "\uE750", clipboard-plus-outline: "\uF31E", clipboard-pulse: "\uE85C", clipboard-pulse-outline: "\uE85D", clipboard-remove: "\uF61B", clipboard-remove-outline: "\uF61C", clipboard-search: "\uF61D", clipboard-search-outline: "\uF61E", clipboard-text: "\uE14C", clipboard-text-clock: "\uF8F8", clipboard-text-clock-outline: "\uF8F9", clipboard-text-multiple: "\uF26A", clipboard-text-multiple-outline: "\uF26B", clipboard-text-off: "\uF61F", clipboard-text-off-outline: "\uF620", clipboard-text-outline: "\uEA37", clipboard-text-play: "\uEC5A", clipboard-text-play-outline: "\uEC5B", clipboard-text-search: "\uF621", clipboard-text-search-outline: "\uF622", clippy: "\uE14E", clock: "\uE953", clock-alert: "\uE954", clock-alert-outline: "\uE5CD", clock-check: "\uEFA7", clock-check-outline: "\uEFA8", clock-digital: "\uEE96", clock-edit: "\uF9B9", clock-edit-outline: "\uF9BA", clock-end: "\uE150", clock-fast: "\uE151", clock-in: "\uE152", clock-minus: "\uF862", clock-minus-outline: "\uF863", clock-out: "\uE153", clock-outline: "\uE14F", clock-plus: "\uF860", clock-plus-outline: "\uF861", clock-remove: "\uF864", clock-remove-outline: "\uF865", clock-start: "\uE154", clock-time-eight: "\uF445", clock-time-eight-outline: "\uF451", clock-time-eleven: "\uF448", clock-time-eleven-outline: "\uF454", clock-time-five: "\uF442", clock-time-five-outline: "\uF44E", clock-time-four: "\uF441", clock-time-four-outline: "\uF44D", clock-time-nine: "\uF446", clock-time-nine-outline: "\uF452", clock-time-one: "\uF43E", clock-time-one-outline: "\uF44A", clock-time-seven: "\uF444", clock-time-seven-outline: "\uF450", clock-time-six: "\uF443", clock-time-six-outline: "\uF44F", clock-time-ten: "\uF447", clock-time-ten-outline: "\uF453", clock-time-three: "\uF440", clock-time-three-outline: "\uF44C", clock-time-twelve: "\uF449", clock-time-twelve-outline: "\uF455", clock-time-two: "\uF43F", clock-time-two-outline: "\uF44B", close: "\uE155", close-box: "\uE156", close-box-multiple: "\uEC5C", close-box-multiple-outline: "\uEC5D", close-box-outline: "\uE157", close-circle: "\uE158", close-circle-multiple: "\uE629", close-circle-multiple-outline: "\uE882", close-circle-outline: "\uE159", close-network: "\uE15A", close-network-outline: "\uEC5E", close-octagon: "\uE15B", close-octagon-outline: "\uE15C", close-outline: "\uE6C8", close-thick: "\uF397", closed-caption: "\uE15D", closed-caption-outline: "\uEDBC", cloud: "\uE15E", cloud-alert: "\uE9DF", cloud-braces: "\uE7B4", cloud-check: "\uE15F", cloud-check-outline: "\uF2CB", cloud-circle: "\uE160", cloud-download: "\uE161", cloud-download-outline: "\uEB7C", cloud-lock: "\uF1F0", cloud-lock-outline: "\uF1F1", cloud-off-outline: "\uE163", cloud-outline: "\uE162", cloud-percent: "\uFA34", cloud-percent-outline: "\uFA35", cloud-print: "\uE164", cloud-print-outline: "\uE165", cloud-question: "\uEA38", cloud-refresh: "\uE529", cloud-search: "\uE955", cloud-search-outline: "\uE956", cloud-sync: "\uE63E", cloud-sync-outline: "\uF2D5", cloud-tags: "\uE7B5", cloud-upload: "\uE166", cloud-upload-outline: "\uEB7D", clover: "\uE815", coach-lamp: "\uF01F", coach-lamp-variant: "\uFA36", coat-rack: "\uF09D", code-array: "\uE167", code-braces: "\uE168", code-braces-box: "\uF0D5", code-brackets: "\uE169", code-equal: "\uE16A", code-greater-than: "\uE16B", code-greater-than-or-equal: "\uE16C", code-json: "\uE625", code-less-than: "\uE16D", code-less-than-or-equal: "\uE16E", code-not-equal: "\uE16F", code-not-equal-variant: "\uE170", code-parentheses: "\uE171", code-parentheses-box: "\uF0D6", code-string: "\uE172", code-tags: "\uE173", code-tags-check: "\uE693", codepen: "\uE174", coffee: "\uE175", coffee-maker: "\uF09E", coffee-maker-check: "\uF930", coffee-maker-check-outline: "\uF931", coffee-maker-outline: "\uF81A", coffee-off: "\uEFA9", coffee-off-outline: "\uEFAA", coffee-outline: "\uE6C9", coffee-to-go: "\uE176", coffee-to-go-outline: "\uF30D", coffin: "\uEB7E", cog: "\uE492", cog-box: "\uE493", cog-clockwise: "\uF1DC", cog-counterclockwise: "\uF1DD", cog-off: "\uF3CD", cog-off-outline: "\uF3CE", cog-outline: "\uE8BA", cog-pause: "\uF932", cog-pause-outline: "\uF933", cog-play: "\uF934", cog-play-outline: "\uF935", cog-refresh: "\uF45D", cog-refresh-outline: "\uF45E", cog-stop: "\uF936", cog-stop-outline: "\uF937", cog-sync: "\uF45F", cog-sync-outline: "\uF460", cog-transfer: "\uF05A", cog-transfer-outline: "\uF05B", cogs: "\uE8D5", collage: "\uE63F", collapse-all: "\uEAA5", collapse-all-outline: "\uEAA6", color-helper: "\uE178", comma: "\uEE22", comma-box: "\uEE2A", comma-box-outline: "\uEE23", comma-circle: "\uEE24", comma-circle-outline: "\uEE25", comment: "\uE179", comment-account: "\uE17A", comment-account-outline: "\uE17B", comment-alert: "\uE17C", comment-alert-outline: "\uE17D", comment-arrow-left: "\uE9E0", comment-arrow-left-outline: "\uE9E1", comment-arrow-right: "\uE9E2", comment-arrow-right-outline: "\uE9E3", comment-bookmark: "\uF5AD", comment-bookmark-outline: "\uF5AE", comment-check: "\uE17E", comment-check-outline: "\uE17F", comment-edit: "\uF1BE", comment-edit-outline: "\uF2C3", comment-eye: "\uEA39", comment-eye-outline: "\uEA3A", comment-flash: "\uF5AF", comment-flash-outline: "\uF5B0", comment-minus: "\uF5DE", comment-minus-outline: "\uF5DF", comment-multiple: "\uE85E", comment-multiple-outline: "\uE180", comment-off: "\uF5E0", comment-off-outline: "\uF5E1", comment-outline: "\uE181", comment-plus: "\uE9E4", comment-plus-outline: "\uE182", comment-processing: "\uE183", comment-processing-outline: "\uE184", comment-question: "\uE816", comment-question-outline: "\uE185", comment-quote: "\uF020", comment-quote-outline: "\uF021", comment-remove: "\uE5DD", comment-remove-outline: "\uE186", comment-search: "\uEA3B", comment-search-outline: "\uEA3C", comment-text: "\uE187", comment-text-multiple: "\uE85F", comment-text-multiple-outline: "\uE860", comment-text-outline: "\uE188", compare: "\uE189", compare-horizontal: "\uF491", compare-remove: "\uF8B2", compare-vertical: "\uF492", compass: "\uE18A", compass-off: "\uEB7F", compass-off-outline: "\uEB80", compass-outline: "\uE18B", compass-rose: "\uF381", compost: "\uFA37", cone: "\uF94B", cone-off: "\uF94C", connection: "\uF615", console: "\uE18C", console-line: "\uE7B6", console-network: "\uE8A8", console-network-outline: "\uEC5F", consolidate: "\uF0D7", contactless-payment: "\uED69", contactless-payment-circle: "\uE320", contactless-payment-circle-outline: "\uE407", contacts: "\uE6CA", contacts-outline: "\uE5B7", contain: "\uEA3D", contain-end: "\uEA3E", contain-start: "\uEA3F", content-copy: "\uE18E", content-cut: "\uE18F", content-duplicate: "\uE190", content-paste: "\uE191", content-save: "\uE192", content-save-alert: "\uEF41", content-save-alert-outline: "\uEF42", content-save-all: "\uE193", content-save-all-outline: "\uEF43", content-save-check: "\uF8E9", content-save-check-outline: "\uF8EA", content-save-cog: "\uF45A", content-save-cog-outline: "\uF45B", content-save-edit: "\uECFA", content-save-edit-outline: "\uECFB", content-save-move: "\uEE26", content-save-move-outline: "\uEE27", content-save-off: "\uF642", content-save-off-outline: "\uF643", content-save-outline: "\uE817", content-save-settings: "\uE61A", content-save-settings-outline: "\uEB2D", contrast: "\uE194", contrast-box: "\uE195", contrast-circle: "\uE196", controller-classic: "\uEB81", controller-classic-outline: "\uEB82", cookie: "\uE197", cookie-alert: "\uF6CF", cookie-alert-outline: "\uF6D0", cookie-check: "\uF6D1", cookie-check-outline: "\uF6D2", cookie-clock: "\uF6E3", cookie-clock-outline: "\uF6E4", cookie-cog: "\uF6D3", cookie-cog-outline: "\uF6D4", cookie-edit: "\uF6E5", cookie-edit-outline: "\uF6E6", cookie-lock: "\uF6E7", cookie-lock-outline: "\uF6E8", cookie-minus: "\uF6D9", cookie-minus-outline: "\uF6DA", cookie-off: "\uF6E9", cookie-off-outline: "\uF6EA", cookie-outline: "\uF6DD", cookie-plus: "\uF6D5", cookie-plus-outline: "\uF6D6", cookie-refresh: "\uF6EB", cookie-refresh-outline: "\uF6EC", cookie-remove: "\uF6D7", cookie-remove-outline: "\uF6D8", cookie-settings: "\uF6DB", cookie-settings-outline: "\uF6DC", coolant-temperature: "\uE3C7", copyleft: "\uF938", copyright: "\uE5E5", cordova: "\uE957", corn: "\uE7B7", corn-off: "\uF3EE", cosine-wave: "\uF478", counter: "\uE198", countertop: "\uF81B", countertop-outline: "\uF81C", cow: "\uE199", cow-off: "\uF8FB", cpu-32-bit: "\uEEDE", cpu-64-bit: "\uEEDF", cradle: "\uF98A", cradle-outline: "\uF990", crane: "\uE861", creation: "\uE673", creative-commons: "\uED6A", credit-card: "\uEFEE", credit-card-check: "\uF3CF", credit-card-check-outline: "\uF3D0", credit-card-chip: "\uF90E", credit-card-chip-outline: "\uF90F", credit-card-clock: "\uEEE0", credit-card-clock-outline: "\uEEE1", credit-card-edit: "\uF7D6", credit-card-edit-outline: "\uF7D7", credit-card-fast: "\uF910", credit-card-fast-outline: "\uF911", credit-card-lock: "\uF8E6", credit-card-lock-outline: "\uF8E7", credit-card-marker: "\uE6A7", credit-card-marker-outline: "\uEDBD", credit-card-minus: "\uEFAB", credit-card-minus-outline: "\uEFAC", credit-card-multiple: "\uEFEF", credit-card-multiple-outline: "\uE19B", credit-card-off: "\uEFF0", credit-card-off-outline: "\uE5E3", credit-card-outline: "\uE19A", credit-card-plus: "\uEFF1", credit-card-plus-outline: "\uE675", credit-card-refresh: "\uF644", credit-card-refresh-outline: "\uF645", credit-card-refund: "\uEFF2", credit-card-refund-outline: "\uEAA7", credit-card-remove: "\uEFAD", credit-card-remove-outline: "\uEFAE", credit-card-scan: "\uEFF3", credit-card-scan-outline: "\uE19C", credit-card-search: "\uF646", credit-card-search-outline: "\uF647", credit-card-settings: "\uEFF4", credit-card-settings-outline: "\uE8D6", credit-card-sync: "\uF648", credit-card-sync-outline: "\uF649", credit-card-wireless: "\uE801", credit-card-wireless-off: "\uE579", credit-card-wireless-off-outline: "\uE57A", credit-card-wireless-outline: "\uED6B", cricket: "\uED6C", crop: "\uE19D", crop-free: "\uE19E", crop-landscape: "\uE19F", crop-portrait: "\uE1A0", crop-rotate: "\uE695", crop-square: "\uE1A1", cross: "\uE952", cross-bolnisi: "\uECEC", cross-celtic: "\uECF4", cross-outline: "\uECF5", crosshairs: "\uE1A2", crosshairs-gps: "\uE1A3", crosshairs-off: "\uEF44", crosshairs-question: "\uF135", crowd: "\uF974", crown: "\uE1A4", crown-circle: "\uF7DB", crown-circle-outline: "\uF7DC", crown-outline: "\uF1CF", cryengine: "\uE958", crystal-ball: "\uEB2E", cube: "\uE1A5", cube-off: "\uF41B", cube-off-outline: "\uF41C", cube-outline: "\uE1A6", cube-scan: "\uEB83", cube-send: "\uE1A7", cube-unfolded: "\uE1A8", cup: "\uE1A9", cup-off: "\uE5E4", cup-off-outline: "\uF37C", cup-outline: "\uF30E", cup-water: "\uE1AA", cupboard: "\uEF45", cupboard-outline: "\uEF46", cupcake: "\uE959", curling: "\uE862", currency-bdt: "\uE863", currency-brl: "\uEB84", currency-btc: "\uE1AB", currency-cny: "\uE7B9", currency-eth: "\uE7BA", currency-eur: "\uE1AC", currency-eur-off: "\uF314", currency-fra: "\uFA38", currency-gbp: "\uE1AD", currency-ils: "\uEC60", currency-inr: "\uE1AE", currency-jpy: "\uE7BB", currency-krw: "\uE7BC", currency-kzt: "\uE864", currency-mnt: "\uF511", currency-ngn: "\uE1AF", currency-php: "\uE9E5", currency-rial: "\uEE9B", currency-rub: "\uE1B0", currency-rupee: "\uF975", currency-sign: "\uE7BD", currency-try: "\uE1B1", currency-twd: "\uE7BE", currency-usd: "\uE1C0", currency-usd-off: "\uE679", current-ac: "\uF47F", current-dc: "\uE95B", cursor-default: "\uE1BF", cursor-default-click: "\uECFC", cursor-default-click-outline: "\uECFD", cursor-default-gesture: "\uF126", cursor-default-gesture-outline: "\uF127", cursor-default-outline: "\uE1BE", cursor-move: "\uE1BD", cursor-pointer: "\uE1BC", cursor-text: "\uE5E6", curtains: "\uF845", curtains-closed: "\uF846", cylinder: "\uF94D", cylinder-off: "\uF94E", dance-ballroom: "\uF5FA", dance-pole: "\uF577", data-matrix: "\uF53B", data-matrix-edit: "\uF53C", data-matrix-minus: "\uF53D", data-matrix-plus: "\uF53E", data-matrix-remove: "\uF53F", data-matrix-scan: "\uF540", database: "\uE1BB", database-alert: "\uF639", database-alert-outline: "\uF623", database-arrow-down: "\uF63A", database-arrow-down-outline: "\uF624", database-arrow-left: "\uF63B", database-arrow-left-outline: "\uF625", database-arrow-right: "\uF63C", database-arrow-right-outline: "\uF626", database-arrow-up: "\uF63D", database-arrow-up-outline: "\uF627", database-check: "\uEAA8", database-check-outline: "\uF628", database-clock: "\uF63E", database-clock-outline: "\uF629", database-cog: "\uF64A", database-cog-outline: "\uF64B", database-edit: "\uEB85", database-edit-outline: "\uF62A", database-export: "\uE95D", database-export-outline: "\uF62B", database-eye: "\uF91E", database-eye-off: "\uF91F", database-eye-off-outline: "\uF920", database-eye-outline: "\uF921", database-import: "\uE95C", database-import-outline: "\uF62C", database-lock: "\uEAA9", database-lock-outline: "\uF62D", database-marker: "\uF2F5", database-marker-outline: "\uF62E", database-minus: "\uE1BA", database-minus-outline: "\uF62F", database-off: "\uF63F", database-off-outline: "\uF630", database-outline: "\uF631", database-plus: "\uE1B9", database-plus-outline: "\uF632", database-refresh: "\uE5C1", database-refresh-outline: "\uF633", database-remove: "\uECFF", database-remove-outline: "\uF634", database-search: "\uE865", database-search-outline: "\uF635", database-settings: "\uED00", database-settings-outline: "\uF636", database-sync: "\uECFE", database-sync-outline: "\uF637", death-star: "\uE8D7", death-star-variant: "\uE8D8", deathly-hallows: "\uEB86", debian: "\uE8D9", debug-step-into: "\uE1B8", debug-step-out: "\uE1B7", debug-step-over: "\uE1B6", decagram: "\uE76B", decagram-outline: "\uE76C", decimal: "\uF0A0", decimal-comma: "\uF0A1", decimal-comma-decrease: "\uF0A2", decimal-comma-increase: "\uF0A3", decimal-decrease: "\uE1B5", decimal-increase: "\uE1B4", delete: "\uE1B3", delete-alert: "\uF0A4", delete-alert-outline: "\uF0A5", delete-circle: "\uE682", delete-circle-outline: "\uEB87", delete-clock: "\uF555", delete-clock-outline: "\uF556", delete-empty: "\uE6CB", delete-empty-outline: "\uEE9C", delete-forever: "\uE5E7", delete-forever-outline: "\uEB88", delete-off: "\uF0A6", delete-off-outline: "\uF0A7", delete-outline: "\uE9E6", delete-restore: "\uE818", delete-sweep: "\uE5E8", delete-sweep-outline: "\uEC61", delete-variant: "\uE1B2", delta: "\uE1C1", desk: "\uF238", desk-lamp: "\uE95E", deskphone: "\uE1C2", desktop-classic: "\uE7BF", desktop-mac: "\uE1C3", desktop-mac-dashboard: "\uE9E7", desktop-tower: "\uE1C4", desktop-tower-monitor: "\uEAAA", details: "\uE1C5", dev-to: "\uED6D", developer-board: "\uE696", deviantart: "\uE1C6", devices: "\uEFAF", dharmachakra: "\uE94A", diabetes: "\uF125", dialpad: "\uE61B", diameter: "\uEC62", diameter-outline: "\uEC63", diameter-variant: "\uEC64", diamond: "\uEB89", diamond-outline: "\uEB8A", diamond-stone: "\uE1C7", dice-1: "\uE1C9", dice-1-outline: "\uF149", dice-2: "\uE1CA", dice-2-outline: "\uF14A", dice-3: "\uE1CB", dice-3-outline: "\uF14B", dice-4: "\uE1CC", dice-4-outline: "\uF14C", dice-5: "\uE1CD", dice-5-outline: "\uF14D", dice-6: "\uE1CE", dice-6-outline: "\uF14E", dice-d10: "\uF152", dice-d10-outline: "\uE76E", dice-d12: "\uF153", dice-d12-outline: "\uE866", dice-d20: "\uF154", dice-d20-outline: "\uE5E9", dice-d4: "\uF14F", dice-d4-outline: "\uE5EA", dice-d6: "\uF150", dice-d6-outline: "\uE5EC", dice-d8: "\uF151", dice-d8-outline: "\uE5EB", dice-multiple: "\uE76D", dice-multiple-outline: "\uF155", digital-ocean: "\uF236", dip-switch: "\uE7C0", directions: "\uE1CF", directions-fork: "\uE640", disc: "\uE5ED", disc-alert: "\uE1D0", disc-player: "\uE95F", discord: "\uE66E", dishwasher: "\uEAAB", dishwasher-alert: "\uF1B7", dishwasher-off: "\uF1B8", disqus: "\uE1D1", distribute-horizontal-center: "\uF1C8", distribute-horizontal-left: "\uF1C7", distribute-horizontal-right: "\uF1C9", distribute-vertical-bottom: "\uF1CA", distribute-vertical-center: "\uF1CB", distribute-vertical-top: "\uF1CC", diversify: "\uF876", diving: "\uF976", diving-flippers: "\uEDBE", diving-helmet: "\uEDBF", diving-scuba: "\uEDC0", diving-scuba-flag: "\uEDC1", diving-scuba-tank: "\uEDC2", diving-scuba-tank-multiple: "\uEDC3", diving-snorkel: "\uEDC4", division: "\uE1D3", division-box: "\uE1D4", dlna: "\uEA40", dna: "\uE683", dns: "\uE1D5", dns-outline: "\uEB8B", dock-bottom: "\uF0A8", dock-left: "\uF0A9", dock-right: "\uF0AA", dock-top: "\uF512", dock-window: "\uF0AB", docker: "\uE867", doctor: "\uEA41", dog: "\uEA42", dog-service: "\uEAAC", dog-side: "\uEA43", dog-side-off: "\uF6ED", dolby: "\uE6B2", dolly: "\uEE9D", dolphin: "\uF8B3", domain: "\uE1D6", domain-off: "\uED6E", domain-plus: "\uF0AC", domain-remove: "\uF0AD", dome-light: "\uF41D", domino-mask: "\uF022", donkey: "\uE7C1", door: "\uE819", door-closed: "\uE81A", door-closed-lock: "\uF0AE", door-open: "\uE81B", door-sliding: "\uF81D", door-sliding-lock: "\uF81E", door-sliding-open: "\uF81F", doorbell: "\uF2E5", doorbell-video: "\uE868", dot-net: "\uEAAD", dots-circle: "\uF977", dots-grid: "\uF5FB", dots-hexagon: "\uF5FE", dots-horizontal: "\uE1D7", dots-horizontal-circle: "\uE7C2", dots-horizontal-circle-outline: "\uEB8C", dots-square: "\uF5FC", dots-triangle: "\uF5FD", dots-vertical: "\uE1D8", dots-vertical-circle: "\uE7C3", dots-vertical-circle-outline: "\uEB8D", download: "\uE1D9", download-box: "\uF461", download-box-outline: "\uF462", download-circle: "\uF463", download-circle-outline: "\uF464", download-lock: "\uF31F", download-lock-outline: "\uF320", download-multiple: "\uE9E8", download-network: "\uE6F3", download-network-outline: "\uEC65", download-off: "\uF0AF", download-off-outline: "\uF0B0", download-outline: "\uEB8E", drag: "\uE1DA", drag-horizontal: "\uE1DB", drag-horizontal-variant: "\uF2EF", drag-variant: "\uEB8F", drag-vertical: "\uE1DC", drag-vertical-variant: "\uF2F0", drama-masks: "\uED01", draw: "\uEF48", draw-pen: "\uF9B8", drawing: "\uE1DD", drawing-box: "\uE1DE", dresser: "\uEF49", dresser-outline: "\uEF4A", drone: "\uE1E1", dropbox: "\uE1E2", drupal: "\uE1E3", duck: "\uE1E4", dumbbell: "\uE1E5", dump-truck: "\uEC66", ear-hearing: "\uE7C4", ear-hearing-loop: "\uFAED", ear-hearing-off: "\uEA44", earbuds: "\uF84E", earbuds-off: "\uF84F", earbuds-off-outline: "\uF850", earbuds-outline: "\uF851", earth: "\uE1E6", earth-arrow-right: "\uF310", earth-box: "\uE6CC", earth-box-minus: "\uF406", earth-box-off: "\uE6CD", earth-box-plus: "\uF405", earth-box-remove: "\uF407", earth-minus: "\uF403", earth-off: "\uE1E7", earth-plus: "\uF402", earth-remove: "\uF404", egg: "\uEAAE", egg-easter: "\uEAAF", egg-fried: "\uF849", egg-off: "\uF3EF", egg-off-outline: "\uF3F0", egg-outline: "\uF3F1", eiffel-tower: "\uF56A", eight-track: "\uE9E9", eject: "\uE1E9", eject-outline: "\uEB90", electric-switch: "\uEE9E", electric-switch-closed: "\uF0D8", electron-framework: "\uF023", elephant: "\uE7C5", elevation-decline: "\uE1EA", elevation-rise: "\uE1EB", elevator: "\uE1EC", elevator-down: "\uF2C1", elevator-passenger: "\uF380", elevator-passenger-off: "\uF978", elevator-passenger-off-outline: "\uF979", elevator-passenger-outline: "\uF97A", elevator-up: "\uF2C0", ellipse: "\uEE9F", ellipse-outline: "\uEEA0", email: "\uE1ED", email-alert: "\uE6CE", email-alert-outline: "\uED41", email-box: "\uED02", email-check: "\uEAB0", email-check-outline: "\uEAB1", email-edit: "\uEEE2", email-edit-outline: "\uEEE3", email-fast: "\uF86E", email-fast-outline: "\uF86F", email-lock: "\uE1F0", email-mark-as-unread: "\uEB91", email-minus: "\uEEE4", email-minus-outline: "\uEEE5", email-multiple: "\uEEE6", email-multiple-outline: "\uEEE7", email-newsletter: "\uEFB0", email-off: "\uF3E2", email-off-outline: "\uF3E3", email-open: "\uE1EE", email-open-multiple: "\uEEE8", email-open-multiple-outline: "\uEEE9", email-open-outline: "\uE5EE", email-outline: "\uE1EF", email-plus: "\uE9EA", email-plus-outline: "\uE9EB", email-receive: "\uF0D9", email-receive-outline: "\uF0DA", email-remove: "\uF660", email-remove-outline: "\uF661", email-seal: "\uF95A", email-seal-outline: "\uF95B", email-search: "\uE960", email-search-outline: "\uE961", email-send: "\uF0DB", email-send-outline: "\uF0DC", email-sync: "\uF2C6", email-sync-outline: "\uF2C7", email-variant: "\uE5EF", ember: "\uEB2F", emby: "\uE6B3", emoticon: "\uEC67", emoticon-angry: "\uEC68", emoticon-angry-outline: "\uEC69", emoticon-confused: "\uF0DD", emoticon-confused-outline: "\uF0DE", emoticon-cool: "\uEC6A", emoticon-cool-outline: "\uE1F2", emoticon-cry: "\uEC6B", emoticon-cry-outline: "\uEC6C", emoticon-dead: "\uEC6D", emoticon-dead-outline: "\uE69A", emoticon-devil: "\uEC6E", emoticon-devil-outline: "\uE1F3", emoticon-excited: "\uEC6F", emoticon-excited-outline: "\uE69B", emoticon-frown: "\uEF4B", emoticon-frown-outline: "\uEF4C", emoticon-happy: "\uEC70", emoticon-happy-outline: "\uE1F4", emoticon-kiss: "\uEC71", emoticon-kiss-outline: "\uEC72", emoticon-lol: "\uF213", emoticon-lol-outline: "\uF214", emoticon-neutral: "\uEC73", emoticon-neutral-outline: "\uE1F5", emoticon-outline: "\uE1F1", emoticon-poop: "\uE1F6", emoticon-poop-outline: "\uEC74", emoticon-sad: "\uEC75", emoticon-sad-outline: "\uE1F7", emoticon-sick: "\uF57B", emoticon-sick-outline: "\uF57C", emoticon-tongue: "\uE1F8", emoticon-tongue-outline: "\uEC76", emoticon-wink: "\uEC77", emoticon-wink-outline: "\uEC78", engine: "\uE1F9", engine-off: "\uEA45", engine-off-outline: "\uEA46", engine-outline: "\uE1FA", epsilon: "\uF0DF", equal: "\uE1FB", equal-box: "\uE1FC", equalizer: "\uEEA1", equalizer-outline: "\uEEA2", eraser: "\uE1FD", eraser-variant: "\uE641", escalator: "\uE1FE", escalator-box: "\uF398", escalator-down: "\uF2BF", escalator-up: "\uF2BE", eslint: "\uEC79", et: "\uEAB2", ethereum: "\uE869", ethernet: "\uE1FF", ethernet-cable: "\uE200", ethernet-cable-off: "\uE201", ev-plug-ccs1: "\uF518", ev-plug-ccs2: "\uF519", ev-plug-chademo: "\uF51A", ev-plug-tesla: "\uF51B", ev-plug-type1: "\uF51C", ev-plug-type2: "\uF51D", ev-station: "\uE5F0", evernote: "\uE203", excavator: "\uF024", exclamation: "\uE204", exclamation-thick: "\uF237", exit-run: "\uEA47", exit-to-app: "\uE205", expand-all: "\uEAB3", expand-all-outline: "\uEAB4", expansion-card: "\uE8AD", expansion-card-variant: "\uEFB1", exponent: "\uE962", exponent-box: "\uE963", export: "\uE206", export-variant: "\uEB92", eye: "\uE207", eye-arrow-left: "\uF8FC", eye-arrow-left-outline: "\uF8FD", eye-arrow-right: "\uF8FE", eye-arrow-right-outline: "\uF8FF", eye-check: "\uED03", eye-check-outline: "\uED04", eye-circle: "\uEB93", eye-circle-outline: "\uEB94", eye-minus: "\uF025", eye-minus-outline: "\uF026", eye-off: "\uE208", eye-off-outline: "\uE6D0", eye-outline: "\uE6CF", eye-plus: "\uE86A", eye-plus-outline: "\uE86B", eye-refresh: "\uF97B", eye-refresh-outline: "\uF97C", eye-remove: "\uF5E2", eye-remove-outline: "\uF5E3", eye-settings: "\uE86C", eye-settings-outline: "\uE86D", eyedropper: "\uE209", eyedropper-minus: "\uF3DC", eyedropper-off: "\uF3DE", eyedropper-plus: "\uF3DB", eyedropper-remove: "\uF3DD", eyedropper-variant: "\uE20A", face-agent: "\uED6F", face-man: "\uE642", face-man-outline: "\uEB95", face-man-profile: "\uE643", face-man-shimmer: "\uF5CB", face-man-shimmer-outline: "\uF5CC", face-mask: "\uF585", face-mask-outline: "\uF586", face-recognition: "\uEC7A", face-woman: "\uF076", face-woman-outline: "\uF077", face-woman-profile: "\uF075", face-woman-shimmer: "\uF5CD", face-woman-shimmer-outline: "\uF5CE", facebook: "\uE20B", facebook-gaming: "\uE7DC", facebook-messenger: "\uE20D", facebook-workplace: "\uEB30", factory: "\uE20E", family-tree: "\uF60D", fan: "\uE20F", fan-alert: "\uF46B", fan-auto: "\uF71C", fan-chevron-down: "\uF46C", fan-chevron-up: "\uF46D", fan-clock: "\uFA39", fan-minus: "\uF46F", fan-off: "\uE81C", fan-plus: "\uF46E", fan-remove: "\uF470", fan-speed-1: "\uF471", fan-speed-2: "\uF472", fan-speed-3: "\uF473", fast-forward: "\uE210", fast-forward-10: "\uED70", fast-forward-15: "\uF939", fast-forward-30: "\uED05", fast-forward-5: "\uF1F7", fast-forward-60: "\uF60A", fast-forward-outline: "\uE6D1", fax: "\uE211", feather: "\uE6D2", feature-search: "\uEA48", feature-search-outline: "\uEA49", fedora: "\uE8DA", fence: "\uF799", fence-electric: "\uF7F5", fencing: "\uF4C0", ferris-wheel: "\uEEA3", ferry: "\uE212", file: "\uE213", file-account: "\uE73A", file-account-outline: "\uF027", file-alert: "\uEA4A", file-alert-outline: "\uEA4B", file-arrow-left-right: "\uFA92", file-arrow-left-right-outline: "\uFA93", file-arrow-up-down: "\uFA94", file-arrow-up-down-outline: "\uFA95", file-cabinet: "\uEAB5", file-cad: "\uEEEA", file-cad-box: "\uEEEB", file-cancel: "\uEDC5", file-cancel-outline: "\uEDC6", file-certificate: "\uF185", file-certificate-outline: "\uF186", file-chart: "\uE214", file-chart-check: "\uF9C5", file-chart-check-outline: "\uF9C6", file-chart-outline: "\uF028", file-check: "\uE215", file-check-outline: "\uEE28", file-clock: "\uF2E0", file-clock-outline: "\uF2E1", file-cloud: "\uE216", file-cloud-outline: "\uF029", file-code: "\uE22D", file-code-outline: "\uF02A", file-cog: "\uF07A", file-cog-outline: "\uF07B", file-compare: "\uE8A9", file-delimited: "\uE217", file-delimited-outline: "\uEEA4", file-document: "\uE218", file-document-alert: "\uFA96", file-document-alert-outline: "\uFA97", file-document-check: "\uFA98", file-document-check-outline: "\uFA99", file-document-edit: "\uEDC7", file-document-edit-outline: "\uEDC8", file-document-minus: "\uFA9A", file-document-minus-outline: "\uFA9B", file-document-multiple: "\uF516", file-document-multiple-outline: "\uF517", file-document-outline: "\uE9ED", file-document-plus: "\uFA9C", file-document-plus-outline: "\uFA9D", file-document-remove: "\uFA9E", file-document-remove-outline: "\uFA9F", file-download: "\uE964", file-download-outline: "\uE965", file-edit: "\uF1E6", file-edit-outline: "\uF1E7", file-excel: "\uE21A", file-excel-box: "\uE21B", file-excel-box-outline: "\uF02B", file-excel-outline: "\uF02C", file-export: "\uE21C", file-export-outline: "\uF02D", file-eye: "\uEDC9", file-eye-outline: "\uEDCA", file-find: "\uE21D", file-find-outline: "\uEB96", file-gif-box: "\uED77", file-hidden: "\uE612", file-image: "\uE21E", file-image-marker: "\uF771", file-image-marker-outline: "\uF772", file-image-minus: "\uF93A", file-image-minus-outline: "\uF93B", file-image-outline: "\uEEAF", file-image-plus: "\uF93C", file-image-plus-outline: "\uF93D", file-image-remove: "\uF93E", file-image-remove-outline: "\uF93F", file-import: "\uE21F", file-import-outline: "\uF02E", file-jpg-box: "\uE224", file-key: "\uF183", file-key-outline: "\uF184", file-link: "\uF176", file-link-outline: "\uF177", file-lock: "\uE220", file-lock-open: "\uF9C7", file-lock-open-outline: "\uF9C8", file-lock-outline: "\uF02F", file-marker: "\uF773", file-marker-outline: "\uF774", file-minus: "\uFAA0", file-minus-outline: "\uFAA1", file-move: "\uEAB8", file-move-outline: "\uF030", file-multiple: "\uE221", file-multiple-outline: "\uF031", file-music: "\uE222", file-music-outline: "\uEE29", file-outline: "\uE223", file-pdf-box: "\uE225", file-percent: "\uE81D", file-percent-outline: "\uF032", file-phone: "\uF178", file-phone-outline: "\uF179", file-plus: "\uE751", file-plus-outline: "\uEEEC", file-png-box: "\uEE2C", file-powerpoint: "\uE226", file-powerpoint-box: "\uE227", file-powerpoint-box-outline: "\uF033", file-powerpoint-outline: "\uF034", file-presentation-box: "\uE228", file-question: "\uE86E", file-question-outline: "\uF035", file-refresh: "\uE917", file-refresh-outline: "\uE540", file-remove: "\uEB97", file-remove-outline: "\uF036", file-replace: "\uEB31", file-replace-outline: "\uEB32", file-restore: "\uE66F", file-restore-outline: "\uF037", file-rotate-left: "\uFA3A", file-rotate-left-outline: "\uFA3B", file-rotate-right: "\uFA3C", file-rotate-right-outline: "\uFA3D", file-search: "\uEC7B", file-search-outline: "\uEC7C", file-send: "\uE229", file-send-outline: "\uF038", file-settings: "\uF078", file-settings-outline: "\uF079", file-sign: "\uF9C2", file-star: "\uF039", file-star-outline: "\uF03A", file-swap: "\uEFB3", file-swap-outline: "\uEFB4", file-sync: "\uF215", file-sync-outline: "\uF216", file-table: "\uEC7D", file-table-box: "\uF0E0", file-table-box-multiple: "\uF0E1", file-table-box-multiple-outline: "\uF0E2", file-table-box-outline: "\uF0E3", file-table-outline: "\uEC7E", file-tree: "\uE644", file-tree-outline: "\uF3D1", file-undo: "\uE8DB", file-undo-outline: "\uF03B", file-upload: "\uEA4C", file-upload-outline: "\uEA4D", file-video: "\uE22A", file-video-outline: "\uEE2B", file-word: "\uE22B", file-word-box: "\uE22C", file-word-box-outline: "\uF03C", file-word-outline: "\uF03D", film: "\uE22E", filmstrip: "\uE22F", filmstrip-box: "\uE331", filmstrip-box-multiple: "\uED17", filmstrip-off: "\uE230", filter: "\uE231", filter-check: "\uF8EB", filter-check-outline: "\uF8EC", filter-cog: "\uFAA2", filter-cog-outline: "\uFAA3", filter-menu: "\uF0E4", filter-menu-outline: "\uF0E5", filter-minus: "\uEEED", filter-minus-outline: "\uEEEE", filter-multiple: "\uFA3E", filter-multiple-outline: "\uFA3F", filter-off: "\uF4EE", filter-off-outline: "\uF4EF", filter-outline: "\uE232", filter-plus: "\uEEEF", filter-plus-outline: "\uEEF0", filter-remove: "\uE233", filter-remove-outline: "\uE234", filter-settings: "\uFAA4", filter-settings-outline: "\uFAA5", filter-variant: "\uE235", filter-variant-minus: "\uF111", filter-variant-plus: "\uF112", filter-variant-remove: "\uF03E", finance: "\uE81E", find-replace: "\uE6D3", fingerprint: "\uE236", fingerprint-off: "\uEEB0", fire: "\uE237", fire-alert: "\uF5D6", fire-circle: "\uF806", fire-extinguisher: "\uEEF1", fire-hydrant: "\uF136", fire-hydrant-alert: "\uF137", fire-hydrant-off: "\uF138", fire-off: "\uF721", fire-truck: "\uE8AA", firebase: "\uE966", firefox: "\uE238", fireplace: "\uEE2D", fireplace-off: "\uEE2E", firewire: "\uE5BD", firework: "\uEE2F", firework-off: "\uF722", fish: "\uE239", fish-off: "\uF3F2", fishbowl: "\uEEF2", fishbowl-outline: "\uEEF3", fit-to-page: "\uEEF4", fit-to-page-outline: "\uEEF5", fit-to-screen: "\uF8F3", fit-to-screen-outline: "\uF8F4", flag: "\uE23A", flag-checkered: "\uE23B", flag-minus: "\uEB98", flag-minus-outline: "\uF0B1", flag-off: "\uF8ED", flag-off-outline: "\uF8EE", flag-outline: "\uE23C", flag-plus: "\uEB99", flag-plus-outline: "\uF0B2", flag-remove: "\uEB9A", flag-remove-outline: "\uF0B3", flag-triangle: "\uE23E", flag-variant: "\uE23F", flag-variant-outline: "\uE23D", flare: "\uED71", flash: "\uE240", flash-alert: "\uEEF6", flash-alert-outline: "\uEEF7", flash-auto: "\uE241", flash-off: "\uE242", flash-outline: "\uE6D4", flash-red-eye: "\uE67A", flashlight: "\uE243", flashlight-off: "\uE244", flask: "\uE092", flask-empty: "\uE093", flask-empty-minus: "\uF239", flask-empty-minus-outline: "\uF23A", flask-empty-off: "\uF3F3", flask-empty-off-outline: "\uF3F4", flask-empty-outline: "\uE094", flask-empty-plus: "\uF23B", flask-empty-plus-outline: "\uF23C", flask-empty-remove: "\uF23D", flask-empty-remove-outline: "\uF23E", flask-minus: "\uF23F", flask-minus-outline: "\uF240", flask-off: "\uF3F5", flask-off-outline: "\uF3F6", flask-outline: "\uE095", flask-plus: "\uF241", flask-plus-outline: "\uF242", flask-remove: "\uF243", flask-remove-outline: "\uF244", flask-round-bottom: "\uF24A", flask-round-bottom-empty: "\uF24B", flask-round-bottom-empty-outline: "\uF24C", flask-round-bottom-outline: "\uF24D", fleur-de-lis: "\uF302", flip-horizontal: "\uF0E6", flip-to-back: "\uE246", flip-to-front: "\uE247", flip-vertical: "\uF0E7", floor-lamp: "\uE8DC", floor-lamp-dual: "\uF03F", floor-lamp-dual-outline: "\uF7CD", floor-lamp-outline: "\uF7C7", floor-lamp-torchiere: "\uF746", floor-lamp-torchiere-outline: "\uF7D5", floor-lamp-torchiere-variant: "\uF040", floor-lamp-torchiere-variant-outline: "\uF7CE", floor-plan: "\uE820", floppy: "\uE248", floppy-variant: "\uE9EE", flower: "\uE249", flower-outline: "\uE9EF", flower-pollen: "\uF884", flower-pollen-outline: "\uF885", flower-poppy: "\uED07", flower-tulip: "\uE9F0", flower-tulip-outline: "\uE9F1", focus-auto: "\uEF4D", focus-field: "\uEF4E", focus-field-horizontal: "\uEF4F", focus-field-vertical: "\uEF50", folder: "\uE24A", folder-account: "\uE24B", folder-account-outline: "\uEB9B", folder-alert: "\uEDCB", folder-alert-outline: "\uEDCC", folder-arrow-down: "\uF9E7", folder-arrow-down-outline: "\uF9E8", folder-arrow-left: "\uF9E9", folder-arrow-left-outline: "\uF9EA", folder-arrow-left-right: "\uF9EB", folder-arrow-left-right-outline: "\uF9EC", folder-arrow-right: "\uF9ED", folder-arrow-right-outline: "\uF9EE", folder-arrow-up: "\uF9EF", folder-arrow-up-down: "\uF9F0", folder-arrow-up-down-outline: "\uF9F1", folder-arrow-up-outline: "\uF9F2", folder-cancel: "\uF9F3", folder-cancel-outline: "\uF9F4", folder-check: "\uF97D", folder-check-outline: "\uF97E", folder-clock: "\uEAB9", folder-clock-outline: "\uEABA", folder-cog: "\uF07E", folder-cog-outline: "\uF07F", folder-download: "\uE24C", folder-download-outline: "\uF0E8", folder-edit: "\uE8DD", folder-edit-outline: "\uEDCD", folder-eye: "\uF789", folder-eye-outline: "\uF78A", folder-file: "\uF9F5", folder-file-outline: "\uF9F6", folder-google-drive: "\uE24D", folder-heart: "\uF0E9", folder-heart-outline: "\uF0EA", folder-hidden: "\uF79D", folder-home: "\uF0B4", folder-home-outline: "\uF0B5", folder-image: "\uE24E", folder-information: "\uF0B6", folder-information-outline: "\uF0B7", folder-key: "\uE8AB", folder-key-network: "\uE8AC", folder-key-network-outline: "\uEC7F", folder-key-outline: "\uF0EB", folder-lock: "\uE24F", folder-lock-open: "\uE250", folder-lock-open-outline: "\uFAA6", folder-lock-outline: "\uFAA7", folder-marker: "\uF26C", folder-marker-outline: "\uF26D", folder-move: "\uE251", folder-move-outline: "\uF245", folder-multiple: "\uE252", folder-multiple-image: "\uE253", folder-multiple-outline: "\uE254", folder-multiple-plus: "\uF47D", folder-multiple-plus-outline: "\uF47E", folder-music: "\uF358", folder-music-outline: "\uF359", folder-network: "\uE86F", folder-network-outline: "\uEC80", folder-off: "\uF9F7", folder-off-outline: "\uF9F8", folder-open: "\uE76F", folder-open-outline: "\uEDCE", folder-outline: "\uE255", folder-play: "\uF9F9", folder-play-outline: "\uF9FA", folder-plus: "\uE256", folder-plus-outline: "\uEB9C", folder-pound: "\uED08", folder-pound-outline: "\uED09", folder-question: "\uF9C9", folder-question-outline: "\uF9CA", folder-refresh: "\uE748", folder-refresh-outline: "\uE541", folder-remove: "\uE257", folder-remove-outline: "\uEB9D", folder-search: "\uE967", folder-search-outline: "\uE968", folder-settings: "\uF07C", folder-settings-outline: "\uF07D", folder-star: "\uE69C", folder-star-multiple: "\uF3D2", folder-star-multiple-outline: "\uF3D3", folder-star-outline: "\uEB9E", folder-swap: "\uEFB5", folder-swap-outline: "\uEFB6", folder-sync: "\uED0A", folder-sync-outline: "\uED0B", folder-table: "\uF2E2", folder-table-outline: "\uF2E3", folder-text: "\uEC81", folder-text-outline: "\uEC82", folder-upload: "\uE258", folder-upload-outline: "\uF0EC", folder-wrench: "\uF9FB", folder-wrench-outline: "\uF9FC", folder-zip: "\uE6EA", folder-zip-outline: "\uE7B8", font-awesome: "\uE039", food: "\uE259", food-apple: "\uE25A", food-apple-outline: "\uEC83", food-croissant: "\uE7C7", food-drumstick: "\uF41E", food-drumstick-off: "\uF467", food-drumstick-off-outline: "\uF468", food-drumstick-outline: "\uF41F", food-fork-drink: "\uE5F1", food-halal: "\uF571", food-hot-dog: "\uF84A", food-kosher: "\uF572", food-off: "\uE5F2", food-off-outline: "\uF914", food-outline: "\uF915", food-steak: "\uF469", food-steak-off: "\uF46A", food-takeout-box: "\uF835", food-takeout-box-outline: "\uF836", food-turkey: "\uF71B", food-variant: "\uE25B", food-variant-off: "\uF3E4", foot-print: "\uEF51", football: "\uE25C", football-australian: "\uE25D", football-helmet: "\uE25E", forest: "\uF896", forklift: "\uE7C8", form-dropdown: "\uF3FF", form-select: "\uF400", form-textarea: "\uF094", form-textbox: "\uE60D", form-textbox-lock: "\uF35C", form-textbox-password: "\uE7F4", format-align-bottom: "\uE752", format-align-center: "\uE25F", format-align-justify: "\uE260", format-align-left: "\uE261", format-align-middle: "\uE753", format-align-right: "\uE262", format-align-top: "\uE754", format-annotation-minus: "\uEABB", format-annotation-plus: "\uE645", format-bold: "\uE263", format-clear: "\uE264", format-color-fill: "\uE265", format-color-highlight: "\uEE30", format-color-marker-cancel: "\uF312", format-color-text: "\uE69D", format-columns: "\uE8DE", format-float-center: "\uE266", format-float-left: "\uE267", format-float-none: "\uE268", format-float-right: "\uE269", format-font: "\uE6D5", format-font-size-decrease: "\uE9F2", format-font-size-increase: "\uE9F3", format-header-1: "\uE26A", format-header-2: "\uE26B", format-header-3: "\uE26C", format-header-4: "\uE26D", format-header-5: "\uE26E", format-header-6: "\uE26F", format-header-decrease: "\uE270", format-header-equal: "\uE271", format-header-increase: "\uE272", format-header-pound: "\uE273", format-horizontal-align-center: "\uE61D", format-horizontal-align-left: "\uE61E", format-horizontal-align-right: "\uE61F", format-indent-decrease: "\uE274", format-indent-increase: "\uE275", format-italic: "\uE276", format-letter-case: "\uEB33", format-letter-case-lower: "\uEB34", format-letter-case-upper: "\uEB35", format-letter-ends-with: "\uEFB7", format-letter-matches: "\uEFB8", format-letter-spacing: "\uF955", format-letter-starts-with: "\uEFB9", format-line-spacing: "\uE277", format-line-style: "\uE5C7", format-line-weight: "\uE5C8", format-list-bulleted: "\uE278", format-list-bulleted-square: "\uEDCF", format-list-bulleted-triangle: "\uEEB1", format-list-bulleted-type: "\uE279", format-list-checkbox: "\uE969", format-list-checks: "\uE755", format-list-group: "\uF85F", format-list-numbered: "\uE27A", format-list-numbered-rtl: "\uED0C", format-list-text: "\uF26E", format-overline: "\uEEB2", format-page-break: "\uE6D6", format-page-split: "\uF916", format-paint: "\uE27B", format-paragraph: "\uE27C", format-pilcrow: "\uE6D7", format-quote-close: "\uE27D", format-quote-close-outline: "\uF1A7", format-quote-open: "\uE756", format-quote-open-outline: "\uF1A6", format-rotate-90: "\uE6A9", format-section: "\uE69E", format-size: "\uE27E", format-strikethrough: "\uE27F", format-strikethrough-variant: "\uE280", format-subscript: "\uE281", format-superscript: "\uE282", format-text: "\uE283", format-text-rotation-angle-down: "\uEFBA", format-text-rotation-angle-up: "\uEFBB", format-text-rotation-down: "\uED72", format-text-rotation-down-vertical: "\uEFBC", format-text-rotation-none: "\uED73", format-text-rotation-up: "\uEFBD", format-text-rotation-vertical: "\uEFBE", format-text-variant: "\uEE31", format-text-variant-outline: "\uF50E", format-text-wrapping-clip: "\uED0D", format-text-wrapping-overflow: "\uED0E", format-text-wrapping-wrap: "\uED0F", format-textbox: "\uED10", format-textdirection-l-to-r: "\uE284", format-textdirection-r-to-l: "\uE285", format-title: "\uE5F3", format-underline: "\uE286", format-underline-wavy: "\uF8E8", format-vertical-align-bottom: "\uE620", format-vertical-align-center: "\uE621", format-vertical-align-top: "\uE622", format-wrap-inline: "\uE287", format-wrap-square: "\uE288", format-wrap-tight: "\uE289", format-wrap-top-bottom: "\uE28A", forum: "\uE28B", forum-minus: "\uFAA8", forum-minus-outline: "\uFAA9", forum-outline: "\uE821", forum-plus: "\uFAAA", forum-plus-outline: "\uFAAB", forum-remove: "\uFAAC", forum-remove-outline: "\uFAAD", forward: "\uE28C", forwardburger: "\uED74", fountain: "\uE96A", fountain-pen: "\uED11", fountain-pen-tip: "\uED12", fraction-one-half: "\uF991", freebsd: "\uE8DF", french-fries: "\uF956", frequently-asked-questions: "\uEEB3", fridge: "\uE28F", fridge-alert: "\uF1B0", fridge-alert-outline: "\uF1B1", fridge-bottom: "\uE291", fridge-industrial: "\uF5ED", fridge-industrial-alert: "\uF5EE", fridge-industrial-alert-outline: "\uF5EF", fridge-industrial-off: "\uF5F0", fridge-industrial-off-outline: "\uF5F1", fridge-industrial-outline: "\uF5F2", fridge-off: "\uF1AE", fridge-off-outline: "\uF1AF", fridge-outline: "\uE28E", fridge-top: "\uE290", fridge-variant: "\uF5F3", fridge-variant-alert: "\uF5F4", fridge-variant-alert-outline: "\uF5F5", fridge-variant-off: "\uF5F6", fridge-variant-off-outline: "\uF5F7", fridge-variant-outline: "\uF5F8", fruit-cherries: "\uF041", fruit-cherries-off: "\uF3F7", fruit-citrus: "\uF042", fruit-citrus-off: "\uF3F8", fruit-grapes: "\uF043", fruit-grapes-outline: "\uF044", fruit-pear: "\uFA0D", fruit-pineapple: "\uF045", fruit-watermelon: "\uF046", fuel: "\uE7C9", fuel-cell: "\uF8B4", fullscreen: "\uE292", fullscreen-exit: "\uE293", function: "\uE294", function-variant: "\uE870", furigana-horizontal: "\uF080", furigana-vertical: "\uF081", fuse: "\uEC84", fuse-alert: "\uF42C", fuse-blade: "\uEC85", fuse-off: "\uF42B", gamepad: "\uE295", gamepad-circle: "\uEE32", gamepad-circle-down: "\uEE33", gamepad-circle-left: "\uEE34", gamepad-circle-outline: "\uEE35", gamepad-circle-right: "\uEE36", gamepad-circle-up: "\uEE37", gamepad-down: "\uEE38", gamepad-left: "\uEE39", gamepad-outline: "\uF918", gamepad-right: "\uEE3A", gamepad-round: "\uEE3B", gamepad-round-down: "\uEE3C", gamepad-round-left: "\uEE3D", gamepad-round-outline: "\uEE3E", gamepad-round-right: "\uEE3F", gamepad-round-up: "\uEE40", gamepad-square: "\uEEB4", gamepad-square-outline: "\uEEB5", gamepad-up: "\uEE41", gamepad-variant: "\uE296", gamepad-variant-outline: "\uEEB6", gamma: "\uF0ED", gantry-crane: "\uEDD0", garage: "\uE6D8", garage-alert: "\uE871", garage-alert-variant: "\uF2D4", garage-lock: "\uF7FA", garage-open: "\uE6D9", garage-open-variant: "\uF2D3", garage-variant: "\uF2D2", garage-variant-lock: "\uF7FB", gas-burner: "\uFA1A", gas-cylinder: "\uE646", gas-station: "\uE297", gas-station-off: "\uF408", gas-station-off-outline: "\uF409", gas-station-outline: "\uEEB7", gate: "\uE298", gate-alert: "\uF7F7", gate-and: "\uE8E0", gate-arrow-left: "\uF7F6", gate-arrow-right: "\uF168", gate-nand: "\uE8E1", gate-nor: "\uE8E2", gate-not: "\uE8E3", gate-open: "\uF169", gate-or: "\uE8E4", gate-xnor: "\uE8E5", gate-xor: "\uE8E6", gatsby: "\uEE42", gauge: "\uE299", gauge-empty: "\uE872", gauge-full: "\uE873", gauge-low: "\uE874", gavel: "\uE29A", gender-female: "\uE29B", gender-male: "\uE29C", gender-male-female: "\uE29D", gender-male-female-variant: "\uF13E", gender-non-binary: "\uF13F", gender-transgender: "\uE29E", gentoo: "\uE8E7", gesture: "\uE7CA", gesture-double-tap: "\uE73B", gesture-pinch: "\uEABC", gesture-spread: "\uEABD", gesture-swipe: "\uED75", gesture-swipe-down: "\uE73C", gesture-swipe-horizontal: "\uEABE", gesture-swipe-left: "\uE73D", gesture-swipe-right: "\uE73E", gesture-swipe-up: "\uE73F", gesture-swipe-vertical: "\uEABF", gesture-tap: "\uE740", gesture-tap-box: "\uF2A8", gesture-tap-button: "\uF2A7", gesture-tap-hold: "\uED76", gesture-two-double-tap: "\uE741", gesture-two-tap: "\uE742", ghost: "\uE29F", ghost-off: "\uE9F4", ghost-off-outline: "\uF65B", ghost-outline: "\uF65C", gift: "\uEE43", gift-off: "\uF6EE", gift-off-outline: "\uF6EF", gift-open: "\uF6F0", gift-open-outline: "\uF6F1", gift-outline: "\uE2A0", git: "\uE2A1", github: "\uE2A3", gitlab: "\uEB9F", glass-cocktail: "\uE355", glass-cocktail-off: "\uF5E5", glass-flute: "\uE2A4", glass-fragile: "\uF872", glass-mug: "\uE2A5", glass-mug-off: "\uF5E6", glass-mug-variant: "\uF115", glass-mug-variant-off: "\uF5E7", glass-pint-outline: "\uF30C", glass-stange: "\uE2A6", glass-tulip: "\uE2A7", glass-wine: "\uE875", glasses: "\uE2A9", globe-light: "\uF2D6", globe-model: "\uE8E8", gmail: "\uE2AA", gnome: "\uE2AB", go-kart: "\uED78", go-kart-track: "\uED79", gog: "\uEBA0", gold: "\uF24E", golf: "\uE822", golf-cart: "\uF1A3", golf-tee: "\uF082", gondola: "\uE685", goodreads: "\uED7A", google: "\uE2AC", google-ads: "\uEC86", google-analytics: "\uE7CB", google-assistant: "\uE7CC", google-cardboard: "\uE2AD", google-chrome: "\uE2AE", google-circles: "\uE2AF", google-circles-communities: "\uE2B0", google-circles-extended: "\uE2B1", google-circles-group: "\uE2B2", google-classroom: "\uE2BF", google-cloud: "\uF1F5", google-controller: "\uE2B3", google-controller-off: "\uE2B4", google-downasaur: "\uF361", google-drive: "\uE2B5", google-earth: "\uE2B6", google-fit: "\uE96B", google-glass: "\uE2B7", google-hangouts: "\uE2C8", google-home: "\uE823", google-keep: "\uE6DB", google-lens: "\uE9F5", google-maps: "\uE5F4", google-my-business: "\uF047", google-nearby: "\uE2B8", google-play: "\uE2BB", google-plus: "\uE2BC", google-podcast: "\uEEB8", google-spreadsheet: "\uE9F6", google-street-view: "\uEC87", google-translate: "\uE2BE", gradient-horizontal: "\uF749", gradient-vertical: "\uE69F", grain: "\uED7B", graph: "\uF048", graph-outline: "\uF049", graphql: "\uE876", grass: "\uF50F", grave-stone: "\uEBA1", grease-pencil: "\uE647", greater-than: "\uE96C", greater-than-or-equal: "\uE96D", greenhouse: "\uE02C", grid: "\uE2C0", grid-large: "\uE757", grid-off: "\uE2C1", grill: "\uEE44", grill-outline: "\uF189", group: "\uE2C2", guitar-acoustic: "\uE770", guitar-electric: "\uE2C3", guitar-pick: "\uE2C4", guitar-pick-outline: "\uE2C5", guy-fawkes-mask: "\uE824", gymnastics: "\uFA40", hail: "\uEAC0", hair-dryer: "\uF0EE", hair-dryer-outline: "\uF0EF", halloween: "\uEBA2", hamburger: "\uE684", hamburger-check: "\uF775", hamburger-minus: "\uF776", hamburger-off: "\uF777", hamburger-plus: "\uF778", hamburger-remove: "\uF779", hammer: "\uE8E9", hammer-screwdriver: "\uF321", hammer-sickle: "\uF886", hammer-wrench: "\uF322", hand-back-left: "\uEE45", hand-back-left-off: "\uF82F", hand-back-left-off-outline: "\uF831", hand-back-left-outline: "\uF82B", hand-back-right: "\uEE46", hand-back-right-off: "\uF830", hand-back-right-off-outline: "\uF832", hand-back-right-outline: "\uF82C", hand-clap: "\uF94A", hand-clap-off: "\uFA41", hand-coin: "\uF88E", hand-coin-outline: "\uF88F", hand-extended: "\uF8B5", hand-extended-outline: "\uF8B6", hand-front-left: "\uF82A", hand-front-left-outline: "\uF82D", hand-front-right: "\uEA4E", hand-front-right-outline: "\uF82E", hand-heart: "\uF0F0", hand-heart-outline: "\uF57D", hand-okay: "\uEA4F", hand-peace: "\uEA50", hand-peace-variant: "\uEA51", hand-pointing-down: "\uEA52", hand-pointing-left: "\uEA53", hand-pointing-right: "\uE2C6", hand-pointing-up: "\uEA54", hand-saw: "\uEE47", hand-wash: "\uF57E", hand-wash-outline: "\uF57F", hand-water: "\uF39E", hand-wave: "\uF820", hand-wave-outline: "\uF821", handball: "\uEF52", handcuffs: "\uF13D", hands-pray: "\uE578", handshake: "\uF217", handshake-outline: "\uF5A0", hanger: "\uE2C7", hard-hat: "\uE96E", harddisk: "\uE2C9", harddisk-plus: "\uF04A", harddisk-remove: "\uF04B", hat-fedora: "\uEBA3", hazard-lights: "\uEC88", hdr: "\uED7C", hdr-off: "\uED7D", head: "\uF35D", head-alert: "\uF337", head-alert-outline: "\uF338", head-check: "\uF339", head-check-outline: "\uF33A", head-cog: "\uF33B", head-cog-outline: "\uF33C", head-dots-horizontal: "\uF33D", head-dots-horizontal-outline: "\uF33E", head-flash: "\uF33F", head-flash-outline: "\uF340", head-heart: "\uF341", head-heart-outline: "\uF342", head-lightbulb: "\uF343", head-lightbulb-outline: "\uF344", head-minus: "\uF345", head-minus-outline: "\uF346", head-outline: "\uF35E", head-plus: "\uF347", head-plus-outline: "\uF348", head-question: "\uF349", head-question-outline: "\uF34A", head-remove: "\uF34B", head-remove-outline: "\uF34C", head-snowflake: "\uF34D", head-snowflake-outline: "\uF34E", head-sync: "\uF34F", head-sync-outline: "\uF350", headphones: "\uE2CA", headphones-bluetooth: "\uE96F", headphones-box: "\uE2CB", headphones-off: "\uE7CD", headphones-settings: "\uE2CC", headset: "\uE2CD", headset-dock: "\uE2CE", headset-off: "\uE2CF", heart: "\uE2D0", heart-box: "\uE2D1", heart-box-outline: "\uE2D2", heart-broken: "\uE2D3", heart-broken-outline: "\uED13", heart-circle: "\uE970", heart-circle-outline: "\uE971", heart-cog: "\uF662", heart-cog-outline: "\uF663", heart-flash: "\uEEF8", heart-half: "\uE6DE", heart-half-full: "\uE6DD", heart-half-outline: "\uE6DF", heart-minus: "\uF42E", heart-minus-outline: "\uF431", heart-multiple: "\uEA55", heart-multiple-outline: "\uEA56", heart-off: "\uE758", heart-off-outline: "\uF433", heart-outline: "\uE2D4", heart-plus: "\uF42D", heart-plus-outline: "\uF430", heart-pulse: "\uE5F5", heart-remove: "\uF42F", heart-remove-outline: "\uF432", heart-settings: "\uF664", heart-settings-outline: "\uF665", heat-pump: "\uFA42", heat-pump-outline: "\uFA43", heat-wave: "\uFA44", heating-coil: "\uFAAE", helicopter: "\uEAC1", help: "\uE2D5", help-box: "\uE78A", help-circle: "\uE2D6", help-circle-outline: "\uE624", help-network: "\uE6F4", help-network-outline: "\uEC89", help-rhombus: "\uEBA4", help-rhombus-outline: "\uEBA5", hexadecimal: "\uF2A6", hexagon: "\uE2D7", hexagon-multiple: "\uE6E0", hexagon-multiple-outline: "\uF0F1", hexagon-outline: "\uE2D8", hexagon-slice-1: "\uEAC2", hexagon-slice-2: "\uEAC3", hexagon-slice-3: "\uEAC4", hexagon-slice-4: "\uEAC5", hexagon-slice-5: "\uEAC6", hexagon-slice-6: "\uEAC7", hexagram: "\uEAC8", hexagram-outline: "\uEAC9", high-definition: "\uE7CE", high-definition-box: "\uE877", highway: "\uE5F6", hiking: "\uED7E", history: "\uE2D9", hockey-puck: "\uE878", hockey-sticks: "\uE879", hololens: "\uE2DA", home: "\uE2DB", home-account: "\uE825", home-alert: "\uE87A", home-alert-outline: "\uF5CF", home-analytics: "\uEEB9", home-assistant: "\uE7CF", home-automation: "\uE7D0", home-battery: "\uF900", home-battery-outline: "\uF901", home-circle: "\uE7D1", home-circle-outline: "\uF04C", home-city: "\uED14", home-city-outline: "\uED15", home-clock: "\uFA11", home-clock-outline: "\uFA12", home-edit: "\uF158", home-edit-outline: "\uF159", home-export-outline: "\uEF9A", home-flood: "\uEEF9", home-floor-0: "\uEDD1", home-floor-1: "\uED7F", home-floor-2: "\uED80", home-floor-3: "\uED81", home-floor-a: "\uED82", home-floor-b: "\uED83", home-floor-g: "\uED84", home-floor-l: "\uED85", home-floor-negative-1: "\uEDD2", home-group: "\uEDD3", home-group-minus: "\uF9C0", home-group-plus: "\uF9BF", home-group-remove: "\uF9C1", home-heart: "\uE826", home-import-outline: "\uEF9B", home-lightbulb: "\uF250", home-lightbulb-outline: "\uF251", home-lightning-bolt: "\uF902", home-lightning-bolt-outline: "\uF903", home-lock: "\uE8EA", home-lock-open: "\uE8EB", home-map-marker: "\uE5F7", home-minus: "\uE973", home-minus-outline: "\uF3D4", home-modern: "\uE2DC", home-off: "\uFA45", home-off-outline: "\uFA46", home-outline: "\uE6A0", home-plus: "\uE974", home-plus-outline: "\uF3D5", home-remove: "\uF246", home-remove-outline: "\uF3D6", home-roof: "\uF12A", home-search: "\uF3AF", home-search-outline: "\uF3B0", home-switch: "\uF793", home-switch-outline: "\uF794", home-thermometer: "\uEF53", home-thermometer-outline: "\uEF54", home-variant: "\uE2DD", home-variant-outline: "\uEBA6", hook: "\uE6E1", hook-off: "\uE6E2", hoop-house: "\uEE55", hops: "\uE2DE", horizontal-rotate-clockwise: "\uF0F2", horizontal-rotate-counterclockwise: "\uF0F3", horse: "\uF5BE", horse-human: "\uF5BF", horse-variant: "\uF5C0", horse-variant-fast: "\uF86D", horseshoe: "\uEA57", hospital: "\uEFF5", hospital-box: "\uE2DF", hospital-box-outline: "\uEFF6", hospital-building: "\uE2E0", hospital-marker: "\uE2E1", hot-tub: "\uE827", hours-24: "\uF477", hubspot: "\uED16", hulu: "\uE828", human: "\uE2E5", human-baby-changing-table: "\uF38A", human-cane: "\uF580", human-capacity-decrease: "\uF59A", human-capacity-increase: "\uF59B", human-child: "\uE2E6", human-dolly: "\uF97F", human-edit: "\uF4E7", human-female: "\uE648", human-female-boy: "\uEA58", human-female-dance: "\uF5C8", human-female-female: "\uEA59", human-female-girl: "\uEA5A", human-greeting: "\uF7C3", human-greeting-proximity: "\uF59C", human-greeting-variant: "\uE649", human-handsdown: "\uE64A", human-handsup: "\uE64B", human-male: "\uE64C", human-male-board: "\uE88F", human-male-board-poll: "\uE845", human-male-boy: "\uEA5B", human-male-child: "\uF38B", human-male-female: "\uE2E7", human-male-female-child: "\uF822", human-male-girl: "\uEA5C", human-male-height: "\uEEFA", human-male-height-variant: "\uEEFB", human-male-male: "\uEA5D", human-non-binary: "\uF847", human-pregnant: "\uE5CE", human-queue: "\uF570", human-scooter: "\uF1E8", human-wheelchair: "\uF38C", human-white-cane: "\uF980", humble-bundle: "\uE743", hvac: "\uF351", hvac-off: "\uF59D", hydraulic-oil-level: "\uF323", hydraulic-oil-temperature: "\uF324", hydro-power: "\uF2E4", hydrogen-station: "\uF893", ice-cream: "\uE829", ice-cream-off: "\uEE51", ice-pop: "\uEEFC", id-card: "\uEFBF", identifier: "\uEEFD", ideogram-cjk: "\uF330", ideogram-cjk-variant: "\uF331", image: "\uE2E8", image-album: "\uE2E9", image-area: "\uE2EA", image-area-close: "\uE2EB", image-auto-adjust: "\uEFC0", image-broken: "\uE2EC", image-broken-variant: "\uE2ED", image-edit: "\uF1E2", image-edit-outline: "\uF1E3", image-filter-black-white: "\uE2EF", image-filter-center-focus: "\uE2F0", image-filter-center-focus-strong: "\uEEFE", image-filter-center-focus-strong-outline: "\uEEFF", image-filter-center-focus-weak: "\uE2F1", image-filter-drama: "\uE2F2", image-filter-frames: "\uE2F3", image-filter-hdr: "\uE2F4", image-filter-none: "\uE2F5", image-filter-tilt-shift: "\uE2F6", image-filter-vintage: "\uE2F7", image-frame: "\uEE48", image-lock: "\uFAAF", image-lock-outline: "\uFAB0", image-marker: "\uF77A", image-marker-outline: "\uF77B", image-minus: "\uF418", image-move: "\uE9F7", image-multiple: "\uE2F8", image-multiple-outline: "\uE2EE", image-off: "\uE82A", image-off-outline: "\uF1D0", image-outline: "\uE975", image-plus: "\uE87B", image-refresh: "\uF9FD", image-refresh-outline: "\uF9FE", image-remove: "\uF417", image-search: "\uE976", image-search-outline: "\uE977", image-size-select-actual: "\uEC8C", image-size-select-large: "\uEC8D", image-size-select-small: "\uEC8E", image-sync: "\uF9FF", image-sync-outline: "\uFA00", image-text: "\uF60C", import: "\uE2F9", inbox: "\uE686", inbox-arrow-down: "\uE2FA", inbox-arrow-down-outline: "\uF26F", inbox-arrow-up: "\uE3D0", inbox-arrow-up-outline: "\uF270", inbox-full: "\uF271", inbox-full-outline: "\uF272", inbox-multiple: "\uE8AF", inbox-multiple-outline: "\uEBA7", inbox-outline: "\uF273", inbox-remove: "\uF59E", inbox-remove-outline: "\uF59F", incognito: "\uE5F8", incognito-circle: "\uF420", incognito-circle-off: "\uF421", incognito-off: "\uE074", induction: "\uF84B", infinity: "\uE6E3", information: "\uE2FB", information-off: "\uF78B", information-off-outline: "\uF78C", information-outline: "\uE2FC", information-variant: "\uE64D", instagram: "\uE2FD", instrument-triangle: "\uF04D", integrated-circuit-chip: "\uF912", invert-colors: "\uE300", invert-colors-off: "\uEE49", iobroker: "\uF2E7", ip: "\uEA5E", ip-network: "\uEA5F", ip-network-outline: "\uEC8F", ip-outline: "\uF981", ipod: "\uEC90", iron: "\uF823", iron-board: "\uF837", iron-outline: "\uF824", island: "\uF04E", iv-bag: "\uF0B8", jabber: "\uEDD4", jeepney: "\uE301", jellyfish: "\uEF00", jellyfish-outline: "\uEF01", jira: "\uE302", jquery: "\uE87C", jsfiddle: "\uE303", jump-rope: "\uF2FE", kabaddi: "\uED86", kangaroo: "\uF557", karate: "\uE82B", kayaking: "\uE8AE", keg: "\uE304", kettle: "\uE5F9", kettle-alert: "\uF316", kettle-alert-outline: "\uF317", kettle-off: "\uF31A", kettle-off-outline: "\uF31B", kettle-outline: "\uEF55", kettle-pour-over: "\uF73B", kettle-steam: "\uF318", kettle-steam-outline: "\uF319", kettlebell: "\uF2FF", key: "\uE305", key-alert: "\uF982", key-alert-outline: "\uF983", key-arrow-right: "\uF311", key-chain: "\uF573", key-chain-variant: "\uF574", key-change: "\uE306", key-link: "\uF19E", key-minus: "\uE307", key-outline: "\uEDD5", key-plus: "\uE308", key-remove: "\uE309", key-star: "\uF19D", key-variant: "\uE30A", key-wireless: "\uEFC1", keyboard: "\uE30B", keyboard-backspace: "\uE30C", keyboard-caps: "\uE30D", keyboard-close: "\uE30E", keyboard-esc: "\uF2B6", keyboard-f1: "\uF2AA", keyboard-f10: "\uF2B3", keyboard-f11: "\uF2B4", keyboard-f12: "\uF2B5", keyboard-f2: "\uF2AB", keyboard-f3: "\uF2AC", keyboard-f4: "\uF2AD", keyboard-f5: "\uF2AE", keyboard-f6: "\uF2AF", keyboard-f7: "\uF2B0", keyboard-f8: "\uF2B1", keyboard-f9: "\uF2B2", keyboard-off: "\uE30F", keyboard-off-outline: "\uEE4A", keyboard-outline: "\uE97A", keyboard-return: "\uE310", keyboard-settings: "\uE9F8", keyboard-settings-outline: "\uE9F9", keyboard-space: "\uF04F", keyboard-tab: "\uE311", keyboard-tab-reverse: "\uE324", keyboard-variant: "\uE312", khanda: "\uF0FC", kickstarter: "\uE744", kite: "\uF984", kite-outline: "\uF985", kitesurfing: "\uF743", klingon: "\uF35A", knife: "\uE9FA", knife-military: "\uE9FB", koala: "\uF73E", kodi: "\uE313", kubernetes: "\uF0FD", label: "\uE314", label-multiple: "\uF374", label-multiple-outline: "\uF375", label-off: "\uEACA", label-off-outline: "\uEACB", label-outline: "\uE315", label-percent: "\uF2E9", label-percent-outline: "\uF2EA", label-variant: "\uEACC", label-variant-outline: "\uEACD", ladder: "\uF5A1", ladybug: "\uE82C", lambda: "\uE626", lamp: "\uE6B4", lamp-outline: "\uF7CF", lamps: "\uF575", lamps-outline: "\uF7D0", lan: "\uE316", lan-check: "\uF2A9", lan-connect: "\uE317", lan-disconnect: "\uE318", lan-pending: "\uE319", land-fields: "\uFAB1", land-plots: "\uFAB2", land-plots-circle: "\uFAB3", land-plots-circle-variant: "\uFAB4", land-rows-horizontal: "\uFAB5", land-rows-vertical: "\uFAB6", landslide: "\uFA47", landslide-outline: "\uFA48", language-c: "\uE670", language-cpp: "\uE671", language-csharp: "\uE31A", language-css3: "\uE31B", language-fortran: "\uF219", language-go: "\uE7D2", language-haskell: "\uEC91", language-html5: "\uE31C", language-java: "\uEB36", language-javascript: "\uE31D", language-kotlin: "\uF218", language-lua: "\uE8B0", language-markdown: "\uE353", language-markdown-outline: "\uEF5A", language-php: "\uE31E", language-python: "\uE31F", language-r: "\uE7D3", language-ruby: "\uED2C", language-ruby-on-rails: "\uEACE", language-rust: "\uF616", language-swift: "\uE6E4", language-typescript: "\uE6E5", language-xaml: "\uE672", laptop: "\uE321", laptop-account: "\uFA49", laptop-off: "\uE6E6", laravel: "\uEACF", laser-pointer: "\uF483", lasso: "\uEF02", lastpass: "\uE445", latitude: "\uEF56", launch: "\uE326", lava-lamp: "\uE7D4", layers: "\uE327", layers-edit: "\uF891", layers-minus: "\uEE4B", layers-off: "\uE328", layers-off-outline: "\uE9FC", layers-outline: "\uE9FD", layers-plus: "\uEE4C", layers-remove: "\uEE4D", layers-search: "\uF205", layers-search-outline: "\uF206", layers-triple: "\uEF57", layers-triple-outline: "\uEF58", lead-pencil: "\uE64E", leaf: "\uE329", leaf-circle: "\uF904", leaf-circle-outline: "\uF905", leaf-maple: "\uEC92", leaf-maple-off: "\uF2D9", leaf-off: "\uF2D8", leak: "\uEDD6", leak-off: "\uEDD7", lecturn: "\uFAEF", led-off: "\uE32A", led-on: "\uE32B", led-outline: "\uE32C", led-strip: "\uE7D5", led-strip-variant: "\uF050", led-strip-variant-off: "\uFA4A", led-variant-off: "\uE32D", led-variant-on: "\uE32E", led-variant-outline: "\uE32F", leek: "\uF17C", less-than: "\uE97B", less-than-or-equal: "\uE97C", library: "\uE330", library-outline: "\uFA21", library-shelves: "\uEBA8", license: "\uEFC2", lifebuoy: "\uE87D", light-flood-down: "\uF986", light-flood-up: "\uF987", light-recessed: "\uF79A", light-switch: "\uE97D", light-switch-off: "\uFA23", lightbulb: "\uE334", lightbulb-alert: "\uF9E0", lightbulb-alert-outline: "\uF9E1", lightbulb-auto: "\uF7FF", lightbulb-auto-outline: "\uF800", lightbulb-cfl: "\uF207", lightbulb-cfl-off: "\uF208", lightbulb-cfl-spiral: "\uF274", lightbulb-cfl-spiral-off: "\uF2C2", lightbulb-fluorescent-tube: "\uF803", lightbulb-fluorescent-tube-outline: "\uF804", lightbulb-group: "\uF252", lightbulb-group-off: "\uF2CC", lightbulb-group-off-outline: "\uF2CD", lightbulb-group-outline: "\uF253", lightbulb-multiple: "\uF254", lightbulb-multiple-off: "\uF2CE", lightbulb-multiple-off-outline: "\uF2CF", lightbulb-multiple-outline: "\uF255", lightbulb-night: "\uFA4B", lightbulb-night-outline: "\uFA4C", lightbulb-off: "\uEE4E", lightbulb-off-outline: "\uEE4F", lightbulb-on: "\uE6E7", lightbulb-on-10: "\uFA4D", lightbulb-on-20: "\uFA4E", lightbulb-on-30: "\uFA4F", lightbulb-on-40: "\uFA50", lightbulb-on-50: "\uFA51", lightbulb-on-60: "\uFA52", lightbulb-on-70: "\uFA53", lightbulb-on-80: "\uFA54", lightbulb-on-90: "\uFA55", lightbulb-on-outline: "\uE6E8", lightbulb-outline: "\uE335", lightbulb-question: "\uF9E2", lightbulb-question-outline: "\uF9E3", lightbulb-spot: "\uF7F3", lightbulb-spot-off: "\uF7F4", lightbulb-variant: "\uF801", lightbulb-variant-outline: "\uF802", lighthouse: "\uE9FE", lighthouse-on: "\uE9FF", lightning-bolt: "\uF40A", lightning-bolt-circle: "\uE81F", lightning-bolt-outline: "\uF40B", line-scan: "\uE623", lingerie: "\uF475", link: "\uE336", link-box: "\uED19", link-box-outline: "\uED1A", link-box-variant: "\uED1B", link-box-variant-outline: "\uED1C", link-lock: "\uF0B9", link-off: "\uE337", link-plus: "\uEC93", link-variant: "\uE338", link-variant-minus: "\uF0FE", link-variant-off: "\uE339", link-variant-plus: "\uF0FF", link-variant-remove: "\uF100", linkedin: "\uE33A", linux: "\uE33C", linux-mint: "\uE8EC", lipstick: "\uF3B4", liquid-spot: "\uF825", liquor: "\uF91D", list-status: "\uF5AA", litecoin: "\uEA60", loading: "\uE771", location-enter: "\uEFC3", location-exit: "\uEFC4", lock: "\uE33D", lock-alert: "\uE8ED", lock-alert-outline: "\uF5D0", lock-check: "\uF399", lock-check-outline: "\uF6A7", lock-clock: "\uE97E", lock-minus: "\uF6A8", lock-minus-outline: "\uF6A9", lock-off: "\uF670", lock-off-outline: "\uF671", lock-open: "\uE33E", lock-open-alert: "\uF39A", lock-open-alert-outline: "\uF5D1", lock-open-check: "\uF39B", lock-open-check-outline: "\uF6AA", lock-open-minus: "\uF6AB", lock-open-minus-outline: "\uF6AC", lock-open-outline: "\uE33F", lock-open-plus: "\uF6AD", lock-open-plus-outline: "\uF6AE", lock-open-remove: "\uF6AF", lock-open-remove-outline: "\uF6B0", lock-open-variant: "\uEFC5", lock-open-variant-outline: "\uEFC6", lock-outline: "\uE340", lock-pattern: "\uE6E9", lock-plus: "\uE5FA", lock-plus-outline: "\uF6B1", lock-question: "\uE8EE", lock-remove: "\uF6B2", lock-remove-outline: "\uF6B3", lock-reset: "\uE772", lock-smart: "\uE8B1", locker: "\uE7D6", locker-multiple: "\uE7D7", login: "\uE341", login-variant: "\uE5FB", logout: "\uE342", logout-variant: "\uE5FC", longitude: "\uEF59", looks: "\uE343", lotion: "\uF581", lotion-outline: "\uF582", lotion-plus: "\uF583", lotion-plus-outline: "\uF584", loupe: "\uE344", lumx: "\uE345", lungs: "\uF083", mace: "\uF842", magazine-pistol: "\uE323", magazine-rifle: "\uE322", magic-staff: "\uF843", magnet: "\uE346", magnet-on: "\uE347", magnify: "\uE348", magnify-close: "\uE97F", magnify-expand: "\uF873", magnify-minus: "\uE349", magnify-minus-cursor: "\uEA61", magnify-minus-outline: "\uE6EB", magnify-plus: "\uE34A", magnify-plus-cursor: "\uEA62", magnify-plus-outline: "\uE6EC", magnify-remove-cursor: "\uF20B", magnify-remove-outline: "\uF20C", magnify-scan: "\uF275", mail: "\uEEBA", mailbox: "\uE6ED", mailbox-open: "\uED87", mailbox-open-outline: "\uED88", mailbox-open-up: "\uED89", mailbox-open-up-outline: "\uED8A", mailbox-outline: "\uED8B", mailbox-up: "\uED8C", mailbox-up-outline: "\uED8D", manjaro: "\uF609", map: "\uE34C", map-check: "\uEEBB", map-check-outline: "\uEEBC", map-clock: "\uED1D", map-clock-outline: "\uED1E", map-legend: "\uEA00", map-marker: "\uE34D", map-marker-account: "\uF8E2", map-marker-account-outline: "\uF8E3", map-marker-alert: "\uEF04", map-marker-alert-outline: "\uEF05", map-marker-check: "\uEC94", map-marker-check-outline: "\uF2FA", map-marker-circle: "\uE34E", map-marker-distance: "\uE8EF", map-marker-down: "\uF101", map-marker-left: "\uF2DA", map-marker-left-outline: "\uF2DC", map-marker-minus: "\uE64F", map-marker-minus-outline: "\uF2F8", map-marker-multiple: "\uE34F", map-marker-multiple-outline: "\uF276", map-marker-off: "\uE350", map-marker-off-outline: "\uF2FC", map-marker-outline: "\uE7D8", map-marker-path: "\uED1F", map-marker-plus: "\uE650", map-marker-plus-outline: "\uF2F7", map-marker-question: "\uEF06", map-marker-question-outline: "\uEF07", map-marker-radius: "\uE351", map-marker-radius-outline: "\uF2FB", map-marker-remove: "\uEF08", map-marker-remove-outline: "\uF2F9", map-marker-remove-variant: "\uEF09", map-marker-right: "\uF2DB", map-marker-right-outline: "\uF2DD", map-marker-star: "\uF607", map-marker-star-outline: "\uF608", map-marker-up: "\uF102", map-minus: "\uE980", map-outline: "\uE981", map-plus: "\uE982", map-search: "\uE983", map-search-outline: "\uE984", mapbox: "\uEBA9", margin: "\uE352", marker: "\uE651", marker-cancel: "\uEDD8", marker-check: "\uE354", mastodon: "\uEAD0", material-design: "\uE985", material-ui: "\uE356", math-compass: "\uE357", math-cos: "\uEC95", math-integral: "\uEFC7", math-integral-box: "\uEFC8", math-log: "\uF084", math-norm: "\uEFC9", math-norm-box: "\uEFCA", math-sin: "\uEC96", math-tan: "\uEC97", matrix: "\uE627", medal: "\uE986", medal-outline: "\uF325", medical-bag: "\uE6EE", medical-cotton-swab: "\uFAB7", meditation: "\uF17A", memory: "\uE35A", menorah: "\uF7D3", menorah-fire: "\uF7D4", menu: "\uE35B", menu-down: "\uE35C", menu-down-outline: "\uE6B5", menu-left: "\uE35D", menu-left-outline: "\uEA01", menu-open: "\uEBAA", menu-right: "\uE35E", menu-right-outline: "\uEA02", menu-swap: "\uEA63", menu-swap-outline: "\uEA64", menu-up: "\uE35F", menu-up-outline: "\uE6B6", merge: "\uEF5B", message: "\uE360", message-alert: "\uE361", message-alert-outline: "\uEA03", message-arrow-left: "\uF2F1", message-arrow-left-outline: "\uF2F2", message-arrow-right: "\uF2F3", message-arrow-right-outline: "\uF2F4", message-badge: "\uF940", message-badge-outline: "\uF941", message-bookmark: "\uF5AB", message-bookmark-outline: "\uF5AC", message-bulleted: "\uE6A1", message-bulleted-off: "\uE6A2", message-cog: "\uE6F0", message-cog-outline: "\uF171", message-draw: "\uE362", message-fast: "\uF9CB", message-fast-outline: "\uF9CC", message-flash: "\uF5A8", message-flash-outline: "\uF5A9", message-image: "\uE363", message-image-outline: "\uF16B", message-lock: "\uEFCB", message-lock-outline: "\uF16C", message-minus: "\uF16D", message-minus-outline: "\uF16E", message-off: "\uF64C", message-off-outline: "\uF64D", message-outline: "\uE364", message-plus: "\uE652", message-plus-outline: "\uF0BA", message-processing: "\uE365", message-processing-outline: "\uF16F", message-question: "\uF739", message-question-outline: "\uF73A", message-reply: "\uE366", message-reply-outline: "\uF73C", message-reply-text: "\uE367", message-reply-text-outline: "\uF73D", message-settings: "\uE6EF", message-settings-outline: "\uF170", message-star: "\uE699", message-star-outline: "\uF24F", message-text: "\uE368", message-text-clock: "\uF172", message-text-clock-outline: "\uF173", message-text-fast: "\uF9CD", message-text-fast-outline: "\uF9CE", message-text-lock: "\uEFCC", message-text-lock-outline: "\uF174", message-text-outline: "\uE369", message-video: "\uE36A", meteor: "\uE628", meter-electric: "\uFA56", meter-electric-outline: "\uFA57", meter-gas: "\uFA58", meter-gas-outline: "\uFA59", metronome: "\uE7D9", metronome-tick: "\uE7DA", micro-sd: "\uE7DB", microphone: "\uE36B", microphone-minus: "\uE8B2", microphone-off: "\uE36C", microphone-outline: "\uE36D", microphone-plus: "\uE8B3", microphone-question: "\uF988", microphone-question-outline: "\uF989", microphone-settings: "\uE36E", microphone-variant: "\uE36F", microphone-variant-off: "\uE370", microscope: "\uE653", microsoft: "\uE371", microsoft-access: "\uF38D", microsoft-azure: "\uE804", microsoft-azure-devops: "\uEFD4", microsoft-bing: "\uE0A3", microsoft-dynamics-365: "\uE987", microsoft-edge: "\uE1E8", microsoft-excel: "\uF38E", microsoft-internet-explorer: "\uE2FF", microsoft-office: "\uE3C5", microsoft-onedrive: "\uE3C9", microsoft-onenote: "\uE746", microsoft-outlook: "\uED21", microsoft-powerpoint: "\uF38F", microsoft-sharepoint: "\uF390", microsoft-teams: "\uE2BA", microsoft-visual-studio: "\uE60F", microsoft-visual-studio-code: "\uEA1D", microsoft-windows: "\uE5B2", microsoft-windows-classic: "\uEA20", microsoft-word: "\uF391", microsoft-xbox: "\uE5B8", microsoft-xbox-controller: "\uE5B9", microsoft-xbox-controller-battery-alert: "\uE74A", microsoft-xbox-controller-battery-charging: "\uEA21", microsoft-xbox-controller-battery-empty: "\uE74B", microsoft-xbox-controller-battery-full: "\uE74C", microsoft-xbox-controller-battery-low: "\uE74D", microsoft-xbox-controller-battery-medium: "\uE74E", microsoft-xbox-controller-battery-unknown: "\uE74F", microsoft-xbox-controller-menu: "\uEE6E", microsoft-xbox-controller-off: "\uE5BA", microsoft-xbox-controller-view: "\uEE6F", microwave: "\uEC98", microwave-off: "\uF422", middleware: "\uEF5C", middleware-outline: "\uEF5D", midi: "\uE8F0", midi-port: "\uE8F1", mine: "\uEDD9", minecraft: "\uE372", mini-sd: "\uEA04", minidisc: "\uEA05", minus: "\uE373", minus-box: "\uE374", minus-box-multiple: "\uF140", minus-box-multiple-outline: "\uF141", minus-box-outline: "\uE6F1", minus-circle: "\uE375", minus-circle-multiple: "\uE359", minus-circle-multiple-outline: "\uEAD2", minus-circle-off: "\uF458", minus-circle-off-outline: "\uF459", minus-circle-outline: "\uE376", minus-network: "\uE377", minus-network-outline: "\uEC99", minus-thick: "\uF638", mirror: "\uF1FC", mirror-rectangle: "\uF79E", mirror-variant: "\uF79F", mixed-martial-arts: "\uED8E", mixed-reality: "\uE87E", molecule: "\uEBAB", molecule-co: "\uF2FD", molecule-co2: "\uE7E3", monitor: "\uE378", monitor-account: "\uFA5A", monitor-arrow-down: "\uF9CF", monitor-arrow-down-variant: "\uF9D0", monitor-cellphone: "\uE988", monitor-cellphone-star: "\uE989", monitor-dashboard: "\uEA06", monitor-edit: "\uF2C5", monitor-eye: "\uF3B3", monitor-lock: "\uEDDA", monitor-multiple: "\uE379", monitor-off: "\uED8F", monitor-screenshot: "\uEE50", monitor-share: "\uF482", monitor-shimmer: "\uF103", monitor-small: "\uF875", monitor-speaker: "\uEF5E", monitor-speaker-off: "\uEF5F", monitor-star: "\uEDDB", moon-first-quarter: "\uEF60", moon-full: "\uEF61", moon-last-quarter: "\uEF62", moon-new: "\uEF63", moon-waning-crescent: "\uEF64", moon-waning-gibbous: "\uEF65", moon-waxing-crescent: "\uEF66", moon-waxing-gibbous: "\uEF67", moped: "\uF085", moped-electric: "\uF5B6", moped-electric-outline: "\uF5B7", moped-outline: "\uF5B8", more: "\uE37A", mortar-pestle: "\uF747", mortar-pestle-plus: "\uE3F0", mosque: "\uF826", mother-heart: "\uF313", mother-nurse: "\uED20", motion: "\uF5B1", motion-outline: "\uF5B2", motion-pause: "\uF58F", motion-pause-outline: "\uF591", motion-play: "\uF58E", motion-play-outline: "\uF590", motion-sensor: "\uED90", motion-sensor-off: "\uF434", motorbike: "\uE37B", motorbike-electric: "\uF5B9", mouse: "\uE37C", mouse-bluetooth: "\uE98A", mouse-move-down: "\uF54F", mouse-move-up: "\uF550", mouse-move-vertical: "\uF551", mouse-off: "\uE37D", mouse-variant: "\uE37E", mouse-variant-off: "\uE37F", move-resize: "\uE654", move-resize-variant: "\uE655", movie: "\uE380", movie-check: "\uF6F2", movie-check-outline: "\uF6F3", movie-cog: "\uF6F4", movie-cog-outline: "\uF6F5", movie-edit: "\uF121", movie-edit-outline: "\uF122", movie-filter: "\uF123", movie-filter-outline: "\uF124", movie-minus: "\uF6F6", movie-minus-outline: "\uF6F7", movie-off: "\uF6F8", movie-off-outline: "\uF6F9", movie-open: "\uEFCD", movie-open-check: "\uF6FA", movie-open-check-outline: "\uF6FB", movie-open-cog: "\uF6FC", movie-open-cog-outline: "\uF6FD", movie-open-edit: "\uF6FE", movie-open-edit-outline: "\uF6FF", movie-open-minus: "\uF700", movie-open-minus-outline: "\uF701", movie-open-off: "\uF702", movie-open-off-outline: "\uF703", movie-open-outline: "\uEFCE", movie-open-play: "\uF704", movie-open-play-outline: "\uF705", movie-open-plus: "\uF706", movie-open-plus-outline: "\uF707", movie-open-remove: "\uF708", movie-open-remove-outline: "\uF709", movie-open-settings: "\uF70A", movie-open-settings-outline: "\uF70B", movie-open-star: "\uF70C", movie-open-star-outline: "\uF70D", movie-outline: "\uEDDC", movie-play: "\uF70E", movie-play-outline: "\uF70F", movie-plus: "\uF710", movie-plus-outline: "\uF711", movie-remove: "\uF712", movie-remove-outline: "\uF713", movie-roll: "\uE7DD", movie-search: "\uF1D1", movie-search-outline: "\uF1D2", movie-settings: "\uF714", movie-settings-outline: "\uF715", movie-star: "\uF716", movie-star-outline: "\uF717", mower: "\uF66E", mower-bag: "\uF66F", muffin: "\uE98B", multicast: "\uF892", multiplication: "\uE381", multiplication-box: "\uE382", mushroom: "\uE7DE", mushroom-off: "\uF3F9", mushroom-off-outline: "\uF3FA", mushroom-outline: "\uE7DF", music: "\uE759", music-accidental-double-flat: "\uEF68", music-accidental-double-sharp: "\uEF69", music-accidental-flat: "\uEF6A", music-accidental-natural: "\uEF6B", music-accidental-sharp: "\uEF6C", music-box: "\uE383", music-box-multiple: "\uE332", music-box-multiple-outline: "\uEF03", music-box-outline: "\uE384", music-circle: "\uE385", music-circle-outline: "\uEAD3", music-clef-alto: "\uEF6D", music-clef-bass: "\uEF6E", music-clef-treble: "\uEF6F", music-note: "\uE386", music-note-bluetooth: "\uE5FD", music-note-bluetooth-off: "\uE5FE", music-note-eighth: "\uE387", music-note-eighth-dotted: "\uEF70", music-note-half: "\uE388", music-note-half-dotted: "\uEF71", music-note-off: "\uE389", music-note-off-outline: "\uEF72", music-note-outline: "\uEF73", music-note-plus: "\uEDDD", music-note-quarter: "\uE38A", music-note-quarter-dotted: "\uEF74", music-note-sixteenth: "\uE38B", music-note-sixteenth-dotted: "\uEF75", music-note-whole: "\uE38C", music-note-whole-dotted: "\uEF76", music-off: "\uE75A", music-rest-eighth: "\uEF77", music-rest-half: "\uEF78", music-rest-quarter: "\uEF79", music-rest-sixteenth: "\uEF7A", music-rest-whole: "\uEF7B", mustache: "\uF5DD", nail: "\uEDDE", nas: "\uE8F2", nativescript: "\uE87F", nature: "\uE38D", nature-people: "\uE38E", navigation: "\uE38F", navigation-outline: "\uF606", navigation-variant: "\uF8EF", navigation-variant-outline: "\uF8F0", near-me: "\uE5CC", necklace: "\uEF0A", needle: "\uE390", needle-off: "\uF9D1", netflix: "\uE745", network: "\uE6F2", network-off: "\uEC9A", network-off-outline: "\uEC9B", network-outline: "\uEC9C", network-pos: "\uFACA", network-strength-1: "\uE8F3", network-strength-1-alert: "\uE8F4", network-strength-2: "\uE8F5", network-strength-2-alert: "\uE8F6", network-strength-3: "\uE8F7", network-strength-3-alert: "\uE8F8", network-strength-4: "\uE8F9", network-strength-4-alert: "\uE8FA", network-strength-4-cog: "\uF919", network-strength-off: "\uE8FB", network-strength-off-outline: "\uE8FC", network-strength-outline: "\uE8FD", new-box: "\uE393", newspaper: "\uE394", newspaper-check: "\uF942", newspaper-minus: "\uEF0B", newspaper-plus: "\uEF0C", newspaper-remove: "\uF943", newspaper-variant: "\uF000", newspaper-variant-multiple: "\uF001", newspaper-variant-multiple-outline: "\uF002", newspaper-variant-outline: "\uF003", nfc: "\uE395", nfc-search-variant: "\uEE52", nfc-tap: "\uE396", nfc-variant: "\uE397", nfc-variant-off: "\uEE53", ninja: "\uE773", nintendo-game-boy: "\uF392", nintendo-switch: "\uE7E0", nintendo-wii: "\uE5AA", nintendo-wiiu: "\uE72C", nix: "\uF104", nodejs: "\uE398", noodles: "\uF17D", not-equal: "\uE98C", not-equal-variant: "\uE98D", note: "\uE399", note-alert: "\uF77C", note-alert-outline: "\uF77D", note-check: "\uF77E", note-check-outline: "\uF77F", note-edit: "\uF780", note-edit-outline: "\uF781", note-minus: "\uF64E", note-minus-outline: "\uF64F", note-multiple: "\uE6B7", note-multiple-outline: "\uE6B8", note-off: "\uF782", note-off-outline: "\uF783", note-outline: "\uE39A", note-plus: "\uE39B", note-plus-outline: "\uE39C", note-remove: "\uF650", note-remove-outline: "\uF651", note-search: "\uF652", note-search-outline: "\uF653", note-text: "\uE39D", note-text-outline: "\uF1D6", notebook: "\uE82D", notebook-check: "\uF4F4", notebook-check-outline: "\uF4F5", notebook-edit: "\uF4E6", notebook-edit-outline: "\uF4E8", notebook-heart: "\uFA0A", notebook-heart-outline: "\uFA0B", notebook-minus: "\uF60F", notebook-minus-outline: "\uF610", notebook-multiple: "\uEE54", notebook-outline: "\uEEBE", notebook-plus: "\uF611", notebook-plus-outline: "\uF612", notebook-remove: "\uF613", notebook-remove-outline: "\uF614", notification-clear-all: "\uE39E", npm: "\uE6F6", nuke: "\uE6A3", null: "\uE7E1", numeric: "\uE39F", numeric-0: "\uEB38", numeric-0-box: "\uE3A0", numeric-0-box-multiple: "\uEF0D", numeric-0-box-multiple-outline: "\uE3A1", numeric-0-box-outline: "\uE3A2", numeric-0-circle: "\uEC9D", numeric-0-circle-outline: "\uEC9E", numeric-1: "\uEB39", numeric-1-box: "\uE3A3", numeric-1-box-multiple: "\uEF0E", numeric-1-box-multiple-outline: "\uE3A4", numeric-1-box-outline: "\uE3A5", numeric-1-circle: "\uEC9F", numeric-1-circle-outline: "\uECA0", numeric-10: "\uEFE8", numeric-10-box: "\uEF7C", numeric-10-box-multiple: "\uEFE9", numeric-10-box-multiple-outline: "\uEFEA", numeric-10-box-outline: "\uEF7D", numeric-10-circle: "\uEFEB", numeric-10-circle-outline: "\uEFEC", numeric-2: "\uEB3A", numeric-2-box: "\uE3A6", numeric-2-box-multiple: "\uEF0F", numeric-2-box-multiple-outline: "\uE3A7", numeric-2-box-outline: "\uE3A8", numeric-2-circle: "\uECA1", numeric-2-circle-outline: "\uECA2", numeric-3: "\uEB3B", numeric-3-box: "\uE3A9", numeric-3-box-multiple: "\uEF10", numeric-3-box-multiple-outline: "\uE3AA", numeric-3-box-outline: "\uE3AB", numeric-3-circle: "\uECA3", numeric-3-circle-outline: "\uECA4", numeric-4: "\uEB3C", numeric-4-box: "\uE3AC", numeric-4-box-multiple: "\uEF11", numeric-4-box-multiple-outline: "\uE3B1", numeric-4-box-outline: "\uE3AD", numeric-4-circle: "\uECA5", numeric-4-circle-outline: "\uECA6", numeric-5: "\uEB3D", numeric-5-box: "\uE3B0", numeric-5-box-multiple: "\uEF12", numeric-5-box-multiple-outline: "\uE3AE", numeric-5-box-outline: "\uE3AF", numeric-5-circle: "\uECA7", numeric-5-circle-outline: "\uECA8", numeric-6: "\uEB3E", numeric-6-box: "\uE3B2", numeric-6-box-multiple: "\uEF13", numeric-6-box-multiple-outline: "\uE3B3", numeric-6-box-outline: "\uE3B4", numeric-6-circle: "\uECA9", numeric-6-circle-outline: "\uECAA", numeric-7: "\uEB3F", numeric-7-box: "\uE3B5", numeric-7-box-multiple: "\uEF14", numeric-7-box-multiple-outline: "\uE3B6", numeric-7-box-outline: "\uE3B7", numeric-7-circle: "\uECAB", numeric-7-circle-outline: "\uECAC", numeric-8: "\uEB40", numeric-8-box: "\uE3B8", numeric-8-box-multiple: "\uEF15", numeric-8-box-multiple-outline: "\uE3B9", numeric-8-box-outline: "\uE3BA", numeric-8-circle: "\uECAD", numeric-8-circle-outline: "\uECAE", numeric-9: "\uEB41", numeric-9-box: "\uE3BB", numeric-9-box-multiple: "\uEF16", numeric-9-box-multiple-outline: "\uE3BC", numeric-9-box-outline: "\uE3BD", numeric-9-circle: "\uECAF", numeric-9-circle-outline: "\uECB0", numeric-9-plus: "\uEFED", numeric-9-plus-box: "\uE3BE", numeric-9-plus-box-multiple: "\uEF17", numeric-9-plus-box-multiple-outline: "\uE3BF", numeric-9-plus-box-outline: "\uE3C0", numeric-9-plus-circle: "\uECB1", numeric-9-plus-circle-outline: "\uECB2", numeric-negative-1: "\uF051", numeric-off: "\uF9D2", numeric-positive-1: "\uF5CA", nut: "\uE6F7", nutrition: "\uE3C1", nuxt: "\uF105", oar: "\uE67B", ocarina: "\uEDDF", oci: "\uF2E8", ocr: "\uF139", octagon: "\uE3C2", octagon-outline: "\uE3C3", octagram: "\uE6F8", octagram-outline: "\uE774", octahedron: "\uF94F", octahedron-off: "\uF950", odnoklassniki: "\uE3C4", offer: "\uF21A", office-building: "\uE990", office-building-cog: "\uF948", office-building-cog-outline: "\uF949", office-building-marker: "\uF51F", office-building-marker-outline: "\uF520", office-building-outline: "\uF51E", oil: "\uE3C6", oil-lamp: "\uEF18", oil-level: "\uF052", oil-temperature: "\uEFF7", om: "\uE972", omega: "\uE3C8", one-up: "\uEBAC", onepassword: "\uE880", opacity: "\uE5CB", open-in-app: "\uE3CA", open-in-new: "\uE3CB", open-source-initiative: "\uEBAD", openid: "\uE3CC", opera: "\uE3CD", orbit: "\uE017", orbit-variant: "\uF5DA", order-alphabetical-ascending: "\uE20C", order-alphabetical-descending: "\uED06", order-bool-ascending: "\uE2BD", order-bool-ascending-variant: "\uE98E", order-bool-descending: "\uF383", order-bool-descending-variant: "\uE98F", order-numeric-ascending: "\uE544", order-numeric-descending: "\uE545", origin: "\uEB42", ornament: "\uE3CE", ornament-variant: "\uE3CF", outdoor-lamp: "\uF053", overscan: "\uF004", owl: "\uE3D1", pac-man: "\uEBAE", package: "\uE3D2", package-down: "\uE3D3", package-up: "\uE3D4", package-variant: "\uE3D5", package-variant-closed: "\uE3D6", package-variant-closed-minus: "\uF9D3", package-variant-closed-plus: "\uF9D4", package-variant-closed-remove: "\uF9D5", package-variant-minus: "\uF9D6", package-variant-plus: "\uF9D7", package-variant-remove: "\uF9D8", page-first: "\uE5FF", page-last: "\uE600", page-layout-body: "\uE6F9", page-layout-footer: "\uE6FA", page-layout-header: "\uE6FB", page-layout-header-footer: "\uEF7E", page-layout-sidebar-left: "\uE6FC", page-layout-sidebar-right: "\uE6FD", page-next: "\uEBAF", page-next-outline: "\uEBB0", page-previous: "\uEBB1", page-previous-outline: "\uEBB2", pail: "\uF416", pail-minus: "\uF436", pail-minus-outline: "\uF43B", pail-off: "\uF438", pail-off-outline: "\uF43D", pail-outline: "\uF439", pail-plus: "\uF435", pail-plus-outline: "\uF43A", pail-remove: "\uF437", pail-remove-outline: "\uF43C", palette: "\uE3D7", palette-advanced: "\uE3D8", palette-outline: "\uEE0B", palette-swatch: "\uE8B4", palette-swatch-outline: "\uF35B", palette-swatch-variant: "\uF959", palm-tree: "\uF054", pan: "\uEBB3", pan-bottom-left: "\uEBB4", pan-bottom-right: "\uEBB5", pan-down: "\uEBB6", pan-horizontal: "\uEBB7", pan-left: "\uEBB8", pan-right: "\uEBB9", pan-top-left: "\uEBBA", pan-top-right: "\uEBBB", pan-up: "\uEBBC", pan-vertical: "\uEBBD", panda: "\uE3D9", pandora: "\uE3DA", panorama: "\uE3DB", panorama-fisheye: "\uE3DC", panorama-horizontal: "\uF927", panorama-horizontal-outline: "\uE3DD", panorama-outline: "\uF98B", panorama-sphere: "\uF98C", panorama-sphere-outline: "\uF98D", panorama-variant: "\uF98E", panorama-variant-outline: "\uF98F", panorama-vertical: "\uF928", panorama-vertical-outline: "\uE3DE", panorama-wide-angle: "\uF95E", panorama-wide-angle-outline: "\uE3DF", paper-cut-vertical: "\uE3E0", paper-roll: "\uF156", paper-roll-outline: "\uF157", paperclip: "\uE3E1", paperclip-check: "\uFAC5", paperclip-lock: "\uF9D9", paperclip-minus: "\uFAC6", paperclip-off: "\uFAC7", paperclip-plus: "\uFAC8", paperclip-remove: "\uFAC9", parachute: "\uECB3", parachute-outline: "\uECB4", paragliding: "\uF744", parking: "\uE3E2", party-popper: "\uF055", passport: "\uE7E2", passport-biometric: "\uEDE0", pasta: "\uF15F", patio-heater: "\uEF7F", patreon: "\uE881", pause: "\uE3E3", pause-circle: "\uE3E4", pause-circle-outline: "\uE3E5", pause-octagon: "\uE3E6", pause-octagon-outline: "\uE3E7", paw: "\uE3E8", paw-off: "\uE656", paw-off-outline: "\uF675", paw-outline: "\uF674", peace: "\uE883", peanut: "\uEFFB", peanut-off: "\uEFFC", peanut-off-outline: "\uEFFE", peanut-outline: "\uEFFD", pen: "\uE3E9", pen-lock: "\uEDE1", pen-minus: "\uEDE2", pen-off: "\uEDE3", pen-plus: "\uEDE4", pen-remove: "\uEDE5", pencil: "\uE3EA", pencil-box: "\uE3EB", pencil-box-multiple: "\uF143", pencil-box-multiple-outline: "\uF144", pencil-box-outline: "\uE3EC", pencil-circle: "\uE6FE", pencil-circle-outline: "\uE775", pencil-lock: "\uE3ED", pencil-lock-outline: "\uEDE6", pencil-minus: "\uEDE7", pencil-minus-outline: "\uEDE8", pencil-off: "\uE3EE", pencil-off-outline: "\uEDE9", pencil-outline: "\uECB5", pencil-plus: "\uEDEA", pencil-plus-outline: "\uEDEB", pencil-remove: "\uEDEC", pencil-remove-outline: "\uEDED", pencil-ruler: "\uF352", penguin: "\uEEBF", pentagon: "\uE700", pentagon-outline: "\uE6FF", pentagram: "\uF666", percent: "\uE3EF", percent-box: "\uFA01", percent-box-outline: "\uFA02", percent-circle: "\uFA03", percent-circle-outline: "\uFA04", percent-outline: "\uF277", periodic-table: "\uE8B5", perspective-less: "\uED22", perspective-more: "\uED23", ph: "\uF7C4", phone: "\uE3F1", phone-alert: "\uEF19", phone-alert-outline: "\uF18D", phone-bluetooth: "\uE3F2", phone-bluetooth-outline: "\uF18E", phone-cancel: "\uF0BB", phone-cancel-outline: "\uF18F", phone-check: "\uF1A8", phone-check-outline: "\uF1A9", phone-classic: "\uE601", phone-classic-off: "\uF278", phone-clock: "\uF9DA", phone-dial: "\uF558", phone-dial-outline: "\uF559", phone-forward: "\uE3F3", phone-forward-outline: "\uF190", phone-hangup: "\uE3F4", phone-hangup-outline: "\uF191", phone-in-talk: "\uE3F5", phone-in-talk-outline: "\uF181", phone-incoming: "\uE3F6", phone-incoming-outline: "\uF192", phone-lock: "\uE3F7", phone-lock-outline: "\uF193", phone-log: "\uE3F8", phone-log-outline: "\uF194", phone-message: "\uF195", phone-message-outline: "\uF196", phone-minus: "\uE657", phone-minus-outline: "\uF197", phone-missed: "\uE3F9", phone-missed-outline: "\uF1A4", phone-off: "\uEDEE", phone-off-outline: "\uF1A5", phone-outgoing: "\uE3FA", phone-outgoing-outline: "\uF198", phone-outline: "\uEDEF", phone-paused: "\uE3FB", phone-paused-outline: "\uF199", phone-plus: "\uE658", phone-plus-outline: "\uF19A", phone-refresh: "\uF992", phone-refresh-outline: "\uF993", phone-remove: "\uF52E", phone-remove-outline: "\uF52F", phone-return: "\uE82E", phone-return-outline: "\uF19B", phone-ring: "\uF1AA", phone-ring-outline: "\uF1AB", phone-rotate-landscape: "\uE884", phone-rotate-portrait: "\uE885", phone-settings: "\uE3FC", phone-settings-outline: "\uF19C", phone-sync: "\uF994", phone-sync-outline: "\uF995", phone-voip: "\uE3FD", pi: "\uE3FE", pi-box: "\uE3FF", pi-hole: "\uEDF0", piano: "\uE67C", piano-off: "\uE697", pickaxe: "\uE8B6", picture-in-picture-bottom-right: "\uEE56", picture-in-picture-bottom-right-outline: "\uEE57", picture-in-picture-top-right: "\uEE58", picture-in-picture-top-right-outline: "\uEE59", pier: "\uE886", pier-crane: "\uE887", pig: "\uE400", pig-variant: "\uF005", pig-variant-outline: "\uF677", piggy-bank: "\uF006", piggy-bank-outline: "\uF678", pill: "\uE401", pill-off: "\uFA5B", pillar: "\uE701", pin: "\uE402", pin-off: "\uE403", pin-off-outline: "\uE92F", pin-outline: "\uE930", pine-tree: "\uE404", pine-tree-box: "\uE405", pine-tree-fire: "\uF419", pinterest: "\uE406", pinwheel: "\uEAD4", pinwheel-outline: "\uEAD5", pipe: "\uE7E4", pipe-disconnected: "\uE7E5", pipe-leak: "\uE888", pipe-valve: "\uF84C", pipe-wrench: "\uF353", pirate: "\uEA07", pistol: "\uE702", piston: "\uE889", pitchfork: "\uF552", pizza: "\uE408", play: "\uE409", play-box: "\uF279", play-box-lock: "\uFA15", play-box-lock-open: "\uFA16", play-box-lock-open-outline: "\uFA17", play-box-lock-outline: "\uFA18", play-box-multiple: "\uED18", play-box-multiple-outline: "\uF3E5", play-box-outline: "\uE40A", play-circle: "\uE40B", play-circle-outline: "\uE40C", play-network: "\uE88A", play-network-outline: "\uECB6", play-outline: "\uEF1A", play-pause: "\uE40D", play-protected-content: "\uE40E", play-speed: "\uE8FE", playlist-check: "\uE5C6", playlist-edit: "\uE8FF", playlist-minus: "\uE40F", playlist-music: "\uECB7", playlist-music-outline: "\uECB8", playlist-play: "\uE410", playlist-plus: "\uE411", playlist-remove: "\uE412", playlist-star: "\uEDF1", plex: "\uE6B9", pliers: "\uF9A3", plus: "\uE414", plus-box: "\uE415", plus-box-multiple: "\uE333", plus-box-multiple-outline: "\uF142", plus-box-outline: "\uE703", plus-circle: "\uE416", plus-circle-multiple: "\uE34B", plus-circle-multiple-outline: "\uE417", plus-circle-outline: "\uE418", plus-lock: "\uFA5C", plus-lock-open: "\uFA5D", plus-minus: "\uE991", plus-minus-box: "\uE992", plus-minus-variant: "\uF4C8", plus-network: "\uE419", plus-network-outline: "\uECB9", plus-outline: "\uE704", plus-thick: "\uF1EB", podcast: "\uE993", podium: "\uED24", podium-bronze: "\uED25", podium-gold: "\uED26", podium-silver: "\uED27", point-of-sale: "\uED91", pokeball: "\uE41C", pokemon-go: "\uEA08", poker-chip: "\uE82F", polaroid: "\uE41D", police-badge: "\uF166", police-badge-outline: "\uF167", police-station: "\uF838", poll: "\uE41E", polo: "\uF4C2", polymer: "\uE420", pool: "\uE605", pool-thermometer: "\uFA5E", popcorn: "\uE421", post: "\uF007", post-lamp: "\uFA5F", post-outline: "\uF008", postage-stamp: "\uECBA", pot: "\uE2E4", pot-mix: "\uE65A", pot-mix-outline: "\uE676", pot-outline: "\uE2FE", pot-steam: "\uE659", pot-steam-outline: "\uE325", pound: "\uE422", pound-box: "\uE423", pound-box-outline: "\uF17E", power: "\uE424", power-cycle: "\uE900", power-off: "\uE901", power-on: "\uE902", power-plug: "\uE6A4", power-plug-off: "\uE6A5", power-plug-off-outline: "\uF423", power-plug-outline: "\uF424", power-settings: "\uE425", power-sleep: "\uE903", power-socket: "\uE426", power-socket-au: "\uE904", power-socket-ch: "\uEFB2", power-socket-de: "\uF106", power-socket-eu: "\uE7E6", power-socket-fr: "\uF107", power-socket-it: "\uF4FE", power-socket-jp: "\uF108", power-socket-uk: "\uE7E7", power-socket-us: "\uE7E8", power-standby: "\uE905", powershell: "\uEA09", prescription: "\uE705", presentation: "\uE427", presentation-play: "\uE428", pretzel: "\uF561", printer: "\uE429", printer-3d: "\uE42A", printer-3d-nozzle: "\uEE5A", printer-3d-nozzle-alert: "\uF1BF", printer-3d-nozzle-alert-outline: "\uF1C0", printer-3d-nozzle-heat: "\uF8B7", printer-3d-nozzle-heat-outline: "\uF8B8", printer-3d-nozzle-outline: "\uEE5B", printer-alert: "\uE42B", printer-check: "\uF145", printer-eye: "\uF457", printer-off: "\uEE5C", printer-off-outline: "\uF784", printer-outline: "\uF785", printer-pos: "\uF056", printer-search: "\uF456", printer-settings: "\uE706", printer-wireless: "\uEA0A", priority-high: "\uE602", priority-low: "\uE603", professional-hexagon: "\uE42C", progress-alert: "\uECBB", progress-check: "\uE994", progress-clock: "\uE995", progress-close: "\uF109", progress-download: "\uE996", progress-pencil: "\uF786", progress-question: "\uF521", progress-star: "\uF787", progress-upload: "\uE997", progress-wrench: "\uECBC", projector: "\uE42D", projector-off: "\uFA22", projector-screen: "\uE42E", projector-screen-off: "\uF80C", projector-screen-off-outline: "\uF80D", projector-screen-outline: "\uF723", projector-screen-variant: "\uF80E", projector-screen-variant-off: "\uF80F", projector-screen-variant-off-outline: "\uF810", projector-screen-variant-outline: "\uF811", propane-tank: "\uF356", propane-tank-outline: "\uF357", protocol: "\uEFD7", publish: "\uE6A6", publish-off: "\uF944", pulse: "\uE42F", pump: "\uF401", pumpkin: "\uEBBE", purse: "\uEF1B", purse-outline: "\uEF1C", puzzle: "\uE430", puzzle-check: "\uF425", puzzle-check-outline: "\uF426", puzzle-edit: "\uF4D2", puzzle-edit-outline: "\uF4D8", puzzle-heart: "\uF4D3", puzzle-heart-outline: "\uF4D9", puzzle-minus: "\uF4D0", puzzle-minus-outline: "\uF4D6", puzzle-outline: "\uEA65", puzzle-plus: "\uF4CF", puzzle-plus-outline: "\uF4D5", puzzle-remove: "\uF4D1", puzzle-remove-outline: "\uF4D7", puzzle-star: "\uF4D4", puzzle-star-outline: "\uF4DA", pyramid: "\uF951", pyramid-off: "\uF952", qi: "\uE998", qqchat: "\uE604", qrcode: "\uE431", qrcode-edit: "\uE8B7", qrcode-minus: "\uF18B", qrcode-plus: "\uF18A", qrcode-remove: "\uF18C", qrcode-scan: "\uE432", quadcopter: "\uE433", quality-high: "\uE434", quality-low: "\uEA0B", quality-medium: "\uEA0C", quora: "\uED28", rabbit: "\uE906", rabbit-variant: "\uFA60", rabbit-variant-outline: "\uFA61", racing-helmet: "\uED92", racquetball: "\uED93", radar: "\uE436", radiator: "\uE437", radiator-disabled: "\uEAD6", radiator-off: "\uEAD7", radio: "\uE438", radio-am: "\uECBD", radio-fm: "\uECBE", radio-handheld: "\uE439", radio-off: "\uF21B", radio-tower: "\uE43A", radioactive: "\uE43B", radioactive-circle: "\uF85C", radioactive-circle-outline: "\uF85D", radioactive-off: "\uEEC0", radiobox-blank: "\uE43C", radiobox-marked: "\uE43D", radiology-box: "\uF4C4", radiology-box-outline: "\uF4C5", radius: "\uECBF", radius-outline: "\uECC0", railroad-light: "\uEF1D", rake: "\uF543", raspberry-pi: "\uE43E", raw: "\uFA0E", raw-off: "\uFA0F", ray-end: "\uE43F", ray-end-arrow: "\uE440", ray-start: "\uE441", ray-start-arrow: "\uE442", ray-start-end: "\uE443", ray-start-vertex-end: "\uF5D7", ray-vertex: "\uE444", razor-double-edge: "\uF996", razor-single-edge: "\uF997", react: "\uE707", read: "\uE446", receipt: "\uE448", receipt-outline: "\uF9DB", receipt-text-check: "\uFA62", receipt-text-check-outline: "\uFA63", receipt-text-minus: "\uFA64", receipt-text-minus-outline: "\uFA65", receipt-text-plus: "\uFA66", receipt-text-plus-outline: "\uFA67", receipt-text-remove: "\uFA68", receipt-text-remove-outline: "\uFA69", record: "\uE449", record-circle: "\uEEC1", record-circle-outline: "\uEEC2", record-player: "\uE999", record-rec: "\uE44A", rectangle: "\uEE5D", rectangle-outline: "\uEE5E", recycle: "\uE44B", recycle-variant: "\uF39C", reddit: "\uE44C", redhat: "\uF11A", redo: "\uE44D", redo-variant: "\uE44E", reflect-horizontal: "\uEA0D", reflect-vertical: "\uEA0E", refresh: "\uE44F", refresh-auto: "\uF8F1", refresh-circle: "\uF376", regex: "\uE450", registered-trademark: "\uEA66", reiterate: "\uF587", relation-many-to-many: "\uF495", relation-many-to-one: "\uF496", relation-many-to-one-or-many: "\uF497", relation-many-to-only-one: "\uF498", relation-many-to-zero-or-many: "\uF499", relation-many-to-zero-or-one: "\uF49A", relation-one-or-many-to-many: "\uF49B", relation-one-or-many-to-one: "\uF49C", relation-one-or-many-to-one-or-many: "\uF49D", relation-one-or-many-to-only-one: "\uF49E", relation-one-or-many-to-zero-or-many: "\uF49F", relation-one-or-many-to-zero-or-one: "\uF4A0", relation-one-to-many: "\uF4A1", relation-one-to-one: "\uF4A2", relation-one-to-one-or-many: "\uF4A3", relation-one-to-only-one: "\uF4A4", relation-one-to-zero-or-many: "\uF4A5", relation-one-to-zero-or-one: "\uF4A6", relation-only-one-to-many: "\uF4A7", relation-only-one-to-one: "\uF4A8", relation-only-one-to-one-or-many: "\uF4A9", relation-only-one-to-only-one: "\uF4AA", relation-only-one-to-zero-or-many: "\uF4AB", relation-only-one-to-zero-or-one: "\uF4AC", relation-zero-or-many-to-many: "\uF4AD", relation-zero-or-many-to-one: "\uF4AE", relation-zero-or-many-to-one-or-many: "\uF4AF", relation-zero-or-many-to-only-one: "\uF4B0", relation-zero-or-many-to-zero-or-many: "\uF4B1", relation-zero-or-many-to-zero-or-one: "\uF4B2", relation-zero-or-one-to-many: "\uF4B3", relation-zero-or-one-to-one: "\uF4B4", relation-zero-or-one-to-one-or-many: "\uF4B5", relation-zero-or-one-to-only-one: "\uF4B6", relation-zero-or-one-to-zero-or-many: "\uF4B7", relation-zero-or-one-to-zero-or-one: "\uF4B8", relative-scale: "\uE451", reload: "\uE452", reload-alert: "\uF10A", reminder: "\uE88B", remote: "\uE453", remote-desktop: "\uE8B8", remote-off: "\uEEC3", remote-tv: "\uEEC4", remote-tv-off: "\uEEC5", rename-box: "\uE454", reorder-horizontal: "\uE687", reorder-vertical: "\uE688", repeat: "\uE455", repeat-off: "\uE456", repeat-once: "\uE457", repeat-variant: "\uE546", replay: "\uE458", reply: "\uE459", reply-all: "\uE45A", reply-all-outline: "\uEF1E", reply-circle: "\uF1AD", reply-outline: "\uEF1F", reproduction: "\uE45B", resistor: "\uEB43", resistor-nodes: "\uEB44", resize: "\uEA67", resize-bottom-right: "\uE45C", responsive: "\uE45D", restart: "\uE708", restart-alert: "\uF10B", restart-off: "\uED94", restore: "\uE99A", restore-alert: "\uF10C", rewind: "\uE45E", rewind-10: "\uED29", rewind-15: "\uF945", rewind-30: "\uED95", rewind-5: "\uF1F8", rewind-60: "\uF60B", rewind-outline: "\uE709", rhombus: "\uE70A", rhombus-medium: "\uEA0F", rhombus-medium-outline: "\uF4DB", rhombus-outline: "\uE70B", rhombus-split: "\uEA10", rhombus-split-outline: "\uF4DC", ribbon: "\uE45F", rice: "\uE7E9", rickshaw: "\uF5BA", rickshaw-electric: "\uF5BB", ring: "\uE7EA", rivet: "\uEE5F", road: "\uE460", road-variant: "\uE461", robber: "\uF057", robot: "\uE6A8", robot-angry: "\uF69C", robot-angry-outline: "\uF69D", robot-confused: "\uF69E", robot-confused-outline: "\uF69F", robot-dead: "\uF6A0", robot-dead-outline: "\uF6A1", robot-excited: "\uF6A2", robot-excited-outline: "\uF6A3", robot-happy: "\uF718", robot-happy-outline: "\uF719", robot-industrial: "\uEB45", robot-industrial-outline: "\uFA19", robot-love: "\uF6A4", robot-love-outline: "\uF6A5", robot-mower: "\uF1F6", robot-mower-outline: "\uF1F2", robot-off: "\uF6A6", robot-off-outline: "\uF67A", robot-outline: "\uF679", robot-vacuum: "\uE70C", robot-vacuum-variant: "\uE907", rocket: "\uE462", rocket-launch: "\uF4DD", rocket-launch-outline: "\uF4DE", rocket-outline: "\uF3AE", rodent: "\uF326", roller-shade: "\uFA6A", roller-shade-closed: "\uFA6B", roller-skate: "\uED2A", roller-skate-off: "\uE144", rollerblade: "\uED2B", rollerblade-off: "\uE02D", rollupjs: "\uEBBF", rolodex: "\uFAB8", rolodex-outline: "\uFAB9", roman-numeral-1: "\uF087", roman-numeral-10: "\uF090", roman-numeral-2: "\uF088", roman-numeral-3: "\uF089", roman-numeral-4: "\uF08A", roman-numeral-5: "\uF08B", roman-numeral-6: "\uF08C", roman-numeral-7: "\uF08D", roman-numeral-8: "\uF08E", roman-numeral-9: "\uF08F", room-service: "\uE88C", room-service-outline: "\uED96", rotate-360: "\uF998", rotate-3d: "\uEEC6", rotate-3d-variant: "\uE463", rotate-left: "\uE464", rotate-left-variant: "\uE465", rotate-orbit: "\uED97", rotate-right: "\uE466", rotate-right-variant: "\uE467", rounded-corner: "\uE606", router: "\uF1E1", router-network: "\uF086", router-wireless: "\uE468", router-wireless-off: "\uF5A2", router-wireless-settings: "\uEA68", routes: "\uE469", routes-clock: "\uF058", rowing: "\uE607", rss: "\uE46A", rss-box: "\uE46B", rss-off: "\uEF20", rug: "\uF474", rugby: "\uED98", ruler: "\uE46C", ruler-square: "\uECC1", ruler-square-compass: "\uEEBD", run: "\uE70D", run-fast: "\uE46D", rv-truck: "\uF1D3", sack: "\uED2D", sack-percent: "\uED2E", safe: "\uEA69", safe-square: "\uF27B", safe-square-outline: "\uF27C", safety-goggles: "\uED2F", sail-boat: "\uEEC7", sail-boat-sink: "\uFAEE", sale: "\uE46E", sale-outline: "\uFA05", salesforce: "\uE88D", sass: "\uE7EB", satellite: "\uE46F", satellite-uplink: "\uE908", satellite-variant: "\uE470", sausage: "\uE8B9", sausage-off: "\uF788", saw-blade: "\uEE60", sawtooth-wave: "\uF479", saxophone: "\uE608", scale: "\uE471", scale-balance: "\uE5D0", scale-bathroom: "\uE472", scale-off: "\uF059", scale-unbalanced: "\uF9B7", scan-helper: "\uF3D7", scanner: "\uE6AA", scanner-off: "\uE909", scatter-plot: "\uEEC8", scatter-plot-outline: "\uEEC9", scent: "\uF957", scent-off: "\uF958", school: "\uE473", school-outline: "\uF17F", scissors-cutting: "\uEA6A", scooter: "\uF5BC", scooter-electric: "\uF5BD", scoreboard: "\uF27D", scoreboard-outline: "\uF27E", screen-rotation: "\uE474", screen-rotation-lock: "\uE477", screw-flat-top: "\uEDF2", screw-lag: "\uEDF3", screw-machine-flat-top: "\uEDF4", screw-machine-round-top: "\uEDF5", screw-round-top: "\uEDF6", screwdriver: "\uE475", script: "\uEBC0", script-outline: "\uE476", script-text: "\uEBC1", script-text-key: "\uF724", script-text-key-outline: "\uF725", script-text-outline: "\uEBC2", script-text-play: "\uF726", script-text-play-outline: "\uF727", sd: "\uE478", seal: "\uE479", seal-variant: "\uEFD8", search-web: "\uE70E", seat: "\uECC2", seat-flat: "\uE47A", seat-flat-angled: "\uE47B", seat-individual-suite: "\uE47C", seat-legroom-extra: "\uE47D", seat-legroom-normal: "\uE47E", seat-legroom-reduced: "\uE47F", seat-outline: "\uECC3", seat-passenger: "\uF248", seat-recline-extra: "\uE480", seat-recline-normal: "\uE481", seatbelt: "\uECC4", security: "\uE482", security-network: "\uE483", seed: "\uEE61", seed-off: "\uF3FC", seed-off-outline: "\uF3FD", seed-outline: "\uEE62", seed-plus: "\uFA6C", seed-plus-outline: "\uFA6D", seesaw: "\uF5A3", segment: "\uEECA", select: "\uE484", select-all: "\uE485", select-color: "\uED30", select-compare: "\uEAD8", select-drag: "\uEA6B", select-group: "\uEF81", select-inverse: "\uE486", select-marker: "\uF27F", select-multiple: "\uF280", select-multiple-marker: "\uF281", select-off: "\uE487", select-place: "\uEFD9", select-remove: "\uF7C0", select-search: "\uF203", selection: "\uE488", selection-drag: "\uEA6C", selection-ellipse: "\uED31", selection-ellipse-arrow-inside: "\uEF21", selection-ellipse-remove: "\uF7C1", selection-marker: "\uF282", selection-multiple: "\uF284", selection-multiple-marker: "\uF283", selection-off: "\uE776", selection-remove: "\uF7C2", selection-search: "\uF204", semantic-web: "\uF315", send: "\uE489", send-check: "\uF160", send-check-outline: "\uF161", send-circle: "\uEDF7", send-circle-outline: "\uEDF8", send-clock: "\uF162", send-clock-outline: "\uF163", send-lock: "\uE7EC", send-lock-outline: "\uF165", send-outline: "\uF164", serial-port: "\uE65B", server: "\uE48A", server-minus: "\uE48B", server-network: "\uE48C", server-network-off: "\uE48D", server-off: "\uE48E", server-plus: "\uE48F", server-remove: "\uE490", server-security: "\uE491", set-all: "\uE777", set-center: "\uE778", set-center-right: "\uE779", set-left: "\uE77A", set-left-center: "\uE77B", set-left-right: "\uE77C", set-merge: "\uF4DF", set-none: "\uE77D", set-right: "\uE77E", set-split: "\uF4E0", set-square: "\uF45C", set-top-box: "\uE99E", settings-helper: "\uEA6D", shaker: "\uF10D", shaker-outline: "\uF10E", shape: "\uE830", shape-circle-plus: "\uE65C", shape-outline: "\uE831", shape-oval-plus: "\uF1F9", shape-plus: "\uE494", shape-polygon-plus: "\uE65D", shape-rectangle-plus: "\uE65E", shape-square-plus: "\uE65F", shape-square-rounded-plus: "\uF4F9", share: "\uE495", share-all: "\uF1F3", share-all-outline: "\uF1F4", share-circle: "\uF1AC", share-off: "\uEF22", share-off-outline: "\uEF23", share-outline: "\uE931", share-variant: "\uE496", share-variant-outline: "\uF513", shark: "\uF8B9", shark-fin: "\uF672", shark-fin-outline: "\uF673", shark-off: "\uF8BA", sheep: "\uECC5", shield: "\uE497", shield-account: "\uE88E", shield-account-outline: "\uEA11", shield-account-variant: "\uF5A6", shield-account-variant-outline: "\uF5A7", shield-airplane: "\uE6BA", shield-airplane-outline: "\uECC6", shield-alert: "\uEECB", shield-alert-outline: "\uEECC", shield-bug: "\uF3D9", shield-bug-outline: "\uF3DA", shield-car: "\uEF82", shield-check: "\uE564", shield-check-outline: "\uECC7", shield-cross: "\uECC8", shield-cross-outline: "\uECC9", shield-crown: "\uF8BB", shield-crown-outline: "\uF8BC", shield-edit: "\uF19F", shield-edit-outline: "\uF1A0", shield-half: "\uF35F", shield-half-full: "\uE77F", shield-home: "\uE689", shield-home-outline: "\uECCA", shield-key: "\uEBC3", shield-key-outline: "\uEBC4", shield-link-variant: "\uED32", shield-link-variant-outline: "\uED33", shield-lock: "\uE99C", shield-lock-open: "\uF999", shield-lock-open-outline: "\uF99A", shield-lock-outline: "\uECCB", shield-moon: "\uF827", shield-moon-outline: "\uF828", shield-off: "\uE99D", shield-off-outline: "\uE99B", shield-outline: "\uE498", shield-plus: "\uEAD9", shield-plus-outline: "\uEADA", shield-refresh: "\uE0A9", shield-refresh-outline: "\uE1DF", shield-remove: "\uEADB", shield-remove-outline: "\uEADC", shield-search: "\uED99", shield-star: "\uF13A", shield-star-outline: "\uF13B", shield-sun: "\uF05C", shield-sun-outline: "\uF05D", shield-sword: "\uF8BD", shield-sword-outline: "\uF8BE", shield-sync: "\uF1A1", shield-sync-outline: "\uF1A2", shimmer: "\uF544", ship-wheel: "\uE832", shipping-pallet: "\uF84D", shoe-ballet: "\uF5C9", shoe-cleat: "\uF5C6", shoe-formal: "\uEB46", shoe-heel: "\uEB47", shoe-print: "\uEDF9", shoe-sneaker: "\uF5C7", shopping: "\uE499", shopping-music: "\uE49A", shopping-outline: "\uF1D4", shopping-search: "\uEF83", shopping-search-outline: "\uFA6E", shore: "\uF4F8", shovel: "\uE70F", shovel-off: "\uE710", shower: "\uE99F", shower-head: "\uE9A0", shredder: "\uE49B", shuffle: "\uE49C", shuffle-disabled: "\uE49D", shuffle-variant: "\uE49E", shuriken: "\uF37E", sickle: "\uF8BF", sigma: "\uE49F", sigma-lower: "\uE62A", sign-caution: "\uE4A0", sign-direction: "\uE780", sign-direction-minus: "\uEFFF", sign-direction-plus: "\uEFDB", sign-direction-remove: "\uEFDC", sign-pole: "\uF4F7", sign-real-estate: "\uF117", sign-text: "\uE781", signal: "\uE4A1", signal-2g: "\uE711", signal-3g: "\uE712", signal-4g: "\uE713", signal-5g: "\uEA6E", signal-cellular-1: "\uE8BB", signal-cellular-2: "\uE8BC", signal-cellular-3: "\uE8BD", signal-cellular-outline: "\uE8BE", signal-distance-variant: "\uEE63", signal-hspa: "\uE714", signal-hspa-plus: "\uE715", signal-off: "\uE782", signal-variant: "\uE609", signature: "\uEDFA", signature-freehand: "\uEDFB", signature-image: "\uEDFC", signature-text: "\uEDFD", silo: "\uEB48", silverware: "\uE4A2", silverware-clean: "\uEFDD", silverware-fork: "\uE4A3", silverware-fork-knife: "\uEA6F", silverware-spoon: "\uE4A4", silverware-variant: "\uE4A5", sim: "\uE4A6", sim-alert: "\uE4A7", sim-alert-outline: "\uF5D2", sim-off: "\uE4A8", sim-off-outline: "\uF5D3", sim-outline: "\uF5D4", simple-icons: "\uF31C", sina-weibo: "\uEADE", sine-wave: "\uE95A", sitemap: "\uE4A9", sitemap-outline: "\uF99B", size-l: "\uF3A5", size-m: "\uF3A4", size-s: "\uF3A3", size-xl: "\uF3A6", size-xs: "\uF3A2", size-xxl: "\uF3A7", size-xxs: "\uF3A1", size-xxxl: "\uF3A8", skate: "\uED34", skate-off: "\uE698", skateboard: "\uF4C1", skateboarding: "\uE500", skew-less: "\uED35", skew-more: "\uED36", ski: "\uF303", ski-cross-country: "\uF304", ski-water: "\uF305", skip-backward: "\uE4AA", skip-backward-outline: "\uEF24", skip-forward: "\uE4AB", skip-forward-outline: "\uEF25", skip-next: "\uE4AC", skip-next-circle: "\uE660", skip-next-circle-outline: "\uE661", skip-next-outline: "\uEF26", skip-previous: "\uE4AD", skip-previous-circle: "\uE662", skip-previous-circle-outline: "\uE663", skip-previous-outline: "\uEF27", skull: "\uE68B", skull-crossbones: "\uEBC5", skull-crossbones-outline: "\uEBC6", skull-outline: "\uEBC7", skull-scan: "\uF4C6", skull-scan-outline: "\uF4C7", skype: "\uE4AE", skype-business: "\uE4AF", slack: "\uE4B0", slash-forward: "\uEFDE", slash-forward-box: "\uEFDF", sledding: "\uE41A", sleep: "\uE4B1", sleep-off: "\uE4B2", slide: "\uF5A4", slope-downhill: "\uEDFE", slope-uphill: "\uEDFF", slot-machine: "\uF113", slot-machine-outline: "\uF114", smart-card: "\uF0BC", smart-card-off: "\uF8F6", smart-card-off-outline: "\uF8F7", smart-card-outline: "\uF0BD", smart-card-reader: "\uF0BE", smart-card-reader-outline: "\uF0BF", smog: "\uEA70", smoke: "\uF798", smoke-detector: "\uE391", smoke-detector-alert: "\uF92D", smoke-detector-alert-outline: "\uF92E", smoke-detector-off: "\uF808", smoke-detector-off-outline: "\uF809", smoke-detector-outline: "\uF807", smoke-detector-variant: "\uF80A", smoke-detector-variant-alert: "\uF92F", smoke-detector-variant-off: "\uF80B", smoking: "\uE4B3", smoking-off: "\uE4B4", smoking-pipe: "\uF40C", smoking-pipe-off: "\uF427", snail: "\uF676", snake: "\uF50D", snapchat: "\uE4B5", snowboard: "\uF306", snowflake: "\uE716", snowflake-alert: "\uEF28", snowflake-check: "\uFA6F", snowflake-melt: "\uF2CA", snowflake-off: "\uF4E2", snowflake-thermometer: "\uFA70", snowflake-variant: "\uEF29", snowman: "\uE4B6", snowmobile: "\uE6DC", snowshoeing: "\uFA71", soccer: "\uE4B7", soccer-field: "\uE833", social-distance-2-meters: "\uF578", social-distance-6-feet: "\uF579", sofa: "\uE4B8", sofa-outline: "\uF56C", sofa-single: "\uF56D", sofa-single-outline: "\uF56E", solar-panel: "\uED9A", solar-panel-large: "\uED9B", solar-power: "\uEA71", solar-power-variant: "\uFA72", solar-power-variant-outline: "\uFA73", soldering-iron: "\uF091", solid: "\uE68C", sony-playstation: "\uE413", sort: "\uE4B9", sort-alphabetical-ascending: "\uE5BC", sort-alphabetical-ascending-variant: "\uF147", sort-alphabetical-descending: "\uE5BE", sort-alphabetical-descending-variant: "\uF148", sort-alphabetical-variant: "\uE4BA", sort-ascending: "\uE4BB", sort-bool-ascending: "\uF384", sort-bool-ascending-variant: "\uF385", sort-bool-descending: "\uF386", sort-bool-descending-variant: "\uF387", sort-calendar-ascending: "\uF546", sort-calendar-descending: "\uF547", sort-clock-ascending: "\uF548", sort-clock-ascending-outline: "\uF549", sort-clock-descending: "\uF54A", sort-clock-descending-outline: "\uF54B", sort-descending: "\uE4BC", sort-numeric-ascending: "\uF388", sort-numeric-ascending-variant: "\uE90C", sort-numeric-descending: "\uF389", sort-numeric-descending-variant: "\uEAD1", sort-numeric-variant: "\uE4BD", sort-reverse-variant: "\uE33B", sort-variant: "\uE4BE", sort-variant-lock: "\uECCC", sort-variant-lock-open: "\uECCD", sort-variant-off: "\uFABA", sort-variant-remove: "\uF146", soundbar: "\uF7DA", soundcloud: "\uE4BF", source-branch: "\uE62B", source-branch-check: "\uF4CE", source-branch-minus: "\uF4CA", source-branch-plus: "\uF4C9", source-branch-refresh: "\uF4CC", source-branch-remove: "\uF4CB", source-branch-sync: "\uF4CD", source-commit: "\uE717", source-commit-end: "\uE718", source-commit-end-local: "\uE719", source-commit-local: "\uE71A", source-commit-next-local: "\uE71B", source-commit-start: "\uE71C", source-commit-start-next-local: "\uE71D", source-fork: "\uE4C0", source-merge: "\uE62C", source-pull: "\uE4C1", source-repository: "\uECCE", source-repository-multiple: "\uECCF", soy-sauce: "\uE7ED", soy-sauce-off: "\uF3FB", spa: "\uECD0", spa-outline: "\uECD1", space-invaders: "\uEBC8", space-station: "\uF382", spade: "\uEE64", speaker: "\uE4C2", speaker-bluetooth: "\uE9A1", speaker-multiple: "\uED37", speaker-off: "\uE4C3", speaker-wireless: "\uE71E", spear: "\uF844", speedometer: "\uE4C4", speedometer-medium: "\uEF84", speedometer-slow: "\uEF85", spellcheck: "\uE4C5", sphere: "\uF953", sphere-off: "\uF954", spider: "\uF1E9", spider-thread: "\uF1EA", spider-web: "\uEBC9", spirit-level: "\uF4F0", spoon-sugar: "\uF428", spotify: "\uE4C6", spotlight: "\uE4C7", spotlight-beam: "\uE4C8", spray: "\uE664", spray-bottle: "\uEADF", sprinkler: "\uF05E", sprinkler-fire: "\uF99C", sprinkler-variant: "\uF05F", sprout: "\uEE65", sprout-outline: "\uEE66", square: "\uE763", square-circle: "\uF4FF", square-edit-outline: "\uE90B", square-medium: "\uEA12", square-medium-outline: "\uEA13", square-off: "\uF2ED", square-off-outline: "\uF2EE", square-opacity: "\uF853", square-outline: "\uE762", square-root: "\uE783", square-root-box: "\uE9A2", square-rounded: "\uF4FA", square-rounded-badge: "\uFA06", square-rounded-badge-outline: "\uFA07", square-rounded-outline: "\uF4FB", square-small: "\uEA14", square-wave: "\uF47A", squeegee: "\uEAE0", ssh: "\uE8BF", stack-exchange: "\uE60A", stack-overflow: "\uE4CB", stackpath: "\uE358", stadium: "\uEFF8", stadium-variant: "\uE71F", stairs: "\uE4CC", stairs-box: "\uF39D", stairs-down: "\uF2BD", stairs-up: "\uF2BC", stamper: "\uED38", standard-definition: "\uE7EE", star: "\uE4CD", star-box: "\uEA72", star-box-multiple: "\uF285", star-box-multiple-outline: "\uF286", star-box-outline: "\uEA73", star-check: "\uF565", star-check-outline: "\uF569", star-circle: "\uE4CE", star-circle-outline: "\uE9A3", star-cog: "\uF667", star-cog-outline: "\uF668", star-crescent: "\uE978", star-david: "\uE979", star-face: "\uE9A4", star-four-points: "\uEAE1", star-four-points-outline: "\uEAE2", star-half: "\uE245", star-half-full: "\uE4CF", star-minus: "\uF563", star-minus-outline: "\uF567", star-off: "\uE4D0", star-off-outline: "\uF55A", star-outline: "\uE4D1", star-plus: "\uF562", star-plus-outline: "\uF566", star-remove: "\uF564", star-remove-outline: "\uF568", star-settings: "\uF669", star-settings-outline: "\uF66A", star-shooting: "\uF740", star-shooting-outline: "\uF741", star-three-points: "\uEAE3", star-three-points-outline: "\uEAE4", state-machine: "\uF1EE", steam: "\uE4D2", steering: "\uE4D3", steering-off: "\uE90D", step-backward: "\uE4D4", step-backward-2: "\uE4D5", step-forward: "\uE4D6", step-forward-2: "\uE4D7", stethoscope: "\uE4D8", sticker: "\uF363", sticker-alert: "\uF364", sticker-alert-outline: "\uF365", sticker-check: "\uF366", sticker-check-outline: "\uF367", sticker-circle-outline: "\uE5CF", sticker-emoji: "\uE784", sticker-minus: "\uF368", sticker-minus-outline: "\uF369", sticker-outline: "\uF36A", sticker-plus: "\uF36B", sticker-plus-outline: "\uF36C", sticker-remove: "\uF36D", sticker-remove-outline: "\uF36E", sticker-text: "\uF78D", sticker-text-outline: "\uF78E", stocking: "\uE4D9", stomach: "\uF092", stool: "\uF95C", stool-outline: "\uF95D", stop: "\uE4DA", stop-circle: "\uE665", stop-circle-outline: "\uE666", storage-tank: "\uFA74", storage-tank-outline: "\uFA75", store: "\uE4DB", store-24-hour: "\uE4DC", store-alert: "\uF8C0", store-alert-outline: "\uF8C1", store-check: "\uF8C2", store-check-outline: "\uF8C3", store-clock: "\uF8C4", store-clock-outline: "\uF8C5", store-cog: "\uF8C6", store-cog-outline: "\uF8C7", store-edit: "\uF8C8", store-edit-outline: "\uF8C9", store-marker: "\uF8CA", store-marker-outline: "\uF8CB", store-minus: "\uF65D", store-minus-outline: "\uF8CC", store-off: "\uF8CD", store-off-outline: "\uF8CE", store-outline: "\uF360", store-plus: "\uF65E", store-plus-outline: "\uF8CF", store-remove: "\uF65F", store-remove-outline: "\uF8D0", store-search: "\uF8D1", store-search-outline: "\uF8D2", store-settings: "\uF8D3", store-settings-outline: "\uF8D4", storefront: "\uE7C6", storefront-outline: "\uF0C0", stove: "\uE4DD", strategy: "\uF1D5", stretch-to-page: "\uEF2A", stretch-to-page-outline: "\uEF2B", string-lights: "\uF2B9", string-lights-off: "\uF2BA", subdirectory-arrow-left: "\uE60B", subdirectory-arrow-right: "\uE60C", submarine: "\uF56B", subtitles: "\uEA15", subtitles-outline: "\uEA16", subway: "\uE6AB", subway-alert-variant: "\uED9C", subway-variant: "\uE4DE", summit: "\uE785", sun-clock: "\uFA76", sun-clock-outline: "\uFA77", sun-compass: "\uF9A4", sun-snowflake: "\uF795", sun-snowflake-variant: "\uFA78", sun-thermometer: "\uF8D5", sun-thermometer-outline: "\uF8D6", sun-wireless: "\uF7FD", sun-wireless-outline: "\uF7FE", sunglasses: "\uE4DF", surfing: "\uF745", surround-sound: "\uE5C4", surround-sound-2-0: "\uE7EF", surround-sound-2-1: "\uF728", surround-sound-3-1: "\uE7F0", surround-sound-5-1: "\uE7F1", surround-sound-5-1-2: "\uF729", surround-sound-7-1: "\uE7F2", svg: "\uE720", swap-horizontal: "\uE4E0", swap-horizontal-bold: "\uEBCC", swap-horizontal-circle: "\uEFE0", swap-horizontal-circle-outline: "\uEFE1", swap-horizontal-variant: "\uE8C0", swap-vertical: "\uE4E1", swap-vertical-bold: "\uEBCD", swap-vertical-circle: "\uEFE2", swap-vertical-circle-outline: "\uEFE3", swap-vertical-variant: "\uE8C1", swim: "\uE4E2", switch: "\uE4E3", sword: "\uE4E4", sword-cross: "\uE786", syllabary-hangul: "\uF332", syllabary-hiragana: "\uF333", syllabary-katakana: "\uF334", syllabary-katakana-halfwidth: "\uF335", symbol: "\uF500", symfony: "\uEAE5", sync: "\uE4E5", sync-alert: "\uE4E6", sync-circle: "\uF377", sync-off: "\uE4E7", tab: "\uE4E8", tab-minus: "\uEB4A", tab-plus: "\uE75B", tab-remove: "\uEB4B", tab-search: "\uF99D", tab-unselected: "\uE4E9", table: "\uE4EA", table-account: "\uF3B8", table-alert: "\uF3B9", table-arrow-down: "\uF3BA", table-arrow-left: "\uF3BB", table-arrow-right: "\uF3BC", table-arrow-up: "\uF3BD", table-border: "\uEA17", table-cancel: "\uF3BE", table-chair: "\uF060", table-check: "\uF3BF", table-clock: "\uF3C0", table-cog: "\uF3C1", table-column: "\uE834", table-column-plus-after: "\uE4EB", table-column-plus-before: "\uE4EC", table-column-remove: "\uE4ED", table-column-width: "\uE4EE", table-edit: "\uE4EF", table-eye: "\uF093", table-eye-off: "\uF3C2", table-furniture: "\uE5BB", table-headers-eye: "\uF21C", table-headers-eye-off: "\uF21D", table-heart: "\uF3C3", table-key: "\uF3C4", table-large: "\uE4F0", table-large-plus: "\uEF86", table-large-remove: "\uEF87", table-lock: "\uF3C5", table-merge-cells: "\uE9A5", table-minus: "\uF3C6", table-multiple: "\uF3C7", table-network: "\uF3C8", table-of-contents: "\uE835", table-off: "\uF3C9", table-picnic: "\uF742", table-pivot: "\uF83B", table-plus: "\uEA74", table-refresh: "\uF39F", table-remove: "\uEA75", table-row: "\uE836", table-row-height: "\uE4F1", table-row-plus-after: "\uE4F2", table-row-plus-before: "\uE4F3", table-row-remove: "\uE4F4", table-search: "\uE90E", table-settings: "\uE837", table-split-cell: "\uF429", table-star: "\uF3CA", table-sync: "\uF3A0", table-tennis: "\uEE67", tablet: "\uE4F5", tablet-android: "\uE4F6", tablet-cellphone: "\uE9A6", tablet-dashboard: "\uEECD", taco: "\uE761", tag: "\uE4F8", tag-arrow-down: "\uF72A", tag-arrow-down-outline: "\uF72B", tag-arrow-left: "\uF72C", tag-arrow-left-outline: "\uF72D", tag-arrow-right: "\uF72E", tag-arrow-right-outline: "\uF72F", tag-arrow-up: "\uF730", tag-arrow-up-outline: "\uF731", tag-check: "\uFA79", tag-check-outline: "\uFA7A", tag-faces: "\uE4F9", tag-heart: "\uE68A", tag-heart-outline: "\uEBCE", tag-minus: "\uE90F", tag-minus-outline: "\uF21E", tag-multiple: "\uE4FA", tag-multiple-outline: "\uF2F6", tag-off: "\uF21F", tag-off-outline: "\uF220", tag-outline: "\uE4FB", tag-plus: "\uE721", tag-plus-outline: "\uF221", tag-remove: "\uE722", tag-remove-outline: "\uF222", tag-search: "\uF906", tag-search-outline: "\uF907", tag-text: "\uF223", tag-text-outline: "\uE4FC", tailwind: "\uF3FE", tally-mark-1: "\uFABB", tally-mark-2: "\uFABC", tally-mark-3: "\uFABD", tally-mark-4: "\uFABE", tally-mark-5: "\uFABF", tangram: "\uE4F7", tank: "\uED39", tanker-truck: "\uEFE4", tape-drive: "\uF6DE", tape-measure: "\uEB4C", target: "\uE4FD", target-account: "\uEBCF", target-variant: "\uEA76", taxi: "\uE4FE", tea: "\uED9D", tea-outline: "\uED9E", teamviewer: "\uE4FF", teddy-bear: "\uF8FA", telescope: "\uEB4D", television: "\uE501", television-ambient-light: "\uF355", television-box: "\uE838", television-classic: "\uE7F3", television-classic-off: "\uE839", television-guide: "\uE502", television-off: "\uE83A", television-pause: "\uEF88", television-play: "\uEECE", television-shimmer: "\uF10F", television-stop: "\uEF89", temperature-celsius: "\uE503", temperature-fahrenheit: "\uE504", temperature-kelvin: "\uE505", tennis: "\uED9F", tennis-ball: "\uE506", tent: "\uE507", terraform: "\uF061", terrain: "\uE508", test-tube: "\uE667", test-tube-empty: "\uE910", test-tube-off: "\uE911", text: "\uE9A7", text-account: "\uF56F", text-box: "\uE219", text-box-check: "\uEEA5", text-box-check-outline: "\uEEA6", text-box-edit: "\uFA7B", text-box-edit-outline: "\uFA7C", text-box-minus: "\uEEA7", text-box-minus-outline: "\uEEA8", text-box-multiple: "\uEAB6", text-box-multiple-outline: "\uEAB7", text-box-outline: "\uE9EC", text-box-plus: "\uEEA9", text-box-plus-outline: "\uEEAA", text-box-remove: "\uEEAB", text-box-remove-outline: "\uEEAC", text-box-search: "\uEEAD", text-box-search-outline: "\uEEAE", text-long: "\uE9A9", text-recognition: "\uF13C", text-search: "\uF3B7", text-search-variant: "\uFA7D", text-shadow: "\uE668", text-short: "\uE9A8", text-to-speech: "\uE509", text-to-speech-off: "\uE50A", texture: "\uE50B", texture-box: "\uEFE5", theater: "\uE50C", theme-light-dark: "\uE50D", thermometer: "\uE50E", thermometer-alert: "\uEE00", thermometer-bluetooth: "\uF894", thermometer-check: "\uFA7E", thermometer-chevron-down: "\uEE01", thermometer-chevron-up: "\uEE02", thermometer-high: "\uF0C1", thermometer-lines: "\uE50F", thermometer-low: "\uF0C2", thermometer-minus: "\uEE03", thermometer-off: "\uF530", thermometer-plus: "\uEE04", thermometer-water: "\uFA7F", thermostat: "\uE392", thermostat-box: "\uE890", thought-bubble: "\uE7F5", thought-bubble-outline: "\uE7F6", thumb-down: "\uE510", thumb-down-outline: "\uE511", thumb-up: "\uE512", thumb-up-outline: "\uE513", thumbs-up-down: "\uE514", thumbs-up-down-outline: "\uF913", ticket: "\uE515", ticket-account: "\uE516", ticket-confirmation: "\uE517", ticket-confirmation-outline: "\uF3A9", ticket-outline: "\uE912", ticket-percent: "\uE723", ticket-percent-outline: "\uF42A", tie: "\uE518", tilde: "\uE724", tilde-off: "\uF8F2", timelapse: "\uE519", timeline: "\uEBD0", timeline-alert: "\uEF94", timeline-alert-outline: "\uEF97", timeline-check: "\uF531", timeline-check-outline: "\uF532", timeline-clock: "\uF1FA", timeline-clock-outline: "\uF1FB", timeline-help: "\uEF98", timeline-help-outline: "\uEF99", timeline-minus: "\uF533", timeline-minus-outline: "\uF534", timeline-outline: "\uEBD1", timeline-plus: "\uEF95", timeline-plus-outline: "\uEF96", timeline-remove: "\uF535", timeline-remove-outline: "\uF536", timeline-text: "\uEBD2", timeline-text-outline: "\uEBD3", timer: "\uF3AA", timer-10: "\uE51B", timer-3: "\uE51C", timer-alert: "\uFACB", timer-alert-outline: "\uFACC", timer-cancel: "\uFACD", timer-cancel-outline: "\uFACE", timer-check: "\uFACF", timer-check-outline: "\uFAD0", timer-cog: "\uF924", timer-cog-outline: "\uF925", timer-edit: "\uFAD1", timer-edit-outline: "\uFAD2", timer-lock: "\uFAD3", timer-lock-open: "\uFAD4", timer-lock-open-outline: "\uFAD5", timer-lock-outline: "\uFAD6", timer-marker: "\uFAD7", timer-marker-outline: "\uFAD8", timer-minus: "\uFAD9", timer-minus-outline: "\uFADA", timer-music: "\uFADB", timer-music-outline: "\uFADC", timer-off: "\uF3AB", timer-off-outline: "\uE51D", timer-outline: "\uE51A", timer-pause: "\uFADD", timer-pause-outline: "\uFADE", timer-play: "\uFADF", timer-play-outline: "\uFAE0", timer-plus: "\uFAE1", timer-plus-outline: "\uFAE2", timer-refresh: "\uFAE3", timer-refresh-outline: "\uFAE4", timer-remove: "\uFAE5", timer-remove-outline: "\uFAE6", timer-sand: "\uE51E", timer-sand-complete: "\uF99E", timer-sand-empty: "\uE6AC", timer-sand-full: "\uE78B", timer-sand-paused: "\uF99F", timer-settings: "\uF922", timer-settings-outline: "\uF923", timer-star: "\uFAE7", timer-star-outline: "\uFAE8", timer-stop: "\uFAE9", timer-stop-outline: "\uFAEA", timer-sync: "\uFAEB", timer-sync-outline: "\uFAEC", timetable: "\uE51F", tire: "\uF895", toaster: "\uF062", toaster-off: "\uF1B6", toaster-oven: "\uECD2", toggle-switch: "\uE520", toggle-switch-off: "\uE521", toggle-switch-off-outline: "\uEA18", toggle-switch-outline: "\uEA19", toggle-switch-variant: "\uFA24", toggle-switch-variant-off: "\uFA25", toilet: "\uE9AA", toolbox: "\uE9AB", toolbox-outline: "\uE9AC", tools: "\uF063", tooltip: "\uE522", tooltip-account: "\uE00B", tooltip-cellphone: "\uF83A", tooltip-check: "\uF55B", tooltip-check-outline: "\uF55C", tooltip-edit: "\uE523", tooltip-edit-outline: "\uF2C4", tooltip-image: "\uE524", tooltip-image-outline: "\uEBD4", tooltip-minus: "\uF55D", tooltip-minus-outline: "\uF55E", tooltip-outline: "\uE525", tooltip-plus: "\uEBD5", tooltip-plus-outline: "\uE526", tooltip-remove: "\uF55F", tooltip-remove-outline: "\uF560", tooltip-text: "\uE527", tooltip-text-outline: "\uEBD6", tooth: "\uE8C2", tooth-outline: "\uE528", toothbrush: "\uF128", toothbrush-electric: "\uF12B", toothbrush-paste: "\uF129", torch: "\uF605", tortoise: "\uED3A", toslink: "\uF2B7", tournament: "\uE9AD", tow-truck: "\uE83B", tower-beach: "\uE680", tower-fire: "\uE681", town-hall: "\uF874", toy-brick: "\uF287", toy-brick-marker: "\uF288", toy-brick-marker-outline: "\uF289", toy-brick-minus: "\uF28A", toy-brick-minus-outline: "\uF28B", toy-brick-outline: "\uF28C", toy-brick-plus: "\uF28D", toy-brick-plus-outline: "\uF28E", toy-brick-remove: "\uF28F", toy-brick-remove-outline: "\uF290", toy-brick-search: "\uF291", toy-brick-search-outline: "\uF292", track-light: "\uE913", trackpad: "\uE7F7", trackpad-lock: "\uE932", tractor: "\uE891", tractor-variant: "\uF4C3", trademark: "\uEA77", traffic-cone: "\uF37B", traffic-light: "\uE52A", traffic-light-outline: "\uF829", train: "\uE52B", train-car: "\uEBD7", train-car-passenger: "\uF732", train-car-passenger-door: "\uF733", train-car-passenger-door-open: "\uF734", train-car-passenger-variant: "\uF735", train-variant: "\uE8C3", tram: "\uE52C", tram-side: "\uEFE6", transcribe: "\uE52D", transcribe-close: "\uE52E", transfer: "\uF064", transfer-down: "\uEDA0", transfer-left: "\uEDA1", transfer-right: "\uE52F", transfer-up: "\uEDA2", transit-connection: "\uED3B", transit-connection-horizontal: "\uF545", transit-connection-variant: "\uED3C", transit-detour: "\uEF8A", transit-skip: "\uF514", transit-transfer: "\uE6AD", transition: "\uE914", transition-masked: "\uE915", translate: "\uE5C9", translate-off: "\uEE05", transmission-tower: "\uED3D", transmission-tower-export: "\uF92B", transmission-tower-import: "\uF92C", transmission-tower-off: "\uF9DC", trash-can: "\uEA78", trash-can-outline: "\uEA79", tray: "\uF293", tray-alert: "\uF294", tray-arrow-down: "\uE11F", tray-arrow-up: "\uE11C", tray-full: "\uF295", tray-minus: "\uF296", tray-plus: "\uF297", tray-remove: "\uF298", treasure-chest: "\uE725", tree: "\uE530", tree-outline: "\uEE68", trello: "\uE531", trending-down: "\uE532", trending-neutral: "\uE533", trending-up: "\uE534", triangle: "\uE535", triangle-outline: "\uE536", triangle-small-down: "\uFA08", triangle-small-up: "\uFA09", triangle-wave: "\uF47B", triforce: "\uEBD8", trophy: "\uE537", trophy-award: "\uE538", trophy-broken: "\uEDA3", trophy-outline: "\uE539", trophy-variant: "\uE53A", trophy-variant-outline: "\uE53B", truck: "\uE53C", truck-alert: "\uF9DD", truck-alert-outline: "\uF9DE", truck-cargo-container: "\uF8D7", truck-check: "\uECD3", truck-check-outline: "\uF299", truck-delivery: "\uE53D", truck-delivery-outline: "\uF29A", truck-fast: "\uE787", truck-fast-outline: "\uF29B", truck-flatbed: "\uF890", truck-minus: "\uF9AD", truck-minus-outline: "\uF9BC", truck-outline: "\uF29C", truck-plus: "\uF9AC", truck-plus-outline: "\uF9BB", truck-remove: "\uF9AE", truck-remove-outline: "\uF9BD", truck-snowflake: "\uF9A5", truck-trailer: "\uE726", trumpet: "\uF095", tshirt-crew: "\uEA7A", tshirt-crew-outline: "\uE53E", tshirt-v: "\uEA7B", tshirt-v-outline: "\uE53F", tsunami: "\uFA80", tumble-dryer: "\uE916", tumble-dryer-alert: "\uF1B9", tumble-dryer-off: "\uF1BA", tune: "\uE62D", tune-variant: "\uF541", tune-vertical: "\uE669", tune-vertical-variant: "\uF542", tunnel: "\uF83C", tunnel-outline: "\uF83D", turbine: "\uFA81", turkey: "\uF71A", turnstile: "\uECD4", turnstile-outline: "\uECD5", turtle: "\uECD6", twitch: "\uE542", twitter: "\uE543", two-factor-authentication: "\uE9AE", typewriter: "\uEF2C", ubisoft: "\uEBD9", ubuntu: "\uE547", ufo: "\uF0C3", ufo-outline: "\uF0C4", ultra-high-definition: "\uE7F8", umbraco: "\uE548", umbrella: "\uE549", umbrella-beach: "\uF889", umbrella-beach-outline: "\uF88A", umbrella-closed: "\uE9AF", umbrella-closed-outline: "\uF3E1", umbrella-closed-variant: "\uF3E0", umbrella-outline: "\uE54A", undo: "\uE54B", undo-variant: "\uE54C", unfold-less-horizontal: "\uE54D", unfold-less-vertical: "\uE75F", unfold-more-horizontal: "\uE54E", unfold-more-vertical: "\uE760", ungroup: "\uE54F", unicode: "\uEECF", unicorn: "\uF5C1", unicorn-variant: "\uF5C2", unicycle: "\uF5E4", unity: "\uE6AE", unreal: "\uE9B0", update: "\uE6AF", upload: "\uE551", upload-lock: "\uF372", upload-lock-outline: "\uF373", upload-multiple: "\uE83C", upload-network: "\uE6F5", upload-network-outline: "\uECD7", upload-off: "\uF0C5", upload-off-outline: "\uF0C6", upload-outline: "\uEE06", usb: "\uE552", usb-flash-drive: "\uF29D", usb-flash-drive-outline: "\uF29E", usb-port: "\uF1EF", vacuum: "\uF9A0", vacuum-outline: "\uF9A1", valve: "\uF065", valve-closed: "\uF066", valve-open: "\uF067", van-passenger: "\uE7F9", van-utility: "\uE7FA", vanish: "\uE7FB", vanish-quarter: "\uF553", vanity-light: "\uF1E0", variable: "\uEAE6", variable-box: "\uF110", vector-arrange-above: "\uE553", vector-arrange-below: "\uE554", vector-bezier: "\uEAE7", vector-circle: "\uE555", vector-circle-variant: "\uE556", vector-combine: "\uE557", vector-curve: "\uE558", vector-difference: "\uE559", vector-difference-ab: "\uE55A", vector-difference-ba: "\uE55B", vector-ellipse: "\uE892", vector-intersection: "\uE55C", vector-line: "\uE55D", vector-link: "\uEFE7", vector-point: "\uE55E", vector-polygon: "\uE55F", vector-polygon-variant: "\uF855", vector-polyline: "\uE560", vector-polyline-edit: "\uF224", vector-polyline-minus: "\uF225", vector-polyline-plus: "\uF226", vector-polyline-remove: "\uF227", vector-radius: "\uE749", vector-rectangle: "\uE5C5", vector-selection: "\uE561", vector-square: "\uE000", vector-square-close: "\uF856", vector-square-edit: "\uF8D8", vector-square-minus: "\uF8D9", vector-square-open: "\uF857", vector-square-plus: "\uF8DA", vector-square-remove: "\uF8DB", vector-triangle: "\uE562", vector-union: "\uE563", vhs: "\uEA1A", vibrate: "\uE565", vibrate-off: "\uECD8", video: "\uE566", video-2d: "\uFA1B", video-3d: "\uE7FC", video-3d-off: "\uF3D8", video-3d-variant: "\uEED0", video-4k-box: "\uE83D", video-account: "\uE918", video-box: "\uE0FC", video-box-off: "\uE0FD", video-check: "\uF068", video-check-outline: "\uF069", video-high-definition: "\uF52D", video-image: "\uE919", video-input-antenna: "\uE83E", video-input-component: "\uE83F", video-input-hdmi: "\uE840", video-input-scart: "\uEF8B", video-input-svideo: "\uE841", video-marker: "\uF9A8", video-marker-outline: "\uF9A9", video-minus: "\uE9B1", video-minus-outline: "\uE2B9", video-off: "\uE567", video-off-outline: "\uEBDA", video-outline: "\uEBDB", video-plus: "\uE9B2", video-plus-outline: "\uE1D2", video-stabilization: "\uE91A", video-switch: "\uE568", video-switch-outline: "\uE78F", video-vintage: "\uEA1B", video-wireless: "\uEED1", video-wireless-outline: "\uEED2", view-agenda: "\uE569", view-agenda-outline: "\uF1D7", view-array: "\uE56A", view-array-outline: "\uF484", view-carousel: "\uE56B", view-carousel-outline: "\uF485", view-column: "\uE56C", view-column-outline: "\uF486", view-comfy: "\uEE69", view-comfy-outline: "\uF487", view-compact: "\uEE6A", view-compact-outline: "\uEE6B", view-dashboard: "\uE56D", view-dashboard-edit: "\uF946", view-dashboard-edit-outline: "\uF947", view-dashboard-outline: "\uEA1C", view-dashboard-variant: "\uE842", view-dashboard-variant-outline: "\uF488", view-day: "\uE56E", view-day-outline: "\uF489", view-gallery: "\uF887", view-gallery-outline: "\uF888", view-grid: "\uE56F", view-grid-outline: "\uF1D8", view-grid-plus: "\uEF8C", view-grid-plus-outline: "\uF1D9", view-headline: "\uE570", view-list: "\uE571", view-list-outline: "\uF48A", view-module: "\uE572", view-module-outline: "\uF48B", view-parallel: "\uE727", view-parallel-outline: "\uF48C", view-quilt: "\uE573", view-quilt-outline: "\uF48D", view-sequential: "\uE728", view-sequential-outline: "\uF48E", view-split-horizontal: "\uEBCA", view-split-vertical: "\uEBCB", view-stream: "\uE574", view-stream-outline: "\uF48F", view-week: "\uE575", view-week-outline: "\uF490", vimeo: "\uE576", violin: "\uE60E", virtual-reality: "\uE893", virus: "\uF3B5", virus-off: "\uF8E0", virus-off-outline: "\uF8E1", virus-outline: "\uF3B6", vlc: "\uE57B", voicemail: "\uE57C", volcano: "\uFA82", volcano-outline: "\uFA83", volleyball: "\uE9B3", volume-high: "\uE57D", volume-low: "\uE57E", volume-medium: "\uE57F", volume-minus: "\uE75D", volume-mute: "\uE75E", volume-off: "\uE580", volume-plus: "\uE75C", volume-source: "\uF11F", volume-variant-off: "\uEE07", volume-vibrate: "\uF120", vote: "\uEA1E", vote-outline: "\uEA1F", vpn: "\uE581", vuejs: "\uE843", vuetify: "\uEE6C", walk: "\uE582", wall: "\uE7FD", wall-fire: "\uFA10", wall-sconce: "\uE91B", wall-sconce-flat: "\uE91C", wall-sconce-flat-outline: "\uF7C8", wall-sconce-flat-variant: "\uE41B", wall-sconce-flat-variant-outline: "\uF7C9", wall-sconce-outline: "\uF7CA", wall-sconce-round: "\uE747", wall-sconce-round-outline: "\uF7CB", wall-sconce-round-variant: "\uE91D", wall-sconce-round-variant-outline: "\uF7CC", wallet: "\uE583", wallet-giftcard: "\uE584", wallet-membership: "\uE585", wallet-outline: "\uEBDC", wallet-plus: "\uEF8D", wallet-plus-outline: "\uEF8E", wallet-travel: "\uE586", wallpaper: "\uEE08", wan: "\uE587", wardrobe: "\uEF8F", wardrobe-outline: "\uEF90", warehouse: "\uEF80", washing-machine: "\uE729", washing-machine-alert: "\uF1BB", washing-machine-off: "\uF1BC", watch: "\uE588", watch-export: "\uE589", watch-export-variant: "\uE894", watch-import: "\uE58A", watch-import-variant: "\uE895", watch-variant: "\uE896", watch-vibrate: "\uE6B0", watch-vibrate-off: "\uECD9", water: "\uE58B", water-alert: "\uF501", water-alert-outline: "\uF502", water-boiler: "\uEF91", water-boiler-alert: "\uF1B2", water-boiler-off: "\uF1B3", water-check: "\uF503", water-check-outline: "\uF504", water-circle: "\uF805", water-minus: "\uF505", water-minus-outline: "\uF506", water-off: "\uE58C", water-off-outline: "\uF507", water-opacity: "\uF854", water-outline: "\uEE09", water-percent: "\uE58D", water-percent-alert: "\uF508", water-plus: "\uF509", water-plus-outline: "\uF50A", water-polo: "\uF29F", water-pump: "\uE58E", water-pump-off: "\uEF92", water-remove: "\uF50B", water-remove-outline: "\uF50C", water-sync: "\uF7C5", water-thermometer: "\uFA84", water-thermometer-outline: "\uFA85", water-well: "\uF06A", water-well-outline: "\uF06B", waterfall: "\uF848", watering-can: "\uF480", watering-can-outline: "\uF481", watermark: "\uE611", wave: "\uEF2D", waveform: "\uF47C", waves: "\uE78C", waves-arrow-left: "\uF858", waves-arrow-right: "\uF859", waves-arrow-up: "\uF85A", waze: "\uEBDD", weather-cloudy: "\uE58F", weather-cloudy-alert: "\uEF2E", weather-cloudy-arrow-right: "\uEE6D", weather-cloudy-clock: "\uF8F5", weather-fog: "\uE590", weather-hail: "\uE591", weather-hazy: "\uEF2F", weather-hurricane: "\uE897", weather-lightning: "\uE592", weather-lightning-rainy: "\uE67D", weather-night: "\uE593", weather-night-partly-cloudy: "\uEF30", weather-partly-cloudy: "\uE594", weather-partly-lightning: "\uEF31", weather-partly-rainy: "\uEF32", weather-partly-snowy: "\uEF33", weather-partly-snowy-rainy: "\uEF34", weather-pouring: "\uE595", weather-rainy: "\uE596", weather-snowy: "\uE597", weather-snowy-heavy: "\uEF35", weather-snowy-rainy: "\uE67E", weather-sunny: "\uE598", weather-sunny-alert: "\uEF36", weather-sunny-off: "\uF4E3", weather-sunset: "\uE599", weather-sunset-down: "\uE59A", weather-sunset-up: "\uE59B", weather-tornado: "\uEF37", weather-windy: "\uE59C", weather-windy-variant: "\uE59D", web: "\uE59E", web-box: "\uEF93", web-cancel: "\uF78F", web-check: "\uE788", web-clock: "\uF249", web-minus: "\uF09F", web-off: "\uEA8D", web-plus: "\uE032", web-refresh: "\uF790", web-remove: "\uE550", web-sync: "\uF791", webcam: "\uE59F", webcam-off: "\uF736", webhook: "\uE62E", webpack: "\uE72A", webrtc: "\uF247", wechat: "\uE610", weight: "\uE5A0", weight-gram: "\uED3E", weight-kilogram: "\uE5A1", weight-lifter: "\uF15C", weight-pound: "\uE9B4", whatsapp: "\uE5A2", wheel-barrow: "\uF4F1", wheelchair: "\uFA86", wheelchair-accessibility: "\uE5A3", whistle: "\uE9B5", whistle-outline: "\uF2BB", white-balance-auto: "\uE5A4", white-balance-incandescent: "\uE5A5", white-balance-iridescent: "\uE5A6", white-balance-sunny: "\uE5A7", widgets: "\uE72B", widgets-outline: "\uF354", wifi: "\uE5A8", wifi-alert: "\uF6B4", wifi-arrow-down: "\uF6B5", wifi-arrow-left: "\uF6B6", wifi-arrow-left-right: "\uF6B7", wifi-arrow-right: "\uF6B8", wifi-arrow-up: "\uF6B9", wifi-arrow-up-down: "\uF6BA", wifi-cancel: "\uF6BB", wifi-check: "\uF6BC", wifi-cog: "\uF6BD", wifi-lock: "\uF6BE", wifi-lock-open: "\uF6BF", wifi-marker: "\uF6C0", wifi-minus: "\uF6C1", wifi-off: "\uE5A9", wifi-plus: "\uF6C2", wifi-refresh: "\uF6C3", wifi-remove: "\uF6C4", wifi-settings: "\uF6C5", wifi-star: "\uEE0A", wifi-strength-1: "\uE91E", wifi-strength-1-alert: "\uE91F", wifi-strength-1-lock: "\uE920", wifi-strength-1-lock-open: "\uF6CA", wifi-strength-2: "\uE921", wifi-strength-2-alert: "\uE922", wifi-strength-2-lock: "\uE923", wifi-strength-2-lock-open: "\uF6CB", wifi-strength-3: "\uE924", wifi-strength-3-alert: "\uE925", wifi-strength-3-lock: "\uE926", wifi-strength-3-lock-open: "\uF6CC", wifi-strength-4: "\uE927", wifi-strength-4-alert: "\uE928", wifi-strength-4-lock: "\uE929", wifi-strength-4-lock-open: "\uF6CD", wifi-strength-alert-outline: "\uE92A", wifi-strength-lock-open-outline: "\uF6CE", wifi-strength-lock-outline: "\uE92B", wifi-strength-off: "\uE92C", wifi-strength-off-outline: "\uE92D", wifi-strength-outline: "\uE92E", wifi-sync: "\uF6C6", wikipedia: "\uE5AB", wind-power: "\uFA87", wind-power-outline: "\uFA88", wind-turbine: "\uEDA4", wind-turbine-alert: "\uF9AA", wind-turbine-check: "\uF9AB", window-close: "\uE5AC", window-closed: "\uE5AD", window-closed-variant: "\uF1DA", window-maximize: "\uE5AE", window-minimize: "\uE5AF", window-open: "\uE5B0", window-open-variant: "\uF1DB", window-restore: "\uE5B1", window-shutter: "\uF11B", window-shutter-alert: "\uF11C", window-shutter-cog: "\uFA89", window-shutter-open: "\uF11D", window-shutter-settings: "\uFA8A", windsock: "\uF5F9", wiper: "\uEAE8", wiper-wash: "\uEDA5", wiper-wash-alert: "\uF8DE", wizard-hat: "\uF476", wordpress: "\uE5B3", wrap: "\uE5B5", wrap-disabled: "\uEBDE", wrench: "\uE5B6", wrench-clock: "\uF9A2", wrench-outline: "\uEBDF", xamarin: "\uE844", xml: "\uE5BF", xmpp: "\uE7FE", yahoo: "\uEB4E", yeast: "\uE5C0", yin-yang: "\uE67F", yoga: "\uF17B", youtube: "\uE5C2", youtube-gaming: "\uE847", youtube-studio: "\uE846", youtube-subscription: "\uED3F", youtube-tv: "\uE447", yurt: "\uF515", z-wave: "\uEAE9", zend: "\uEAEA", zigbee: "\uED40", zip-box: "\uE5C3", zip-box-outline: "\uEFF9", zip-disk: "\uEA22", zodiac-aquarius: "\uEA7C", zodiac-aries: "\uEA7D", zodiac-cancer: "\uEA7E", zodiac-capricorn: "\uEA7F", zodiac-gemini: "\uEA80", zodiac-leo: "\uEA81", zodiac-libra: "\uEA82", zodiac-pisces: "\uEA83", zodiac-sagittarius: "\uEA84", zodiac-scorpio: "\uEA85", zodiac-taurus: "\uEA86", zodiac-virgo: "\uEA87" }
      # yamllint enable rule:line-length rule:braces

      ##### Nextion dict ####
      nextion:
        color:
          blue: [0, 128, 248]
          grey_dark: [40, 44, 40]
          grey_light: [128, 128, 128]
          grey_super_light: [200, 204, 200]
          grey_white: [225, 225, 225]
          red: [248, 0, 0]
          white: [255, 255, 255]
          yellow: [248, 248, 0]
          #### Colors from HA Style:
          green: [76, 175, 80]
          orange: [255, 152, 0]
          cyan: [0, 188, 212]
          deep_orange: [255, 87, 34]
          amber: [255, 193, 7]
          "on": !input icon_color_fallback_on
          "off": !input icon_color_fallback_off
          disabled: [189, 189, 189]
          unknown: [3, 6, 3]
          unavailable: [3, 6, 3]
        icon:
          domain:
            air_quality: "\uED42"              # mdi:air-filter
            alarm_control_panel: "\uE497"      # mdi:shield
            alert: "\uE025"                    # mdi:alert
            automation: "\uE6A8"               # mdi:robot
            binary_sensor: "\uE7C0"            # mdi:dip-switch
            button: "\uED76"                   # mdi:gesture-tap-hold
            calendar: "\uE0EC"                 # mdi:calendar
            camera: "\uE566"                   # mdi:video
            climate: "\uE392"                  # mdi:thermostat
            configurator: "\uE492"             # mdi:cog
            conversation: "\uE36B"             # mdi:microphone (HA uses mdi:microphone-message, not available for Nextion)
            counter: "\uE198"                  # mdi:counter
            cover: "\uE0AB"                    # mdi:blinds
            device_tracker: "\uF2A9"           # mdi:lan-check (I couldn't find the default icon in HA)
            event: "\uF2A7"                    # mdi:gesture-tap-button
            fan: "\uE20F"                      # mdi:fan
            datetime: "\uE0EF"                 # mdi:calendar-clock
            date: "\uE0EC"                     # mdi:calendar
            demo: "\uE7CF"                     # mdi:home-assistant
            google_assistant: "\uE7CC"         # mdi:google-assistant
            group: "\uE2B0"                    # mdi:google-circles-communities (This icon was deprecated by Google)
            homeassistant: "\uE7CF"            # mdi:home-assistant
            homekit: "\uE7D0"                  # mdi:home-utomation
            humidifier: "\uF098"               # mdi:air-humidifier
            image: "\uE2E8"                    # mdi:image
            image_processing: "\uE2F3"         # mdi:image-filter-frames
            input_boolean: "\uEA19"            # mdi:toggle-switch-outline
            input_button: "\uF2A7"             # mdi:gesture-tap-button (HA uses mdi:button-pointer, not available for Nextion)
            input_datetime: "\uE0EF"           # mdi:calendar-clock
            input_number: "\uE444"             # mdi:ray-vertex
            input_select: "\uE278"             # mdi:format-list-bulleted
            input_text: "\uE60D"               # mdi:form-textbox
            lawn_mower: "\uF1F6"               # mdi:robot-mower
            light: "\uE334"                    # mdi:lightbulb
            mailbox: "\uE6ED"                  # mdi:mailbox
            media_player: "\uE117"             # mdi:cast
            notify: "\uE17C"                   # mdi:comment-alert
            number: "\uE444"                   # mdi:ray-vertex
            persistent_notification: "\uE099"  # mdi:bell
            person: "\uE003"                   # mdi:account
            plant: "\uE249"                    # mdi:flower
            proximity: "\uE038"                # mdi:apple-safari
            remote: "\uE453"                   # mdi:remote
            scene: "\uE3D7"                    # mdi:palette
            schedule: "\uE0EF"                 # mdi:calendar-clock
            script: "\uEBC1"                   # mdi:script-text
            select: "\uE278"                   # mdi:format-list-bulleted
            sensor: "\uE207"                   # mdi:eye,
            simple_alarm: "\uE099"             # mdi:bell
            siren: "\uE0E5"                    # mdi:bullhorn
            stt: "\uE36B"                      # mdi:microphone (HA uses mdi:microphone-message, not available for Nextion)
            sun: '{{ "\uE598" if sun_is_up else "\uE593" }}'  # mdi:weather-sunny or mdi:weather-night
            switch: "\uE97D"                   # mdi:light-switch
            text: "\uE60D"                     # mdi:form-textbox
            todo: "\uF0D3"                     # mdi:clipboard-list
            time: "\uE953"                     # mdi:clock
            timer: "\uE51A"                    # mdi:timer-outline
            tts: "\uE4C2"                      # mdi:speaker (HA uses mdi:speaker-message, not available for Nextion)
            update: "\uE3D2"                   # mdi:package
            updater: "\uE166"                  # mdi:cloud-upload
            vacuum: "\uE70C"                   # mdi:robot-vacuum
            wake_word: "\uF2D0"                # mdi:chat-sleep
            weather: "\uEF34"                  # mdi:weather-partly-snowy-rainy
            zone: "\uE351"                     # mdi:map-marker-radius
            unknown: "\uE027"                  # mdi:alert-circle
          weather:
            lightning: "\uE592"   # mdi:weather-lightning
            protect: "\uF05C"     # mdi:shield-sun
            rain: "\uE595"        # mdi:weather-pouring
            sun: "\uE5A7"         # mdi:white-balance-sunny
            wind: "\uE59C"        # mdi:weather-windy
            gauge: "\uE299"       # mdi:gauge
          unknown: "\uE027"       # mdi:alert-circle
        pic:
          button:
            "off": 35
            "on": 36
          weather:
            sunny: '{{ 2 if sun_is_up else 15}}'  # some weather providers returns "sunny" for "clear-night"
            cloudy: 3
            rainy: 4
            pouring: 5
            snowy: 6
            hail: 7
            snowy_rainy: 7
            snowy-rainy: 7
            fog: 8
            windy: 9
            windy_variant: 9
            windy-variant: 9
            lightning: 10
            partlycloudy: '{{ 11 if sun_is_up else 12}}'
            lightning_rainy: '{{ 13 if sun_is_up else 14}}'
            lightning-rainy: '{{ 13 if sun_is_up else 14}}'
            execptional: '{{ 13 if sun_is_up else 14}}'
            clear_night: 15
            clear-night: 15
            unknown: 1
            unavailable: 1

      ##### MUI Multilingual User Interface #####
      language_tmp: !input 'language'
      language: >
        {{
          language_tmp
          if language_tmp is string
            and language_tmp in ["ar", "bg", "hr", "ca", "cs", "da", "nl", "et", "fi", "fr", "de", "el", "he", "hu", "id", "it",
                                "ja","ko", "lv", "lt", "nb", "pl", "pt", "ro", "ru", "sk", "sl", "es", "sv", "tr", "uk", "zh-tw"]
          else "en"
        }}

      mui:
        ar:     # Arabic
          bytes_per_char: 2
          weekdays:
            mon: الاثنين
            tue: الثلاثاء
            wed: الأربعاء
            thu: الخميس
            fri: الجمعة
            sat: السبت
            sun: الأحد
          weekdays_short:
            mon: اثن
            tue: ثلا
            wed: أرب
            thu: خمي
            fri: جمع
            sat: سبت
            sun: أحد
          months:
            jan: يناير
            feb: فبراير
            mar: مارس
            apr: أبريل
            may: مايو
            jun: يونيو
            jul: يوليو
            aug: أغسطس
            sep: سبتمبر
            oct: أكتوبر
            nov: نوفمبر
            dec: ديسمبر
          months_short:
            jan: ينا
            feb: فبر
            mar: مار
            apr: أبر
            may: ماي
            jun: يون
            jul: يول
            aug: أغس
            sep: سبت
            oct: أكت
            nov: نوف
            dec: ديس
          relative_day:
            today: اليوم
            tomorrow: غدًا
            in_2_days: بعد يومين
            in_3_days: بعد ثلاثة أيام
            in_4_days: بعد أربعة أيام
          climate:
            states:
              "on": مشغل
              "off": مطفأ
            heat: تدفئة
          please_confirm: يرجى التأكيد
          unavailable: غير متاح
          unknown: مجهول
          no_name: بدون اسم
          alarm:
            home: في المنزل
            away: بعيد
            night: ليل
            vacation: إجازة
            bypass: تجاوز
            disarm: نزع السلاح
          settings:
            reboot: إعادة تشغيل
            sleep: وضع النوم
            brightness: سطوع
            bright: مشرق
            dimming: تعتيم
            dim: خافت
          meridiem:
            am: صباحاً
            pm: مساءً
        bg:     # Bulgarian
          bytes_per_char: 1
          weekdays:
            mon: Понеделник
            tue: Вторник
            wed: Сряда
            thu: Четвъртък
            fri: Петък
            sat: Събота
            sun: Неделя
          weekdays_short:
            mon: Пон
            tue: Вто
            wed: Сря
            thu: Чет
            fri: Пет
            sat: Съб
            sun: Нед
          months:
            jan: Януари
            feb: Февруари
            mar: Март
            apr: Април
            may: Май
            jun: Юни
            jul: Юли
            aug: Август
            sep: Септември
            oct: Октомври
            nov: Ноември
            dec: Декември
          months_short:
            jan: Яну
            feb: Фев
            mar: Мар
            apr: Апр
            may: Май
            jun: Юни
            jul: Юли
            aug: Авг
            sep: Сеп
            oct: Окт
            nov: Ное
            dec: Дек
          relative_day:
            today: Днес
            tomorrow: Утре
            in_2_days: След 2 дни
            in_3_days: След 3 дни
            in_4_days: След 4 дни
          climate:
            states:
              "on": Включен
              "off": Изключен
            heat: Отопление
          please_confirm: Моля, потвърдете
          unavailable: Недостъпен
          unknown: Неизвестен
          no_name: Няма име
          alarm:
            home: Вкъщи
            away: Навън
            night: Нощ
            vacation: Ваканция
            bypass: Заобикаляне
            disarm: Разоръжаване
          settings:
            reboot: Рестартиране
            sleep: Сън
            brightness: Яркост
            bright: Ярък
            dimming: Затъмняване
            dim: Тъмен
          meridiem:
            am: AM
            pm: PM
        ca:     # Catalan
          bytes_per_char: 1
          weekdays:
            mon: Dilluns
            tue: Dimarts
            wed: Dimecres
            thu: Dijous
            fri: Divendres
            sat: Dissabte
            sun: Diumenge
          weekdays_short:
            mon: Dl
            tue: Dt
            wed: Dc
            thu: Dj
            fri: Dv
            sat: Ds
            sun: Dg
          months:
            jan: Gener
            feb: Febrer
            mar: Març
            apr: Abril
            may: Maig
            jun: Juny
            jul: Juliol
            aug: Agost
            sep: Setembre
            oct: Octubre
            nov: Novembre
            dec: Desembre
          months_short:
            jan: Gen
            feb: Feb
            mar: Mar
            apr: Abr
            may: Mai
            jun: Jun
            jul: Jul
            aug: Ago
            sep: Set
            oct: Oct
            nov: Nov
            dec: Des
          relative_day:
            today: Avui
            tomorrow: Demà
            in_2_days: En 2 dies
            in_3_days: En 3 dies
            in_4_days: En 4 dies
          climate:
            states:
              'on': Encès
              'off': Apagat
            heat: Escalfar
          please_confirm: Si us plau, confirmi
          unavailable: No disponible
          unknown: Desconegut
          no_name: Sense nom
          alarm:
            home: Casa
            away: Fora
            night: Nit
            vacation: Vacances
            bypass: Bypass
            disarm: Desactivar
          settings:
            reboot: Reiniciar
            sleep: Dormir
            brightness: Brillantor
            bright: Brillant
            dimming: Atenuació
            dim: Fosc
          meridiem:
            am: a.m.
            pm: p.m.
        cs:     # Czech
          bytes_per_char: 1
          weekdays:
            mon: Pondělí
            tue: Úterý
            wed: Středa
            thu: Čtvrtek
            fri: Pátek
            sat: Sobota
            sun: Neděle
          weekdays_short:
            mon: Po
            tue: Út
            wed: St
            thu: Čt
            fri: Pá
            sat: So
            sun: Ne
          months:
            jan: Leden
            feb: Únor
            mar: Březen
            apr: Duben
            may: Květen
            jun: Červen
            jul: Červenec
            aug: Srpen
            sep: Září
            oct: Říjen
            nov: Listopad
            dec: Prosinec
          months_short:
            jan: Led
            feb: Úno
            mar: Bře
            apr: Dub
            may: Kvě
            jun: Čvn
            jul: Čvc
            aug: Srp
            sep: Zář
            oct: Říj
            nov: Lis
            dec: Pro
          relative_day:
            today: Dnes
            tomorrow: Zítra
            in_2_days: Za 2 dny
            in_3_days: Za 3 dny
            in_4_days: Za 4 dny
          climate:
            states:
              "on": Zapnuto
              "off": Vypnuto
            heat: Topení
          please_confirm: Prosím, potvrďte
          unavailable: Nedostupné
          unknown: Neznámý
          no_name: Bez názvu
          alarm:
            home: Doma
            away: Pryč
            night: Noc
            vacation: Dovolená
            bypass: Obcházet
            disarm: Odjistit
          settings:
            reboot: Restart
            sleep: Spánek
            brightness: Jas
            bright: Světlý
            dimming: Ztmavení
            dim: Tmavý
          meridiem:
            am: dop.
            pm: odp.
        da:     # Danish
          bytes_per_char: 1
          weekdays:
            mon: Mandag
            tue: Tirsdag
            wed: Onsdag
            thu: Torsdag
            fri: Fredag
            sat: Lørdag
            sun: Søndag
          weekdays_short:
            mon: Man
            tue: Tir
            wed: Ons
            thu: Tor
            fri: Fre
            sat: Lør
            sun: Søn
          months:
            jan: Januar
            feb: Februar
            mar: Marts
            apr: April
            may: Maj
            jun: Juni
            jul: Juli
            aug: August
            sep: September
            oct: Oktober
            nov: November
            dec: December
          months_short:
            jan: Jan
            feb: Feb
            mar: Mar
            apr: Apr
            may: Maj
            jun: Jun
            jul: Jul
            aug: Aug
            sep: Sep
            oct: Okt
            nov: Nov
            dec: Dec
          relative_day:
            today: I dag
            tomorrow: I morgen
            in_2_days: Om 2 dage
            in_3_days: Om 3 dage
            in_4_days: Om 4 dage
          climate:
            states:
              "on": Tændt
              "off": Slukket
            heat: Varme
          please_confirm: Bekræft venligst
          unavailable: Utilgængelig
          unknown: Ukendt
          no_name: Intet navn
          alarm:
            home: Hjemme
            away: Væk
            night: Nat
            vacation: Ferie
            bypass: Omkørsel
            disarm: Afvæbne
          settings:
            reboot: Genstart
            sleep: Sove
            brightness: Lysstyrke
            bright: Lys
            dimming: Dæmpning
            dim: Dæmpet
          meridiem:
            am: FM
            pm: EM
        de:     # German
          bytes_per_char: 1
          weekdays:
            mon: Montag
            tue: Dienstag
            wed: Mittwoch
            thu: Donnerstag
            fri: Freitag
            sat: Samstag
            sun: Sonntag
          weekdays_short:
            mon: Mo
            tue: Di
            wed: Mi
            thu: Do
            fri: Fr
            sat: Sa
            sun: So
          months:
            jan: Januar
            feb: Februar
            mar: März
            apr: April
            may: Mai
            jun: Juni
            jul: Juli
            aug: August
            sep: September
            oct: Oktober
            nov: November
            dec: Dezember
          months_short:
            jan: Jan
            feb: Feb
            mar: Mär
            apr: Apr
            may: Mai
            jun: Jun
            jul: Jul
            aug: Aug
            sep: Sep
            oct: Okt
            nov: Nov
            dec: Dez
          relative_day:
            today: Heute
            tomorrow: Morgen
            in_2_days: In 2 Tagen
            in_3_days: In 3 Tagen
            in_4_days: In 4 Tagen
          climate:
            states:
              "on": Ein
              "off": Aus
            heat: Heizen
          please_confirm: Bitte bestätigen
          unavailable: Nicht verfügbar
          unknown: Unbekannt
          no_name: Kein Name
          alarm:
            home: Zuhause
            away: Abwesend
            night: Nacht
            vacation: Urlaub
            bypass: Umgehen
            disarm: Aus
          settings:
            reboot: Neustart
            sleep: Schlafmodus
            brightness: Helligkeit
            bright: Hell
            dimming: Dimmen
            dim: Gedimmt
          meridiem:
            am: vorm.
            pm: nachm.
        el:     # Greek
          bytes_per_char: 2
          weekdays:
            mon: Δευτέρα
            tue: Τρίτη
            wed: Τετάρτη
            thu: Πέμπτη
            fri: Παρασκευή
            sat: Σάββατο
            sun: Κυριακή
          weekdays_short:
            mon: Δευ
            tue: Τρι
            wed: Τετ
            thu: Πεμ
            fri: Παρ
            sat: Σαβ
            sun: Κυρ
          months:
            jan: Ιανουάριος
            feb: Φεβρουάριος
            mar: Μάρτιος
            apr: Απρίλιος
            may: Μάιος
            jun: Ιούνιος
            jul: Ιούλιος
            aug: Αύγουστος
            sep: Σεπτέμβριος
            oct: Οκτώβριος
            nov: Νοέμβριος
            dec: Δεκέμβριος
          months_short:
            jan: Ιαν
            feb: Φεβ
            mar: Μαρ
            apr: Απρ
            may: Μαι
            jun: Ιουν
            jul: Ιουλ
            aug: Αυγ
            sep: Σεπ
            oct: Οκτ
            nov: Νοε
            dec: Δεκ
          relative_day:
            today: Σήμερα
            tomorrow: Αύριο
            in_2_days: σε 2 ημέρες
            in_3_days: σε 3 ημέρες
            in_4_days: σε 4 ημέρες
          climate:
            states:
              "on": Ενεργό
              "off": Ανενεργό
            heat: Θέρμανση
          please_confirm: Παρακαλώ επιβεβαιώστε
          unavailable: Μη διαθέσιμο
          unknown: Άγνωστο
          no_name: Χωρίς όνομα
          alarm:
            home: Σπίτι
            away: Μακριά
            night: Νύχτα
            vacation: Διακοπές
            bypass: Παράκαμψη
            disarm: Αφοπλισμός
          settings:
            reboot: Επανεκκίνηση
            sleep: Ύπνος
            brightness: Φωτεινότητα
            bright: Φωτεινό
            dimming: Σκίαση
            dim: Σκοτεινό
          meridiem:
            am: πμ
            pm: μμ
        en:     # English
          bytes_per_char: 1
          weekdays:
            mon: Monday
            tue: Tuesday
            wed: Wednesday
            thu: Thursday
            fri: Friday
            sat: Saturday
            sun: Sunday
          weekdays_short:
            mon: Mon
            tue: Tue
            wed: Wed
            thu: Thu
            fri: Fri
            sat: Sat
            sun: Sun
          months:
            jan: January
            feb: February
            mar: March
            apr: April
            may: May
            jun: June
            jul: July
            aug: August
            sep: September
            oct: October
            nov: November
            dec: December
          months_short:
            jan: Jan
            feb: Feb
            mar: Mar
            apr: Apr
            may: May
            jun: Jun
            jul: Jul
            aug: Aug
            sep: Sep
            oct: Oct
            nov: Nov
            dec: Dec
          relative_day:
            today: Today
            tomorrow: Tomorrow
            in_2_days: In 2 days
            in_3_days: In 3 days
            in_4_days: In 4 days
          climate:
            states:
              "on": "on"
              "off": "off"
            heat: heat
          please_confirm: Please confirm
          unavailable: Unavailable
          unknown: Unknown
          no_name: No name
          alarm:
            home: Home
            away: Away
            night: Night
            vacation: Holiday
            bypass: Custom bypass
            disarm: Disarm
          settings:
            reboot: Reboot
            sleep: Sleep mode
            brightness: Brightness
            bright: Bright
            dimming: Dimming
            dim: Dim
          meridiem:
            am: AM
            pm: PM
        es:     # Spanish
          bytes_per_char: 1
          weekdays:
            mon: Lunes
            tue: Martes
            wed: Miércoles
            thu: Jueves
            fri: Viernes
            sat: Sábado
            sun: Domingo
          weekdays_short:
            mon: Lun
            tue: Mar
            wed: Mié
            thu: Jue
            fri: Vie
            sat: Sáb
            sun: Dom
          months:
            jan: Enero
            feb: Febrero
            mar: Marzo
            apr: Abril
            may: Mayo
            jun: Junio
            jul: Julio
            aug: Agosto
            sep: Septiembre
            oct: Octubre
            nov: Noviembre
            dec: Diciembre
          months_short:
            jan: Ene
            feb: Feb
            mar: Mar
            apr: Abr
            may: May
            jun: Jun
            jul: Jul
            aug: Ago
            sep: Sep
            oct: Oct
            nov: Nov
            dec: Dic
          relative_day:
            today: Hoy
            tomorrow: Mañana
            in_2_days: En 2 días
            in_3_days: En 3 días
            in_4_days: En 4 días
          climate:
            states:
              "on": Encendido
              "off": Apagado
            heat: Calentar
          please_confirm: Por favor, confirme
          unavailable: No disponible
          unknown: Desconocido
          no_name: Sin nombre
          alarm:
            home: Casa
            away: Fuera
            night: Noche
            vacation: Vacaciones
            bypass: Bypass
            disarm: Desarmar
          settings:
            reboot: Reiniciar
            sleep: Dormir
            brightness: Brillo
            bright: Brillante
            dimming: Atenuación
            dim: Oscuro
          meridiem:
            am: a.m.
            pm: p.m.
        et:     # Estonian
          bytes_per_char: 1
          weekdays:
            mon: Esmaspäev
            tue: Teisipäev
            wed: Kolmapäev
            thu: Neljapäev
            fri: Reede
            sat: Laupäev
            sun: Pühapäev
          weekdays_short:
            mon: E
            tue: T
            wed: K
            thu: N
            fri: R
            sat: L
            sun: P
          months:
            jan: Jaanuar
            feb: Veebruar
            mar: Märts
            apr: Aprill
            may: Mai
            jun: Juuni
            jul: Juuli
            aug: August
            sep: September
            oct: Oktoober
            nov: November
            dec: Detsember
          months_short:
            jan: Jan
            feb: Veb
            mar: Mär
            apr: Apr
            may: Mai
            jun: Jun
            jul: Jul
            aug: Aug
            sep: Sep
            oct: Okt
            nov: Nov
            dec: Dets
          relative_day:
            today: Täna
            tomorrow: Homme
            in_2_days: 2 päeva pärast
            in_3_days: 3 päeva pärast
            in_4_days: 4 päeva pärast
          climate:
            states:
              "on": sees
              "off": väljas
            heat: kütte
          please_confirm: Palun kinnitage
          unavailable: Pole saadaval
          unknown: Tundmatu
          no_name: Nime pole
          alarm:
            home: Kodus
            away: Ära
            night: Öö
            vacation: Puhkus
            bypass: Möödaviik
            disarm: Desarmeerima
          settings:
            reboot: Taaskäivita
            sleep: Uni
            brightness: Heledus
            bright: Ere
            dimming: Hämardamine
            dim: Hämar
          meridiem:
            am: e.l.
            pm: p.l.
        fi:     # Finnish
          bytes_per_char: 1
          weekdays:
            mon: maanantai
            tue: tiistai
            wed: keskiviikko
            thu: torstai
            fri: perjantai
            sat: lauantai
            sun: sunnuntai
          weekdays_short:
            mon: ma
            tue: ti
            wed: ke
            thu: to
            fri: pe
            sat: la
            sun: su
          months:
            jan: tammikuu
            feb: helmikuu
            mar: maaliskuu
            apr: huhtikuu
            may: toukokuu
            jun: kesäkuu
            jul: heinäkuu
            aug: elokuu
            sep: syyskuu
            oct: lokakuu
            nov: marraskuu
            dec: joulukuu
          months_short:
            jan: tammi
            feb: helmi
            mar: maalis
            apr: huhti
            may: touko
            jun: kesä
            jul: heinä
            aug: elo
            sep: syys
            oct: loka
            nov: marras
            dec: joulu
          relative_day:
            today: Tänään
            tomorrow: Huomenna
            in_2_days: 2 päivän päästä
            in_3_days: 3 päivän päästä
            in_4_days: 4 päivän päästä
          climate:
            states:
              "on": päällä
              "off": pois päältä
            heat: lämpö
          please_confirm: Vahvista
          unavailable: Ei saatavilla
          unknown: Tuntematon
          no_name: Nimeämätön
          alarm:
            home: Kotona
            away: Poissa
            night: Yö
            vacation: Loma
            bypass: Ohitus
            disarm: Pois päältä
          settings:
            reboot: Käynnistä uudelleen
            sleep: Lepotila
            brightness: Kirkkaus
            bright: Kirkas
            dimming: Himmennys
            dim: Himmeä
          meridiem:
            am: aamupäivä
            pm: iltapäivä
        fr:     # French
          bytes_per_char: 1
          weekdays:
            mon: Lundi
            tue: Mardi
            wed: Mercredi
            thu: Jeudi
            fri: Vendredi
            sat: Samedi
            sun: Dimanche
          weekdays_short:
            mon: Lun
            tue: Mar
            wed: Mer
            thu: Jeu
            fri: Ven
            sat: Sam
            sun: Dim
          months:
            jan: Janvier
            feb: Février
            mar: Mars
            apr: Avril
            may: Mai
            jun: Juin
            jul: Juillet
            aug: Août
            sep: Septembre
            oct: Octobre
            nov: Novembre
            dec: Décembre
          months_short:
            jan: Jan
            feb: Fév
            mar: Mar
            apr: Avr
            may: Mai
            jun: Jun
            jul: Jul
            aug: Aoû
            sep: Sep
            oct: Oct
            nov: Nov
            dec: Déc
          relative_day:
            today: Aujourd'hui
            tomorrow: Demain
            in_2_days: Dans 2 jours
            in_3_days: Dans 3 jours
            in_4_days: Dans 4 jours
          climate:
            states:
              "on": Activé
              "off": Désactivé
            heat: Chauffage
          please_confirm: Veuillez confirmer
          unavailable: Indisponible
          unknown: Inconnu
          no_name: Sans nom
          alarm:
            home: À la maison
            away: Absent
            night: Nuit
            vacation: Vacances
            bypass: Contournement
            disarm: Désarmer
          settings:
            reboot: Redémarrer
            sleep: Veille
            brightness: Luminosité
            bright: Lumineux
            dimming: Atténuation
            dim: Sombre
          meridiem:
            am: AM
            pm: PM
        he:     # Hebrew
          bytes_per_char: 2
          weekdays:
            mon: ינש
            tue: ישילש
            wed: יעיבר
            thu: ישימח
            fri: ישיש
            sat: תבש
            sun: ןושאר
          weekdays_short:
            mon: ב'
            tue: ג'
            wed: ד'
            thu: ה'
            fri: ו'
            sat: ש'
            sun: א'
          months:
            jan: נאוני
            feb: ראורבפ
            mar: ץרמ
            apr: לירפא
            may: יאמ
            jun: ינוי
            jul: ילוי
            aug: טסוגוא
            sep: רבמטפס
            oct: רבוטקוא
            nov: רבמבונ
            dec: רבמצד
          months_short:
            jan: וני'
            feb: רבפ'
            mar: ץרמ
            apr: רפא'
            may: יאמ
            jun: נוי'
            jul: לוי'
            aug: גוא'
            sep: טפס'
            oct: קוא'
            nov: בונ'
            dec: מצד'
          relative_day:
            today: םויה
            tomorrow: רחמ
            in_2_days: םיימוי דוע
            in_3_days: םימי 3 דוע
            in_4_days: םימי 4 דוע
          climate:
            states:
              "on": ליעפ
              "off": יובכ
            heat: םומיח
          please_confirm: רשא אנא
          unavailable: ןימז אל
          unknown: עודי אל
          no_name: םש אלל
          alarm:
            home: תיבב
            away: הצוחה
            night: הליל
            vacation: השפוח
            bypass: הפיקע
            disarm: לורטנ
          settings:
            reboot: שדחמ הלעפה
            sleep: הניש
            brightness: תוריהב
            bright: ריהב
            dimming: הכשחה
            dim: ההכ
          meridiem:
            am: צ"הנפל
            pm: צ"החא
        hr:     # Croatian
          bytes_per_char: 1
          weekdays:
            mon: Ponedjeljak
            tue: Utorak
            wed: Srijeda
            thu: Četvrtak
            fri: Petak
            sat: Subota
            sun: Nedjelja
          weekdays_short:
            mon: Pon
            tue: Uto
            wed: Sri
            thu: Čet
            fri: Pet
            sat: Sub
            sun: Ned
          months:
            jan: Siječanj
            feb: Veljača
            mar: Ožujak
            apr: Travanj
            may: Svibanj
            jun: Lipanj
            jul: Srpanj
            aug: Kolovoz
            sep: Rujan
            oct: Listopad
            nov: Studeni
            dec: Prosinac
          months_short:
            jan: Sij
            feb: Velj
            mar: Ožu
            apr: Tra
            may: Svi
            jun: Lip
            jul: Srp
            aug: Kol
            sep: Ruj
            oct: Lis
            nov: Stu
            dec: Pro
          relative_day:
            today: Danas
            tomorrow: Sutra
            in_2_days: Za 2 dana
            in_3_days: Za 3 dana
            in_4_days: Za 4 dana
          climate:
            states:
              "on": Uključeno
              "off": Isključeno
            heat: Grijanje
          please_confirm: Molimo potvrdite
          unavailable: Nedostupno
          unknown: Nepoznato
          no_name: Bez imena
          alarm:
            home: Kod kuće
            away: Odsutan
            night: Noć
            vacation: Odmor
            bypass: Zaobići
            disarm: Razoružati
          settings:
            reboot: Ponovno pokretanje
            sleep: Spavanje
            brightness: Svjetlina
            bright: Svijetlo
            dimming: Zatamnjenje
            dim: Tamno
          meridiem:
            am: AM
            pm: PM
        hu:     # Hungarian
          bytes_per_char: 1
          weekdays:
            mon: Hétfő
            tue: Kedd
            wed: Szerda
            thu: Csütörtök
            fri: Péntek
            sat: Szombat
            sun: Vasárnap
          weekdays_short:
            mon: H
            tue: K
            wed: Sze
            thu: Cs
            fri: P
            sat: Szo
            sun: V
          months:
            jan: Január
            feb: Február
            mar: Március
            apr: Április
            may: Május
            jun: Június
            jul: Július
            aug: Augusztus
            sep: Szeptember
            oct: Október
            nov: November
            dec: December
          months_short:
            jan: Jan
            feb: Feb
            mar: Márc
            apr: Ápr
            may: Máj
            jun: Jún
            jul: Júl
            aug: Aug
            sep: Szep
            oct: Okt
            nov: Nov
            dec: Dec
          relative_day:
            today: Ma
            tomorrow: Holnap
            in_2_days: 2 nap múlva
            in_3_days: 3 nap múlva
            in_4_days: 4 nap múlva
          climate:
            states:
              "on": Bekapcsolva
              "off": Kikapcsolva
            heat: Fűtés
          please_confirm: Kérjük, erősítse meg
          unavailable: Nem elérhető
          unknown: Ismeretlen
          no_name: Névtelen
          alarm:
            home: Otthon
            away: Távol
            night: Éjszaka
            vacation: Szabadság
            bypass: Kerülő
            disarm: Hatástalanítás
          settings:
            reboot: Újraindítás
            sleep: Alvás
            brightness: Fényerő
            bright: Világos
            dimming: Sötétítés
            dim: Sötét
          meridiem:
            am: DE
            pm: DU
        id:     # Indonesian
          bytes_per_char: 1
          weekdays:
            mon: Senin
            tue: Selasa
            wed: Rabu
            thu: Kamis
            fri: Jumat
            sat: Sabtu
            sun: Minggu
          weekdays_short:
            mon: Sen
            tue: Sel
            wed: Rab
            thu: Kam
            fri: Jum
            sat: Sab
            sun: Min
          months:
            jan: Januari
            feb: Februari
            mar: Maret
            apr: April
            may: Mei
            jun: Juni
            jul: Juli
            aug: Agustus
            sep: September
            oct: Oktober
            nov: November
            dec: Desember
          months_short:
            jan: Jan
            feb: Feb
            mar: Mar
            apr: Apr
            may: Mei
            jun: Jun
            jul: Jul
            aug: Agu
            sep: Sep
            oct: Okt
            nov: Nov
            dec: Des
          relative_day:
            today: Hari ini
            tomorrow: Besok
            in_2_days: Dalam 2 hari
            in_3_days: Dalam 3 hari
            in_4_days: Dalam 4 hari
          climate:
            states:
              "on": Menyala
              "off": Mati
            heat: Pemanas
          please_confirm: Mohon konfirmasi
          unavailable: Tidak tersedia
          unknown: Tidak diketahui
          no_name: Tanpa nama
          alarm:
            home: Di rumah
            away: Jauh
            night: Malam
            vacation: Liburan
            bypass: Bypass
            disarm: Menonaktifkan
          settings:
            reboot: Mulai ulang
            sleep: Tidur
            brightness: Kecerahan
            bright: Terang
            dimming: Redup
            dim: Redup
          meridiem:
            am: AM
            pm: PM
        it:     # Italian
          bytes_per_char: 1
          weekdays:
            mon: Lunedì
            tue: Martedì
            wed: Mercoledì
            thu: Giovedì
            fri: Venerdì
            sat: Sabato
            sun: Domenica
          weekdays_short:
            mon: Lun
            tue: Mar
            wed: Mer
            thu: Gio
            fri: Ven
            sat: Sab
            sun: Dom
          months:
            jan: Gennaio
            feb: Febbraio
            mar: Marzo
            apr: Aprile
            may: Maggio
            jun: Giugno
            jul: Luglio
            aug: Agosto
            sep: Settembre
            oct: Ottobre
            nov: Novembre
            dec: Dicembre
          months_short:
            jan: Gen
            feb: Feb
            mar: Mar
            apr: Apr
            may: Mag
            jun: Giu
            jul: Lug
            aug: Ago
            sep: Set
            oct: Ott
            nov: Nov
            dec: Dic
          relative_day:
            today: Oggi
            tomorrow: Domani
            in_2_days: Dopodomani
            in_3_days: In 3 giorni
            in_4_days: In 4 giorni
          climate:
            states:
              "on": Acceso
              "off": Spento
            heat: Riscaldamento
          please_confirm: Confermare
          unavailable: Non disponibile
          unknown: Sconosciuto
          no_name: Senza nome
          alarm:
            home: Casa
            away: Fuori casa
            night: Notte
            vacation: Vacanza
            bypass: Bypass
            disarm: Disarmato
          settings:
            reboot: Riavvio
            sleep: Modalità ECO
            brightness: Luminosità
            bright: Luminoso
            dimming: Diminuzione
            dim: Diminuito
          meridiem:
            am: AM
            pm: PM
        ja:     # Japanese
          bytes_per_char: 3
          weekdays:
            mon: 月曜日
            tue: 火曜日
            wed: 水曜日
            thu: 木曜日
            fri: 金曜日
            sat: 土曜日
            sun: 日曜日
          weekdays_short:
            mon: 月
            tue: 火
            wed: 水
            thu: 木
            fri: 金
            sat: 土
            sun: 日
          months:
            jan: 1月
            feb: 2月
            mar: 3月
            apr: 4月
            may: 5月
            jun: 6月
            jul: 7月
            aug: 8月
            sep: 9月
            oct: 10月
            nov: 11月
            dec: 12月
          months_short:
            jan: 1月
            feb: 2月
            mar: 3月
            apr: 4月
            may: 5月
            jun: 6月
            jul: 7月
            aug: 8月
            sep: 9月
            oct: 10月
            nov: 11月
            dec: 12月
          relative_day:
            today: 今日
            tomorrow: 明日
            in_2_days: 明後日
            in_3_days: 3日後
            in_4_days: 4日後
          climate:
            states:
              "on": オン
              "off": オフ
            heat: 暖房
          please_confirm: 確認してください
          unavailable: 利用不可
          unknown: 不明
          no_name: 名前なし
          alarm:
            home: 自宅
            away: 外出
            night: 夜間
            vacation: 休暇
            bypass: バイパス
            disarm: 解除
          settings:
            reboot: 再起動
            sleep: スリープモード
            brightness: 明るさ
            bright: 明るい
            dimming: 調光
            dim: 低輝度
          meridiem:
            am: 午前
            pm: 午後
        ko:     # Korean
          bytes_per_char: 3
          weekdays:
            mon: 월요일
            tue: 화요일
            wed: 수요일
            thu: 목요일
            fri: 금요일
            sat: 토요일
            sun: 일요일
          weekdays_short:
            mon: 월
            tue: 화
            wed: 수
            thu: 목
            fri: 금
            sat: 토
            sun: 일
          months:
            jan: 1월
            feb: 2월
            mar: 3월
            apr: 4월
            may: 5월
            jun: 6월
            jul: 7월
            aug: 8월
            sep: 9월
            oct: 10월
            nov: 11월
            dec: 12월
          months_short:
            jan: 1월
            feb: 2월
            mar: 3월
            apr: 4월
            may: 5월
            jun: 6월
            jul: 7월
            aug: 8월
            sep: 9월
            oct: 10월
            nov: 11월
            dec: 12월
          relative_day:
            today: 오늘
            tomorrow: 내일
            in_2_days: 이틀 후
            in_3_days: 사흘 후
            in_4_days: 나흘 후
          climate:
            states:
              "on": 켜짐
              "off": 꺼짐
            heat: 난방
          please_confirm: 확인해 주세요
          unavailable: 사용 불가
          unknown: 알 수 없음
          no_name: 이름 없음
          alarm:
            home: 집
            away: 외출
            night: 밤
            vacation: 휴가
            bypass: 우회
            disarm: 해제
          settings:
            reboot: 재부팅
            sleep: 슬립 모드
            brightness: 밝기
            bright: 밝은
            dimming: 조광
            dim: 어두운
          meridiem:
            am: 오전
            pm: 오후
        lt:     # Lithuanian
          bytes_per_char: 1
          weekdays:
            mon: Pirmadienis
            tue: Antradienis
            wed: Trečiadienis
            thu: Ketvirtadienis
            fri: Penktadienis
            sat: Šeštadienis
            sun: Sekmadienis
          weekdays_short:
            mon: Pir
            tue: Ant
            wed: Tre
            thu: Ket
            fri: Pen
            sat: Šeš
            sun: Sek
          months:
            jan: Sausis
            feb: Vasaris
            mar: Kovas
            apr: Balandis
            may: Gegužė
            jun: Birželis
            jul: Liepa
            aug: Rugpjūtis
            sep: Rugsėjis
            oct: Spalis
            nov: Lapkritis
            dec: Gruodis
          months_short:
            jan: Sau
            feb: Vas
            mar: Kov
            apr: Bal
            may: Geg
            jun: Bir
            jul: Lie
            aug: Rgp
            sep: Rgs
            oct: Spa
            nov: Lap
            dec: Gru
          relative_day:
            today: Šiandien
            tomorrow: Rytoj
            in_2_days: Po 2 dienų
            in_3_days: Po 3 dienų
            in_4_days: Po 4 dienų
          climate:
            states:
              "on": Įjungta
              "off": Išjungta
            heat: Šildymas
          please_confirm: Prašome patvirtinti
          unavailable: Nepasiekiamas
          unknown: Nežinomas
          no_name: Be pavadinimo
          alarm:
            home: Namuose
            away: Išvykęs
            night: Naktis
            vacation: Atostogos
            bypass: Apeiti
            disarm: Išjungti
          settings:
            reboot: Perkrauti
            sleep: Miego režimas
            brightness: Ryškumas
            bright: Ryškus
            dimming: Tamsinimas
            dim: Tamsus
          meridiem:
            am: AM
            pm: PM
        lv:     # Latvian
          bytes_per_char: 1
          weekdays:
            mon: Pirmdiena
            tue: Otrdiena
            wed: Trešdiena
            thu: Ceturtdiena
            fri: Piektdiena
            sat: Sestdiena
            sun: Svētdiena
          weekdays_short:
            mon: Pir
            tue: Otr
            wed: Tre
            thu: Cet
            fri: Pie
            sat: Ses
            sun: Sve
          months:
            jan: Janvāris
            feb: Februāris
            mar: Marts
            apr: Aprīlis
            may: Maijs
            jun: Jūnijs
            jul: Jūlijs
            aug: Augusts
            sep: Septembris
            oct: Oktobris
            nov: Novembris
            dec: Decembris
          months_short:
            jan: Jan
            feb: Feb
            mar: Mar
            apr: Apr
            may: Mai
            jun: Jūn
            jul: Jūl
            aug: Aug
            sep: Sep
            oct: Okt
            nov: Nov
            dec: Dec
          relative_day:
            today: Šodien
            tomorrow: Rīt
            in_2_days: Pēc 2 dienām
            in_3_days: Pēc 3 dienām
            in_4_days: Pēc 4 dienām
          climate:
            states:
              "on": Ieslēgts
              "off": Izslēgts
            heat: Apkure
          please_confirm: Lūdzu, apstipriniet
          unavailable: Nav pieejams
          unknown: Nezināms
          no_name: Bez nosaukuma
          alarm:
            home: Mājās
            away: Projām
            night: Nakts
            vacation: Atvaļinājums
            bypass: Aplūkošana
            disarm: Atbruņošana
          settings:
            reboot: Restartēt
            sleep: Miega režīms
            brightness: Spilgtums
            bright: Spilgts
            dimming: Tumšošana
            dim: Tumšs
          meridiem:
            am: AM
            pm: PM
        nb:     # Norwegian Bokmål
          bytes_per_char: 1
          weekdays:
            mon: Mandag
            tue: Tirsdag
            wed: Onsdag
            thu: Torsdag
            fri: Fredag
            sat: Lørdag
            sun: Søndag
          weekdays_short:
            mon: Man
            tue: Tir
            wed: Ons
            thu: Tor
            fri: Fre
            sat: Lør
            sun: Søn
          months:
            jan: Januar
            feb: Februar
            mar: Mars
            apr: April
            may: Mai
            jun: Juni
            jul: Juli
            aug: August
            sep: September
            oct: Oktober
            nov: November
            dec: Desember
          months_short:
            jan: Jan
            feb: Feb
            mar: Mar
            apr: Apr
            may: Mai
            jun: Jun
            jul: Jul
            aug: Aug
            sep: Sep
            oct: Okt
            nov: Nov
            dec: Des
          relative_day:
            today: I dag
            tomorrow: I morgen
            in_2_days: Om 2 dager
            in_3_days: Om 3 dager
            in_4_days: Om 4 dager
          climate:
            states:
              "on": På
              "off": Av
            heat: Varme
          please_confirm: Vennligst bekreft
          unavailable: Utilgjengelig
          unknown: Ukjent
          no_name: Ingen navn
          alarm:
            home: Hjemme
            away: Borte
            night: Natt
            vacation: Ferie
            bypass: Omkjøring
            disarm: Avvæpne
          settings:
            reboot: Start på nytt
            sleep: Søvnmodus
            brightness: Lysstyrke
            bright: Lys
            dimming: Demping
            dim: Dimmet
          meridiem:
            am: AM
            pm: PM
        nl:     # Dutch
          bytes_per_char: 1
          weekdays:
            mon: Maandag
            tue: Dinsdag
            wed: Woensdag
            thu: Donderdag
            fri: Vrijdag
            sat: Zaterdag
            sun: Zondag
          weekdays_short:
            mon: Ma
            tue: Di
            wed: Wo
            thu: Do
            fri: Vr
            sat: Za
            sun: Zo
          months:
            jan: Januari
            feb: Februari
            mar: Maart
            apr: April
            may: Mei
            jun: Juni
            jul: Juli
            aug: Augustus
            sep: September
            oct: Oktober
            nov: November
            dec: December
          months_short:
            jan: Jan
            feb: Feb
            mar: Mrt
            apr: Apr
            may: Mei
            jun: Jun
            jul: Jul
            aug: Aug
            sep: Sep
            oct: Okt
            nov: Nov
            dec: Dec
          relative_day:
            today: Vandaag
            tomorrow: Morgen
            in_2_days: Overmorgen
            in_3_days: Over 3 dagen
            in_4_days: Over 4 dagen
          climate:
            states:
              "on": Aan
              "off": Uit
            heat: Verwarming
          please_confirm: Bevestig alstublieft
          unavailable: Niet beschikbaar
          unknown: Onbekend
          no_name: Geen naam
          alarm:
            home: Thuis
            away: Weg
            night: Nacht
            vacation: Vakantie
            bypass: Omzeilen
            disarm: Uit
          settings:
            reboot: Herstarten
            sleep: Slaapstand
            brightness: Helderheid
            bright: Helder
            dimming: Dimmen
            dim: Gedimd
          meridiem:
            am: AM
            pm: PM
        pl:     # Polish
          bytes_per_char: 1
          weekdays:
            mon: Poniedziałek
            tue: Wtorek
            wed: Środa
            thu: Czwartek
            fri: Piątek
            sat: Sobota
            sun: Niedziela
          weekdays_short:
            mon: Pon
            tue: Wt
            wed: Śr
            thu: Czw
            fri: Pt
            sat: Sob
            sun: Ndz
          months:
            jan: Styczeń
            feb: Luty
            mar: Marzec
            apr: Kwiecień
            may: Maj
            jun: Czerwiec
            jul: Lipiec
            aug: Sierpień
            sep: Wrzesień
            oct: Październik
            nov: Listopad
            dec: Grudzień
          months_short:
            jan: Sty
            feb: Lut
            mar: Mar
            apr: Kwi
            may: Maj
            jun: Cze
            jul: Lip
            aug: Sie
            sep: Wrz
            oct: Paź
            nov: Lis
            dec: Gru
          relative_day:
            today: Dzisiaj
            tomorrow: Jutro
            in_2_days: Za 2 dni
            in_3_days: Za 3 dni
            in_4_days: Za 4 dni
          climate:
            states:
              "on": Włączony
              "off": Wyłączony
            heat: Ogrzewanie
          please_confirm: Proszę potwierdzić
          unavailable: Niedostępny
          unknown: Nieznany
          no_name: Bez nazwy
          alarm:
            home: W domu
            away: Poza domem
            night: Noc
            vacation: Wakacje
            bypass: Obejście
            disarm: Rozbroić
          settings:
            reboot: Restart
            sleep: Tryb uśpienia
            brightness: Jasność
            bright: Jasny
            dimming: Ściemnianie
            dim: Ciemny
          meridiem:
            am: AM
            pm: PM
        pt:     # Portuguese
          bytes_per_char: 1
          weekdays:
            mon: Segunda-feira
            tue: Terça-feira
            wed: Quarta-feira
            thu: Quinta-feira
            fri: Sexta-feira
            sat: Sábado
            sun: Domingo
          weekdays_short:
            mon: Seg
            tue: Ter
            wed: Qua
            thu: Qui
            fri: Sex
            sat: Sáb
            sun: Dom
          months:
            jan: Janeiro
            feb: Fevereiro
            mar: Março
            apr: Abril
            may: Maio
            jun: Junho
            jul: Julho
            aug: Agosto
            sep: Setembro
            oct: Outubro
            nov: Novembro
            dec: Dezembro
          months_short:
            jan: Jan
            feb: Fev
            mar: Mar
            apr: Abr
            may: Mai
            jun: Jun
            jul: Jul
            aug: Ago
            sep: Set
            oct: Out
            nov: Nov
            dec: Dez
          relative_day:
            today: Hoje
            tomorrow: Amanhã
            in_2_days: Em 2 dias
            in_3_days: Em 3 dias
            in_4_days: Em 4 dias
          climate:
            states:
              "on": Ligado
              "off": Desligado
            heat: Aquecimento
          please_confirm: Por favor, confirme
          unavailable: Indisponível
          unknown: Desconhecido
          no_name: Sem nome
          alarm:
            home: Em casa
            away: Ausente
            night: Noturno
            vacation: Férias
            bypass: Desvio
            disarm: Desarmar
          settings:
            reboot: Reiniciar
            sleep: Dormir
            brightness: Brilho
            bright: Claro
            dimming: Escurecimento
            dim: Escuro
          meridiem:
            am: AM
            pm: PM
        ro:     # Romanian
          bytes_per_char: 1
          weekdays:
            mon: Luni
            tue: Marți
            wed: Miercuri
            thu: Joi
            fri: Vineri
            sat: Sâmbătă
            sun: Duminică
          weekdays_short:
            mon: Lun
            tue: Mar
            wed: Mie
            thu: Joi
            fri: Vin
            sat: Sâm
            sun: Dum
          months:
            jan: Ianuarie
            feb: Februarie
            mar: Martie
            apr: Aprilie
            may: Mai
            jun: Iunie
            jul: Iulie
            aug: August
            sep: Septembrie
            oct: Octombrie
            nov: Noiembrie
            dec: Decembrie
          months_short:
            jan: Ian
            feb: Feb
            mar: Mar
            apr: Apr
            may: Mai
            jun: Iun
            jul: Iul
            aug: Aug
            sep: Sep
            oct: Oct
            nov: Nov
            dec: Dec
          relative_day:
            today: Astăzi
            tomorrow: Mâine
            in_2_days: În 2 zile
            in_3_days: În 3 zile
            in_4_days: În 4 zile
          climate:
            states:
              "on": Pornit
              "off": Oprit
            heat: Încălzire
          please_confirm: Vă rugăm să confirmați
          unavailable: Indisponibil
          unknown: Necunoscut
          no_name: Fără nume
          alarm:
            home: Acasă
            away: Plecat
            night: Noapte
            vacation: Vacanță
            bypass: Ocolire
            disarm: Dezarmare
          settings:
            reboot: Repornire
            sleep: Somn
            brightness: Luminozitate
            bright: Luminos
            dimming: Diminuare
            dim: Întunecat
          meridiem:
            am: AM
            pm: PM
        ru:     # Russian
          bytes_per_char: 2
          weekdays:
            mon: Понедельник
            tue: Вторник
            wed: Среда
            thu: Четверг
            fri: Пятница
            sat: Суббота
            sun: Воскресенье
          weekdays_short:
            mon: Пн
            tue: Вт
            wed: Ср
            thu: Чт
            fri: Пт
            sat: Сб
            sun: Вс
          months:
            jan: Январь
            feb: Февраль
            mar: Март
            apr: Апрель
            may: Май
            jun: Июнь
            jul: Июль
            aug: Август
            sep: Сентябрь
            oct: Октябрь
            nov: Ноябрь
            dec: Декабрь
          months_short:
            jan: Янв
            feb: Фев
            mar: Мар
            apr: Апр
            may: Май
            jun: Июн
            jul: Июл
            aug: Авг
            sep: Сен
            oct: Окт
            nov: Ноя
            dec: Дек
          relative_day:
            today: Сегодня
            tomorrow: Завтра
            in_2_days: Через 2 дня
            in_3_days: Через 3 дня
            in_4_days: Через 4 дня
          climate:
            states:
              "on": Включено
              "off": Выключено
            heat: Отопление
          please_confirm: Пожалуйста, подтвердите
          unavailable: Недоступно
          unknown: Неизвестно
          no_name: Без названия
          alarm:
            home: Дома
            away: Вне дома
            night: Ночь
            vacation: Отпуск
            bypass: Обход
            disarm: Разоружение
          settings:
            reboot: Перезагрузка
            sleep: Сон
            brightness: Яркость
            bright: Яркий
            dimming: Затемнение
            dim: Тусклый
          meridiem:
            am: ДП
            pm: ПП
        sk:     # Slovak
          bytes_per_char: 1
          weekdays:
            mon: Pondelok
            tue: Utorok
            wed: Streda
            thu: Štvrtok
            fri: Piatok
            sat: Sobota
            sun: Nedeľa
          weekdays_short:
            mon: Po
            tue: Ut
            wed: St
            thu: Št
            fri: Pi
            sat: So
            sun: Ne
          months:
            jan: Január
            feb: Február
            mar: Marec
            apr: Apríl
            may: Máj
            jun: Jún
            jul: Júl
            aug: August
            sep: September
            oct: Október
            nov: November
            dec: December
          months_short:
            jan: Jan
            feb: Feb
            mar: Mar
            apr: Apr
            may: Máj
            jun: Jún
            jul: Júl
            aug: Aug
            sep: Sep
            oct: Okt
            nov: Nov
            dec: Dec
          relative_day:
            today: Dnes
            tomorrow: Zajtra
            in_2_days: O 2 dni
            in_3_days: O 3 dni
            in_4_days: O 4 dni
          climate:
            states:
              "on": Zapnuté
              "off": Vypnuté
            heat: Kúrenie
          please_confirm: Potvrďte, prosím
          unavailable: Nedostupné
          unknown: Neznámy
          no_name: Bez mena
          alarm:
            home: Doma
            away: Preč
            night: Noc
            vacation: Dovolenka
            bypass: Obísť
            disarm: Zneškodniť
          settings:
            reboot: Reštartovať
            sleep: Spánok
            brightness: Jas
            bright: Svetlý
            dimming: Stmavovanie
            dim: Tmavý
          meridiem:
            am: AM
            pm: PM
        sl:     # Slovenian
          bytes_per_char: 1
          weekdays:
            mon: Ponedeljek
            tue: Torek
            wed: Sreda
            thu: Četrtek
            fri: Petek
            sat: Sobota
            sun: Nedelja
          weekdays_short:
            mon: Pon
            tue: Tor
            wed: Sre
            thu: Čet
            fri: Pet
            sat: Sob
            sun: Ned
          months:
            jan: Januar
            feb: Februar
            mar: Marec
            apr: April
            may: Maj
            jun: Junij
            jul: Julij
            aug: Avgust
            sep: September
            oct: Oktober
            nov: November
            dec: December
          months_short:
            jan: Jan
            feb: Feb
            mar: Mar
            apr: Apr
            may: Maj
            jun: Jun
            jul: Jul
            aug: Avg
            sep: Sep
            oct: Okt
            nov: Nov
            dec: Dec
          relative_day:
            today: Danes
            tomorrow: Jutri
            in_2_days: Čez 2 dni
            in_3_days: Čez 3 dni
            in_4_days: Čez 4 dni
          climate:
            states:
              "on": Vklopljeno
              "off": Izklopljeno
            heat: Ogrevanje
          please_confirm: Prosimo, potrdite
          unavailable: Nedosegljivo
          unknown: Neznano
          no_name: Brez imena
          alarm:
            home: Doma
            away: Odsoten
            night: Noč
            vacation: Dopust
            bypass: Obvoz
            disarm: Razorožitev
          settings:
            reboot: Ponovni zagon
            sleep: Spanje
            brightness: Svetlost
            bright: Svetlo
            dimming: Zatemnitev
            dim: Temno
          meridiem:
            am: dop.
            pm: pop.
        sv:     # Swedish
          bytes_per_char: 1
          weekdays:
            mon: Måndag
            tue: Tisdag
            wed: Onsdag
            thu: Torsdag
            fri: Fredag
            sat: Lördag
            sun: Söndag
          weekdays_short:
            mon: Mån
            tue: Tis
            wed: Ons
            thu: Tors
            fri: Fre
            sat: Lör
            sun: Sön
          months:
            jan: Januari
            feb: Februari
            mar: Mars
            apr: April
            may: Maj
            jun: Juni
            jul: Juli
            aug: Augusti
            sep: September
            oct: Oktober
            nov: November
            dec: December
          months_short:
            jan: Jan
            feb: Feb
            mar: Mar
            apr: Apr
            may: Maj
            jun: Jun
            jul: Jul
            aug: Aug
            sep: Sep
            oct: Okt
            nov: Nov
            dec: Dec
          relative_day:
            today: Idag
            tomorrow: Imorgon
            in_2_days: Om 2 dagar
            in_3_days: Om 3 dagar
            in_4_days: Om 4 dagar
          climate:
            states:
              "on": På
              "off": Av
            heat: Värme
          please_confirm: Vänligen bekräfta
          unavailable: Otillgänglig
          unknown: Okänd
          no_name: Inget namn
          alarm:
            home: Hemma
            away: Borta
            night: Natt
            vacation: Semester
            bypass: Förbigå
            disarm: Avaktivera
          settings:
            reboot: Starta om
            sleep: Vila
            brightness: Ljusstyrka
            bright: Ljust
            dimming: Dimmning
            dim: Dimma
          meridiem:
            am: FM
            pm: EM
        tr:     # Turkish
          bytes_per_char: 1
          weekdays:
            mon: Pazartesi
            tue: Salı
            wed: Çarşamba
            thu: Perşembe
            fri: Cuma
            sat: Cumartesi
            sun: Pazar
          weekdays_short:
            mon: Pzt
            tue: Sal
            wed: Çar
            thu: Per
            fri: Cum
            sat: Cmt
            sun: Paz
          months:
            jan: Ocak
            feb: Şubat
            mar: Mart
            apr: Nisan
            may: Mayıs
            jun: Haziran
            jul: Temmuz
            aug: Ağustos
            sep: Eylül
            oct: Ekim
            nov: Kasım
            dec: Aralık
          months_short:
            jan: Oca
            feb: Şub
            mar: Mar
            apr: Nis
            may: May
            jun: Haz
            jul: Tem
            aug: Ağu
            sep: Eyl
            oct: Eki
            nov: Kas
            dec: Ara
          relative_day:
            today: Bugün
            tomorrow: Yarın
            in_2_days: 2 gün içinde
            in_3_days: 3 gün içinde
            in_4_days: 4 gün içinde
          climate:
            states:
              "on": Açık
              "off": Kapalı
            heat: Isıtma
          please_confirm: Lütfen onaylayın
          unavailable: Kullanılamaz
          unknown: Bilinmeyen
          no_name: İsimsiz
          alarm:
            home: Evde
            away: Dışarıda
            night: Gece
            vacation: Tatil
            bypass: Bypass
            disarm: Devre dışı bırak
          settings:
            reboot: Yeniden başlat
            sleep: Uyku modu
            brightness: Parlaklık
            bright: Parlak
            dimming: Karartma
            dim: Karanlık
          meridiem:
            am: ÖÖ
            pm: ÖS
        uk:     # Ukrainian
          bytes_per_char: 2
          weekdays:
            mon: Понеділок
            tue: Вівторок
            wed: Середа
            thu: Четвер
            fri: П'ятниця
            sat: Субота
            sun: Неділя
          weekdays_short:
            mon: Пн
            tue: Вт
            wed: Ср
            thu: Чт
            fri: Пт
            sat: Сб
            sun: Нд
          months:
            jan: Січень
            feb: Лютий
            mar: Березень
            apr: Квітень
            may: Травень
            jun: Червень
            jul: Липень
            aug: Серпень
            sep: Вересень
            oct: Жовтень
            nov: Листопад
            dec: Грудень
          months_short:
            jan: Січ
            feb: Лют
            mar: Бер
            apr: Кві
            may: Тра
            jun: Чер
            jul: Лип
            aug: Сер
            sep: Вер
            oct: Жов
            nov: Лис
            dec: Гру
          relative_day:
            today: Сьогодні
            tomorrow: Завтра
            in_2_days: Через 2 дні
            in_3_days: Через 3 дні
            in_4_days: Через 4 дні
          climate:
            states:
              "on": Увімкнено
              "off": Вимкнено
            heat: Опалення
          please_confirm: Будь ласка, підтвердіть
          unavailable: Недоступно
          unknown: Невідомо
          no_name: Без імені
          alarm:
            home: Вдома
            away: Відсутній
            night: Ніч
            vacation: Відпустка
            bypass: Обхід
            disarm: Роззброєння
          settings:
            reboot: Перезавантаження
            sleep: Сон
            brightness: Яскравість
            bright: Яскравий
            dimming: Затемнення
            dim: Темний
          meridiem:
            am: ДП
            pm: ПП
        zh-tw:  # Traditional Chinese
          bytes_per_char: 3
          weekdays:
            mon: 星期一
            tue: 星期二
            wed: 星期三
            thu: 星期四
            fri: 星期五
            sat: 星期六
            sun: 星期日
          weekdays_short:
            mon: 一
            tue: 二
            wed: 三
            thu: 四
            fri: 五
            sat: 六
            sun: 日
          months:
            jan: 1月
            feb: 2月
            mar: 3月
            apr: 4月
            may: 5月
            jun: 6月
            jul: 7月
            aug: 8月
            sep: 9月
            oct: 10月
            nov: 11月
            dec: 12月
          months_short:
            jan: 1月
            feb: 2月
            mar: 3月
            apr: 4月
            may: 5月
            jun: 6月
            jul: 7月
            aug: 8月
            sep: 9月
            oct: 10月
            nov: 11月
            dec: 12月
          relative_day:
            today: 今天
            tomorrow: 明天
            in_2_days: 後天
            in_3_days: 大後天
            in_4_days: 四天後
          climate:
            states:
              'on': 開啟
              'off': 關閉
            heat: 暖氣
          please_confirm: 請確認
          unavailable: 無法使用
          unknown: 未知
          no_name: 未命名
          alarm:
            home: 在家
            away: 離家
            night: 夜間
            vacation: 假期
            bypass: 忽略
            disarm: 解除
          settings:
            reboot: 重啟
            sleep: 睡眠
            brightness: 亮度
            bright: 正常
            dimming: 調光
            dim: 待機
          meridiem:
            am: 上午
            pm: 下午

      ##### Home page #####
      home_page:
        chips:
          - entity: !input chip01
            inverted: !input chip01_inverted
            icon: !input chip01_icon
            icon_color_rgb: !input chip01_icon_color
            component: chip01
          - entity: !input chip02
            inverted: !input chip02_inverted
            icon: !input chip02_icon
            icon_color_rgb: !input chip02_icon_color
            component: chip02
          - entity: !input chip03
            inverted: !input chip03_inverted
            icon: !input chip03_icon
            icon_color_rgb: !input chip03_icon_color
            component: chip03
          - entity: !input chip04
            inverted: !input chip04_inverted
            icon: !input chip04_icon
            icon_color_rgb: !input chip04_icon_color
            component: chip04
          - entity: !input chip05
            inverted: !input chip05_inverted
            icon: !input chip05_icon
            icon_color_rgb: !input chip05_icon_color
            component: chip05
          - entity: !input chip06
            inverted: !input chip06_inverted
            icon: !input chip06_icon
            icon_color_rgb: !input chip06_icon_color
            component: chip06
          - entity: !input chip07
            inverted: !input chip07_inverted
            icon: !input chip07_icon
            icon_color_rgb: !input chip07_icon_color
            component: chip07
        custom_buttons:
          - entity: !input home_custom_button01
            icon: !input home_custom_button01_icon
            name: !input home_custom_button01_name
            component: button01
          - entity: !input home_custom_button02
            icon: !input home_custom_button02_icon
            name: !input home_custom_button02_name
            component: button02
          - entity: !input home_custom_button03
            icon: !input home_custom_button03_icon
            name: !input home_custom_button03_name
            component: button03
          - entity: !input home_custom_button04
            icon: !input home_custom_button04_icon
            name: !input home_custom_button04_name
            component: button04
          - entity: !input home_custom_button05
            icon: !input home_custom_button05_icon
            name: !input home_custom_button05_name
            component: button05
          - entity: !input home_custom_button06
            icon: !input home_custom_button06_icon
            name: !input home_custom_button06_name
            component: button06
          - entity: !input alarm
            icon: !input home_custom_button07_icon
            name: !input home_custom_button07_name
            component: button07
        entity_value:
          - entity: !input home_value01
            icon: !input home_value01_icon
            icon_color_rgb: !input home_value01_icon_color
            label_color_rgb: !input home_value01_label_color
            page: home
            component: value01
          - entity: !input home_value02
            icon: !input home_value02_icon
            icon_color_rgb: !input home_value02_icon_color
            label_color_rgb: !input home_value02_label_color
            page: home
            component: value02
          - entity: !input home_value03
            icon: !input home_value03_icon
            icon_color_rgb: !input home_value03_icon_color
            label_color_rgb: !input home_value03_label_color
            page: home
            component: value03
          - entity: !input home_value04
            icon: !input home_value04_icon
            icon_color_rgb: !input home_value04_icon_color
            label_color_rgb: !input home_value04_label_color
            page: home
            component: value04

      ##### Button pages #####
      buttons_pages:
        labels:
          buttonpage01: !input button_page01_label
          buttonpage02: !input button_page02_label
          buttonpage03: !input button_page03_label
          buttonpage04: !input button_page04_label
        buttons:  # Buttons 1 - 32
          - entity: !input 'entity01'
            name: !input 'entity01_name'
            icon: !input 'entity01_icon'
            icon_color_rgb: !input 'entity01_icon_color'
            confirm: !input 'entity01_confirm'
            page: buttonpage01
            component: button01
          - entity: !input 'entity02'
            name: !input 'entity02_name'
            icon: !input 'entity02_icon'
            icon_color_rgb: !input 'entity02_icon_color'
            confirm: !input 'entity02_confirm'
            page: buttonpage01
            component: button02
          - entity: !input 'entity03'
            name: !input 'entity03_name'
            icon: !input 'entity03_icon'
            icon_color_rgb: !input 'entity03_icon_color'
            confirm: !input 'entity03_confirm'
            page: buttonpage01
            component: button03
          - entity: !input 'entity04'
            name: !input 'entity04_name'
            icon: !input 'entity04_icon'
            icon_color_rgb: !input 'entity04_icon_color'
            confirm: !input 'entity04_confirm'
            page: buttonpage01
            component: button04
          - entity: !input 'entity05'
            name: !input 'entity05_name'
            icon: !input 'entity05_icon'
            icon_color_rgb: !input 'entity05_icon_color'
            confirm: !input 'entity05_confirm'
            page: buttonpage01
            component: button05
          - entity: !input 'entity06'
            name: !input 'entity06_name'
            icon: !input 'entity06_icon'
            icon_color_rgb: !input 'entity06_icon_color'
            confirm: !input 'entity06_confirm'
            page: buttonpage01
            component: button06
          - entity: !input 'entity07'
            name: !input 'entity07_name'
            icon: !input 'entity07_icon'
            icon_color_rgb: !input 'entity07_icon_color'
            confirm: !input 'entity07_confirm'
            page: buttonpage01
            component: button07
          - entity: !input 'entity08'
            name: !input 'entity08_name'
            icon: !input 'entity08_icon'
            icon_color_rgb: !input 'entity08_icon_color'
            confirm: !input 'entity08_confirm'
            page: buttonpage01
            component: button08
          - entity: !input 'entity09'
            name: !input 'entity09_name'
            icon: !input 'entity09_icon'
            icon_color_rgb: !input 'entity09_icon_color'
            confirm: !input 'entity09_confirm'
            page: buttonpage02
            component: button01
          - entity: !input 'entity10'
            name: !input 'entity10_name'
            icon: !input 'entity10_icon'
            icon_color_rgb: !input 'entity10_icon_color'
            confirm: !input 'entity10_confirm'
            page: buttonpage02
            component: button02
          - entity: !input 'entity11'
            name: !input 'entity11_name'
            icon: !input 'entity11_icon'
            icon_color_rgb: !input 'entity11_icon_color'
            confirm: !input 'entity11_confirm'
            page: buttonpage02
            component: button03
          - entity: !input 'entity12'
            name: !input 'entity12_name'
            icon: !input 'entity12_icon'
            icon_color_rgb: !input 'entity12_icon_color'
            confirm: !input 'entity12_confirm'
            page: buttonpage02
            component: button04
          - entity: !input 'entity13'
            name: !input 'entity13_name'
            icon: !input 'entity13_icon'
            icon_color_rgb: !input 'entity13_icon_color'
            confirm: !input 'entity13_confirm'
            page: buttonpage02
            component: button05
          - entity: !input 'entity14'
            name: !input 'entity14_name'
            icon: !input 'entity14_icon'
            icon_color_rgb: !input 'entity14_icon_color'
            confirm: !input 'entity14_confirm'
            page: buttonpage02
            component: button06
          - entity: !input 'entity15'
            name: !input 'entity15_name'
            icon: !input 'entity15_icon'
            icon_color_rgb: !input 'entity15_icon_color'
            confirm: !input 'entity15_confirm'
            page: buttonpage02
            component: button07
          - entity: !input 'entity16'
            name: !input 'entity16_name'
            icon: !input 'entity16_icon'
            icon_color_rgb: !input 'entity16_icon_color'
            confirm: !input 'entity16_confirm'
            page: buttonpage02
            component: button08
          - entity: !input 'entity17'
            name: !input 'entity17_name'
            icon: !input 'entity17_icon'
            icon_color_rgb: !input 'entity17_icon_color'
            confirm: !input 'entity17_confirm'
            page: buttonpage03
            component: button01
          - entity: !input 'entity18'
            name: !input 'entity18_name'
            icon: !input 'entity18_icon'
            icon_color_rgb: !input 'entity18_icon_color'
            confirm: !input 'entity18_confirm'
            page: buttonpage03
            component: button02
          - entity: !input 'entity19'
            name: !input 'entity19_name'
            icon: !input 'entity19_icon'
            icon_color_rgb: !input 'entity19_icon_color'
            confirm: !input 'entity19_confirm'
            page: buttonpage03
            component: button03
          - entity: !input 'entity20'
            name: !input 'entity20_name'
            icon: !input 'entity20_icon'
            icon_color_rgb: !input 'entity20_icon_color'
            confirm: !input 'entity20_confirm'
            page: buttonpage03
            component: button04
          - entity: !input 'entity21'
            name: !input 'entity21_name'
            icon: !input 'entity21_icon'
            icon_color_rgb: !input 'entity21_icon_color'
            confirm: !input 'entity21_confirm'
            page: buttonpage03
            component: button05
          - entity: !input 'entity22'
            name: !input 'entity22_name'
            icon: !input 'entity22_icon'
            icon_color_rgb: !input 'entity22_icon_color'
            confirm: !input 'entity22_confirm'
            page: buttonpage03
            component: button06
          - entity: !input 'entity23'
            name: !input 'entity23_name'
            icon: !input 'entity23_icon'
            icon_color_rgb: !input 'entity23_icon_color'
            confirm: !input 'entity23_confirm'
            page: buttonpage03
            component: button07
          - entity: !input 'entity24'
            name: !input 'entity24_name'
            icon: !input 'entity24_icon'
            icon_color_rgb: !input 'entity24_icon_color'
            confirm: !input 'entity24_confirm'
            page: buttonpage03
            component: button08
          - entity: !input 'entity25'
            name: !input 'entity25_name'
            icon: !input 'entity25_icon'
            icon_color_rgb: !input 'entity25_icon_color'
            confirm: !input 'entity25_confirm'
            page: buttonpage04
            component: button01
          - entity: !input 'entity26'
            name: !input 'entity26_name'
            icon: !input 'entity26_icon'
            icon_color_rgb: !input 'entity26_icon_color'
            confirm: !input 'entity26_confirm'
            page: buttonpage04
            component: button02
          - entity: !input 'entity27'
            name: !input 'entity27_name'
            icon: !input 'entity27_icon'
            icon_color_rgb: !input 'entity27_icon_color'
            confirm: !input 'entity27_confirm'
            page: buttonpage04
            component: button03
          - entity: !input 'entity28'
            name: !input 'entity28_name'
            icon: !input 'entity28_icon'
            icon_color_rgb: !input 'entity28_icon_color'
            confirm: !input 'entity28_confirm'
            page: buttonpage04
            component: button04
          - entity: !input 'entity29'
            name: !input 'entity29_name'
            icon: !input 'entity29_icon'
            icon_color_rgb: !input 'entity29_icon_color'
            confirm: !input 'entity29_confirm'
            page: buttonpage04
            component: button05
          - entity: !input 'entity30'
            name: !input 'entity30_name'
            icon: !input 'entity30_icon'
            icon_color_rgb: !input 'entity30_icon_color'
            confirm: !input 'entity30_confirm'
            page: buttonpage04
            component: button06
          - entity: !input 'entity31'
            name: !input 'entity31_name'
            icon: !input 'entity31_icon'
            icon_color_rgb: !input 'entity31_icon_color'
            confirm: !input 'entity31_confirm'
            page: buttonpage04
            component: button07
          - entity: !input 'entity32'
            name: !input 'entity32_name'
            icon: !input 'entity32_icon'
            icon_color_rgb: !input 'entity32_icon_color'
            confirm: !input 'entity32_confirm'
            page: buttonpage04
            component: button08

      ##### Entity pages #####
      entities_pages:
        labels:
          entitypage01: !input 'entity_page01_label'
          entitypage02: !input 'entity_page02_label'
          entitypage03: !input 'entity_page03_label'
          entitypage04: !input 'entity_page04_label'
        entities:
          - entity: !input 'entities_entity01'
            name: !input 'entities_entity01_name'
            icon: !input 'entities_entity01_icon'
            page: entitypage01
            component: value01
          - entity: !input 'entities_entity02'
            name: !input 'entities_entity02_name'
            icon: !input 'entities_entity02_icon'
            page: entitypage01
            component: value02
          - entity: !input 'entities_entity03'
            name: !input 'entities_entity03_name'
            icon: !input 'entities_entity03_icon'
            page: entitypage01
            component: value03
          - entity: !input 'entities_entity04'
            name: !input 'entities_entity04_name'
            icon: !input 'entities_entity04_icon'
            page: entitypage01
            component: value04
          - entity: !input 'entities_entity05'
            name: !input 'entities_entity05_name'
            icon: !input 'entities_entity05_icon'
            page: entitypage01
            component: value05
          - entity: !input 'entities_entity06'
            name: !input 'entities_entity06_name'
            icon: !input 'entities_entity06_icon'
            page: entitypage01
            component: value06
          - entity: !input 'entities_entity07'
            name: !input 'entities_entity07_name'
            icon: !input 'entities_entity07_icon'
            page: entitypage01
            component: value07
          - entity: !input 'entities_entity08'
            name: !input 'entities_entity08_name'
            icon: !input 'entities_entity08_icon'
            page: entitypage01
            component: value08
          - entity: !input 'entities_entity09'
            name: !input 'entities_entity09_name'
            icon: !input 'entities_entity09_icon'
            page: entitypage02
            component: value01
          - entity: !input 'entities_entity10'
            name: !input 'entities_entity10_name'
            icon: !input 'entities_entity10_icon'
            page: entitypage02
            component: value02
          - entity: !input 'entities_entity11'
            name: !input 'entities_entity11_name'
            icon: !input 'entities_entity11_icon'
            page: entitypage02
            component: value03
          - entity: !input 'entities_entity12'
            name: !input 'entities_entity12_name'
            icon: !input 'entities_entity12_icon'
            page: entitypage02
            component: value04
          - entity: !input 'entities_entity13'
            name: !input 'entities_entity13_name'
            icon: !input 'entities_entity13_icon'
            page: entitypage02
            component: value05
          - entity: !input 'entities_entity14'
            name: !input 'entities_entity14_name'
            icon: !input 'entities_entity14_icon'
            page: entitypage02
            component: value06
          - entity: !input 'entities_entity15'
            name: !input 'entities_entity15_name'
            icon: !input 'entities_entity15_icon'
            page: entitypage02
            component: value07
          - entity: !input 'entities_entity16'
            name: !input 'entities_entity16_name'
            icon: !input 'entities_entity16_icon'
            page: entitypage02
            component: value08
          - entity: !input 'entities_entity17'
            name: !input 'entities_entity17_name'
            icon: !input 'entities_entity17_icon'
            page: entitypage03
            component: value01
          - entity: !input 'entities_entity18'
            name: !input 'entities_entity18_name'
            icon: !input 'entities_entity18_icon'
            page: entitypage03
            component: value02
          - entity: !input 'entities_entity19'
            name: !input 'entities_entity19_name'
            icon: !input 'entities_entity19_icon'
            page: entitypage03
            component: value03
          - entity: !input 'entities_entity20'
            name: !input 'entities_entity20_name'
            icon: !input 'entities_entity20_icon'
            page: entitypage03
            component: value04
          - entity: !input 'entities_entity21'
            name: !input 'entities_entity21_name'
            icon: !input 'entities_entity21_icon'
            page: entitypage03
            component: value05
          - entity: !input 'entities_entity22'
            name: !input 'entities_entity22_name'
            icon: !input 'entities_entity22_icon'
            page: entitypage03
            component: value06
          - entity: !input 'entities_entity23'
            name: !input 'entities_entity23_name'
            icon: !input 'entities_entity23_icon'
            page: entitypage03
            component: value07
          - entity: !input 'entities_entity24'
            name: !input 'entities_entity24_name'
            icon: !input 'entities_entity24_icon'
            page: entitypage03
            component: value08
          - entity: !input 'entities_entity25'
            name: !input 'entities_entity25_name'
            icon: !input 'entities_entity25_icon'
            page: entitypage04
            component: value01
          - entity: !input 'entities_entity26'
            name: !input 'entities_entity26_name'
            icon: !input 'entities_entity26_icon'
            page: entitypage04
            component: value02
          - entity: !input 'entities_entity27'
            name: !input 'entities_entity27_name'
            icon: !input 'entities_entity27_icon'
            page: entitypage04
            component: value03
          - entity: !input 'entities_entity28'
            name: !input 'entities_entity28_name'
            icon: !input 'entities_entity28_icon'
            page: entitypage04
            component: value04
          - entity: !input 'entities_entity29'
            name: !input 'entities_entity29_name'
            icon: !input 'entities_entity29_icon'
            page: entitypage04
            component: value05
          - entity: !input 'entities_entity30'
            name: !input 'entities_entity30_name'
            icon: !input 'entities_entity30_icon'
            page: entitypage04
            component: value06
          - entity: !input 'entities_entity31'
            name: !input 'entities_entity31_name'
            icon: !input 'entities_entity31_icon'
            page: entitypage04
            component: value07
          - entity: !input 'entities_entity32'
            name: !input 'entities_entity32_name'
            icon: !input 'entities_entity32_icon'
            page: entitypage04
            component: value08

      ##### WEATHER ####
      weather_entity_tmp: !input 'weather_entity'  # used only during the creation of weather in variables
      weather_entity: >
        {% if weather_entity_tmp is string and weather_entity_tmp | length > 0 %} {{ weather_entity_tmp }}
        {% elif states.weather | list | count > 0 %} {{ states.weather | map(attribute="entity_id") | list | first }}
        {% endif %}
      temperature_units: "°"

      ##### Climate page #####
      page_climate:
        buttons:
          hvac_mode:
            - mode: auto
              icon: calendar-sync
              color: green
              component: button01
            - mode: heat_cool
              icon: autorenew
              color: amber
              component: button02
            - mode: heat
              icon: fire
              color: deep_orange
              component: button03
            - mode: cool
              icon: snowflake
              color: blue
              component: button04
            - mode: dry
              icon: water-percent
              color: orange
              component: button05
            - mode: fan_only
              icon: fan
              color: cyan
              component: button06
            - mode: "off"
              icon: power
              color: "off"
              component: button07

      ##### Utilities page #####
      pages_utilities:
        cursor:
          width: !input utilities_page_cursor_width
        title:
          label: !input utilities_page01_label
          icon: !input utilities_page01_icon
        groups:
          - name: grid
            label: !input utilities_page01_grid_label
            icon: !input utilities_page01_grid_icon
            value1: !input utilities_page01_grid_value1
            value2: !input utilities_page01_grid_value2
            color: !input utilities_page01_grid_color
          - name: group01
            label: !input utilities_page01_group01_label
            icon: !input utilities_page01_group01_icon
            value1: !input utilities_page01_group01_value1
            value2: !input utilities_page01_group01_value2
            color: !input utilities_page01_group01_color
            line_ref: !input utilities_page01_group01_line_reference
            line_inverted: !input utilities_page01_group01_line_inverted
          - name: group02
            label: !input utilities_page01_group02_label
            icon: !input utilities_page01_group02_icon
            value1: !input utilities_page01_group02_value1
            value2: !input utilities_page01_group02_value2
            color: !input utilities_page01_group02_color
            line_ref: !input utilities_page01_group02_line_reference
            line_inverted: !input utilities_page01_group02_line_inverted
          - name: group03
            label: !input utilities_page01_group03_label
            icon: !input utilities_page01_group03_icon
            value1: !input utilities_page01_group03_value1
            value2: !input utilities_page01_group03_value2
            color: !input utilities_page01_group03_color
            line_ref: !input utilities_page01_group03_line_reference
            line_inverted: !input utilities_page01_group03_line_inverted
          - name: group04
            label: !input utilities_page01_group04_label
            icon: !input utilities_page01_group04_icon
            value1: !input utilities_page01_group04_value1
            value2: !input utilities_page01_group04_value2
            color: !input utilities_page01_group04_color
            line_ref: !input utilities_page01_group04_line_reference
            line_inverted: !input utilities_page01_group04_line_inverted
          - name: group05
            label: !input utilities_page01_group05_label
            icon: !input utilities_page01_group05_icon
            value1: !input utilities_page01_group05_value1
            value2: !input utilities_page01_group05_value2
            color: !input utilities_page01_group05_color
            line_ref: !input utilities_page01_group05_line_reference
            line_inverted: !input utilities_page01_group05_line_inverted
          - name: group06
            label: !input utilities_page01_group06_label
            icon: !input utilities_page01_group06_icon
            value1: !input utilities_page01_group06_value1
            value2: !input utilities_page01_group06_value2
            color: !input utilities_page01_group06_color
            line_ref: !input utilities_page01_group06_line_reference
            line_inverted: !input utilities_page01_group06_line_inverted
          - name: home
            label: !input utilities_page01_home_label
            icon: !input utilities_page01_home_icon
            value1: !input utilities_page01_home_value1
            value2: !input utilities_page01_home_value2
            color: !input utilities_page01_home_color
            line_ref: !input utilities_page01_main_line_reference
            line_inverted: !input utilities_page01_main_line_inverted

      ###### MEDIA PLAYER REFRESH #####
      media_player_update_interval: !input 'media_player_update_interval'
      media_player_update_delay: !input 'media_player_update_delay'

      ##### GENERAL ENTITYS #####
      climate: !input climate
      embedded_climate: '{{ climate == thermostat_embedded }}'
      domain_automation_button_action: !input domain_automation_button_action

      # yamllint disable rule:truthy rule:line-length rule:comments-indentation
      enum:
        ColorMode:  # Possible light color modes. - https://github.com/home-assistant/core/blob/dev/homeassistant/components/light/__init__.py
          UNKNOWN: "[<ColorMode.UNKNOWN: 'unknown'>]"
          ONOFF: "[<ColorMode.ONOFF: 'onoff'>]"
          BRIGHTNESS: "[<ColorMode.BRIGHTNESS: 'brightness'>]"
          COLOR_TEMP: "[<ColorMode.COLOR_TEMP: 'color_temp'>]"
          HS: "[<ColorMode.HS: 'hs'>]"
          XY: "[<ColorMode.XY: 'xy'>]"
          RGB: "[<ColorMode.RGB: 'rgb'>]"
          RGBW: "[<ColorMode.RGBW: 'rgbw'>]"
          RGBWW: "[<ColorMode.RGBWW: 'rgbww'>]"
          WHITE: "[<ColorMode.WHITE: ''>]"
        HVACMode:  # Possible HVAC modes. - https://github.com/home-assistant/core/blob/dev/homeassistant/components/climate/const.py#L13
          "OFF": "[<HVACMode.OFF: 'off'>]"                  # All activity disabled / Device is off/standby
          HEAT: "[<HVACMode.HEAT: 'heat'>]"                 # Heating
          COOL: "[<HVACMode.COOL: 'cool'>]"                 # Cooling
          HEAT_COOL: "[<HVACMode.HEAT_COOL: 'heat_cool'>]"  # The device supports heating/cooling to a range
          AUTO: "[<HVACMode.AUTO: 'auto'>]"                 # The temperature is set based on a schedule, learned behavior, AI or some other related mechanism. User is not able to adjust the temperature
          DRY: "[<HVACMode.DRY: 'dry'>]"                    # Device is in Dry/Humidity mode
          FAN_ONLY: "[<HVACMode.FAN_ONLY: 'fan_only'>]"     # Only the fan is on, not fan and another mode like cool
        HVACMode_bits:
          "OFF": 1
          HEAT: 2
          COOL: 4
          HEAT_COOL: 8
          AUTO: 16
          DRY: 32
          FAN_ONLY: 64
        states:
          "on": ["on", "open", "opening", "true", "True", true, True, "playing", "heat", "cold", "dry", "armed_home", "armed_away", "armed_vacation", "armed_custom_bypass", "triggered", "pending", "arming", "unlocked", 1]
          "off": ["off", "closed", "closing", "false", "False", false, False, "standby", "paused", "idle", "disarmed", "disarming", "locked"]
          unknown: ["unknown", "unavailable", None, none, ""]
          climate:
            "on": ["heat_cool", "heat", "heating", "cold", "cooling", "dry", "drying", "fan", "fan_only", "auto"]
            "off": ["off", "idle"]
          alarm_control_panel:
            "on": ["armed_home", "armed_away", "armed_vacation", "armed_custom_bypass", "triggered", "pending", "arming"]
            "off": ["disarmed", "disarming"]
          lock:
            "on": ["unlocked"]
            "off": ["locked"]
      # yamllint enable rule:truthy rule:line-length rule:comments-indentation

  - if: '{{ false }}'  #### Global anchor repository ####
    then:
      - variables:
          entity_id: '{{ None }}'
          overlap:
            icon: '{{ None }}'
            icon_color: '{{ None }}'
            name: '{{ None }}'
      - &variable_entity
        alias: Variable Entity
        variables:
          entity_id_valid: '{{ entity_id is defined and entity_id is string and entity_id.split(".") | count == 2 }}'
          entity_state: '{{ states(entity_id) | default("unknown") if entity_id_valid }}'
          entity_has_value: '{{ has_value(entity_id) if entity_id_valid }}'
          entity_domain: '{{ entity_id.split(".")[0] if entity_id_valid }}'
          entity_icon: '{{ state_attr(entity_id, "icon") | default("") if entity_id_valid }}'
          entity_state_is_on: >
            {{
              (
                entity_state in enum.states.on or
                (entity_domain in ["input_number", "number", "sensor"] and entity_has_value) or
                (entity_domain in enum.states and entity_state in enum.states[entity_domain].on)
              ) if entity_id_valid
            }}
          entity_state_is_off: >
            {{
              (not entity_state_is_on) and
              (
                entity_state in enum.states.off or
                (
                  entity_domain in enum.states and
                  entity_state in enum.states[entity_domain].off
                )
              )
              if entity_id_valid
            }}
          entity_state_is_unknown: '{{ ((not entity_state_is_on) and (not entity_state_is_off)) if entity_id_valid }}'
          entity_icon_color: >
            {{
              (
                (
                  overlap.icon_color
                  if overlap is defined and overlap.icon_color is defined and overlap.icon_color is sequence and overlap.icon_color | count == 3
                  else nextion.color.on
                )
                if ((not entity_state_is_off) and (not entity_state_is_unknown))
                else nextion.color.off
              ) if entity_id_valid
            }}
          entity_friendly_name: '{{ state_attr(entity_id, "friendly_name") | default("") if entity_id_valid }}'
          entity_device_class: '{{ state_attr(entity_id, "device_class") | default("") if entity_id_valid }}'
          entity:
            name: >
              {{
                (
                  overlap.name
                  if overlap is defined and overlap.name is defined and overlap.name is string and overlap.name | length > 0
                  else (entity_friendly_name if entity_friendly_name is string and entity_friendly_name | length > 0 else entity_id)
                ) if entity_id_valid
              }}
            icon: >
              {% if entity_id_valid %}
                {% set icon_domain = nextion.icon.domain[entity_domain] | default(all_icons.unknown) if entity_domain else all_icons.unknown %}
                {% if overlap is defined and overlap.icon is defined and overlap.icon is string and overlap.icon | length > 0 %}
                  {{ all_icons[overlap.icon.split(":")[1]] | default(icon_domain) if overlap.icon.split(":") | count == 2 else overlap.icon }}
                {% elif entity_domain == "climate" %}
                  {% set entity_hvac_action = state_attr(entity_id, "hvac_action") | default("") %}
                  {% set entity_climate_action = (entity_hvac_action if entity_hvac_action and entity_hvac_action not in enum.states.unknown else entity_state) %}
                  {% if "off" in entity_climate_action %}{{ all_icons.thermostat }}
                  {% elif "heat_cool" in entity_climate_action %}{{ all_icons.autorenew }}
                  {% elif "heating" in entity_climate_action or "heat" in entity_climate_action %}{{ all_icons["thermometer-lines"] }}
                  {% elif "cooling" in entity_climate_action or "cool" in entity_climate_action %}{{ all_icons.snowflake }}
                  {% elif "drying" in entity_climate_action or "dry" in entity_climate_action %}{{ all_icons["water-percent"] }}
                  {% elif "fan" in entity_climate_action or "fan_only" in entity_climate_action %}{{ all_icons.fan }}
                  {% elif "auto" in entity_climate_action %}{{ all_icons["calendar-sync"] }}
                  {% elif "idle" in entity_climate_action %}{{ all_icons.thermometer }}
                  {% else %}{{ icon_domain }}
                  {% endif %}
                {% elif entity_domain == "alarm_control_panel" %}
                  {% if entity_state in ["disarmed", "disarming"] %}{{ all_icons["shield-off-outline"] }}
                  {% elif entity_state == "armed_home" %}{{ all_icons["shield-home-outline"] }}
                  {% elif entity_state == "armed_away" %}{{ all_icons["shield-lock-outline"] }}
                  {% elif entity_state == "armed_night" %}{{ all_icons["shield-moon-outline"] }}
                  {% elif entity_state == "armed_vacation" %}{{ all_icons["shield-airplane-outline"] }}
                  {% elif entity_state == "armed_bypass" %}{{ all_icons["shield-half-full"] }}
                  {% elif entity_state in ["pending", "arming"] %}{{ all_icons["shield-outline"] }}
                  {% else %}{{ all_icons["shield-alert-outline"] }}
                  {% endif %}
                {% elif entity_domain == "lock" %}
                  {% if entity_state in ["locked"] %}{{ all_icons["lock"] }}
                  {% elif entity_state in ["unlocked"] %}{{ all_icons["lock-open-variant"] }}
                  {% else %}
                    {{ all_icons["lock-alert"] }}
                  {% endif %}
                {% elif entity_icon is defined and entity_icon is string and entity_icon.split(":") | count == 2 and entity_icon.split(":")[1] in all_icons %}
                  {{ all_icons[entity_icon.split(":")[1]] }}
                {% elif
                    entity_domain in ["binary_sensor", "cover", "sensor", "switch"] and
                    entity_device_class is defined and entity_device_class is string and entity_device_class | length > 0 %}
                  {% set entity_device_class_icon = entity_device_class + (("-" + entity_state) if entity_domain not in ["sensor"] else "") %}
                  {% set entity_device_class_icon = device_class_icons[entity_domain][entity_device_class_icon] if entity_device_class_icon in device_class_icons[entity_domain] else icon_domain %}
                  {{ all_icons[entity_device_class_icon] if entity_device_class_icon in all_icons else icon_domain }}
                {% else %}
                  {{ icon_domain }}
                {% endif %}
              {% endif %}
            icon_color: >
              {% if entity_id_valid %}
                {% if entity_domain == "alarm_control_panel" %}
                  {% if entity_state == "disarmed" %}{{ nextion.color.off }}
                  {% elif entity_state in ["armed_home", "armed_away", "armed_night", "armed_vacation", "armed_bypass"] %}{{ nextion.color.green }}
                  {% elif entity_state in ["pending", "arming", "disarming"] %}{{ nextion.color.amber }}
                  {% elif entity_state == "triggered" %}{{ nextion.color.red }}
                  {% else %}{{ entity_icon_color }}
                  {% endif %}
                {% elif entity_domain == "climate" %}
                  {% set entity_hvac_action = state_attr(entity_id, "hvac_action") | default("") %}
                  {% set entity_climate_action = (entity_hvac_action if entity_hvac_action and entity_hvac_action not in enum.states.unknown else entity_state) %}
                  {% if "off" in entity_climate_action %}{{ nextion.color.off }}
                  {% elif "heat_cool" in entity_climate_action %}{{ nextion.color.amber }}
                  {% elif "heating" in entity_climate_action or "heat" in entity_climate_action %}{{ nextion.color.deep_orange}}
                  {% elif "cooling" in entity_climate_action or "cool" in entity_climate_action %}{{ nextion.color.blue }}
                  {% elif "drying" in entity_climate_action or "dry" in entity_climate_action %}{{ nextion.color.orange }}
                  {% elif "fan" in entity_climate_action or "fan_only" in entity_climate_action %}{{ nextion.color.cyan }}
                  {% elif "auto" in entity_climate_action %}{{ nextion.color.green }}
                  {% elif "idle" in entity_climate_action %}{{ nextion.color.off }}
                  {% else %}{{ entity_icon_color }}
                  {% endif %}
                {% elif entity_domain == "light" %}
                  {% if entity_state != "on" %}{{ nextion.color.off }}
                  {% else %}
                    {% set entity_rgb_color_attr = state_attr(entity_id, "rgb_color") | default("") %}
                    {% set entity_rgb_color = entity_rgb_color_attr if entity_rgb_color_attr is sequence and entity_rgb_color_attr | count == 3 else entity_icon_color %}
                    {% set entity_brightness = state_attr(entity_id, "brightness") | default("") %}
                    {% set entity_brightness_index = (entity_brightness | int(255))/255 if is_number(entity_brightness) else 1 %}
                    {{
                      [
                        min(200,entity_rgb_color[0] * entity_brightness_index) | round(0),
                        min(200,entity_rgb_color[1] * entity_brightness_index) | round(0),
                        min(200,entity_rgb_color[2] * entity_brightness_index) | round(0)
                      ]
                    }}
                  {% endif %}
                {% elif entity_domain == "lock" %}
                  {% if entity_state in ["locked"] %}{{ nextion.color.green }}
                  {% elif entity_state in ["unlocked"] %}{{ nextion.color.red }}
                  {% else %}
                    {{ entity_icon_color }}
                  {% endif %}
                {% else %}{{ entity_icon_color }}
                {% endif %}
              {% endif %}

  - alias: Main choices
    choose:
      ##### DATE #####
      - alias: 'Date'
        conditions:  # time_state
          - condition: trigger
            id: time_state
        sequence:
          ##### NSPanel Date #####
          - &delay_default
            delay:
              milliseconds: !input delay
          - &refresh-date
            service: 'esphome.{{ nspanel_name }}_component_text'
            data:
              id: home.date
              txt: >
                {{
                  as_timestamp(now())
                  | timestamp_custom
                  (
                    date_format
                    | replace("%A", (dict.values(mui[language].weekdays) | list)[now().weekday()])
                    | replace("%a", (dict.values(mui[language].weekdays_short) | list)[now().weekday()])
                    | replace("%B", (dict.values(mui[language].months) | list)[now().month-1])
                    | replace("%b", (dict.values(mui[language].months_short) | list)[now().month-1])
                  )
                }}
            continue_on_error: true

      ##### NSPanel event #####
      - alias: NSPanel event
        conditions:
          - condition: trigger
            id: nspanel_event
        sequence: # nspanel_event
          - &variable_nspanel_event
            variables:
              nspanel_event: '{{ trigger.event.data }}'
          - choose:
              ##### BOOT NSPANEL - boot init #####
              - alias: Boot init
                conditions:
                  - '{{ nspanel_event.type == "boot"}}'
                  - '{{ nspanel_event.step is defined and nspanel_event.step in ["start", "timeout"]}}'
                sequence:
                  - &global_settings
                    sequence:
                      - service: 'esphome.{{ nspanel_name }}_component_text'
                        data:
                          id: boot.ver_blueprint
                          txt: 'Blueprint: {{ blueprint_version }}'
                        continue_on_error: true

                      - &variables_hardware
                        variables:
                          hw_button_left_entity: !input left_button_entity
                          hw_button_left_state_entity: !input left_button_state_entity
                          hw_button_right_entity: !input right_button_entity
                          hw_button_right_state_entity: !input right_button_state_entity
                          hardware:
                            buttons:
                              left:
                                entity: '{{ hw_button_left_entity }}'
                                entity_is_valid: '{{ hw_button_left_entity is defined and hw_button_left_entity is string and hw_button_left_entity.split(".") | count == 2 }}'
                                state_entity: '{{ hw_button_left_state_entity }}'
                                state_entity_is_valid: >
                                  {{ hw_button_left_state_entity is defined and hw_button_left_state_entity is string and hw_button_left_state_entity.split(".") | count == 2 }}
                                name: !input 'left_button_name'
                                hold_select: !input 'left_button_hold_select'
                                bar_always_visible: !input hw_button_bar_left_always_show
                              right:
                                entity: '{{ hw_button_right_entity }}'
                                entity_is_valid: '{{ hw_button_right_entity is defined and hw_button_right_entity is string and hw_button_right_entity.split(".") | count == 2 }}'
                                state_entity: '{{ hw_button_right_state_entity }}'
                                state_entity_is_valid: >
                                  {{ hw_button_right_state_entity is defined and hw_button_right_state_entity is string and hw_button_right_state_entity.split(".") | count == 2 }}
                                name: !input 'right_button_name'
                                hold_select: !input 'right_button_hold_select'
                                bar_always_visible: !input hw_button_bar_right_always_show
                            relay1_icon: !input relay01_icon
                            relay2_icon: !input relay02_icon

                      - variables:
                          bt_utilities_icon: !input home_button08_icon
                          bt_entities_icon: !input home_button06_icon
                          bt_qrcode_icon: !input home_button05_icon
                          qrcode:
                            enabled: !input qrcode_enabled
                            title: !input qrcode_label
                            qrcode: !input qrcode_value
                          home_indoor_temp_icon: !input home_indoor_temp_icon
                          timezone: !input timezone
                          timezone_code: >
                            {{
                              timezone.split('(')[1]|replace(')', '')
                              if timezone.split('(') | count > 0
                              else timezone
                            }}

                      ##### Timezone #####
                      - &delay_boot
                        delay:
                          milliseconds: !input delay_boot

                      - service: 'esphome.{{ nspanel_name }}_set_string'
                        data:
                          component: "timezone"
                          val: '{{ timezone_code }}'
                        continue_on_error: true

                      ##### Home page #####
                      - *delay_boot
                      - service: 'esphome.{{ nspanel_name }}_init_page_home'
                        data:
                          date_color: !input date_label_color
                          time_format: !input time_format
                          time_color: !input time_label_color
                          meridiem: '{{ dict.values(mui[language].meridiem) | list }}'
                          chip_font: !input chip_font_size
                          custom_buttons_font: !input custom_buttons_font_size
                          qrcode: !input qrcode_enabled
                          qrcode_icon: >
                            {{
                              all_icons[bt_bt_qrcode_icon.split("mdi:")[1]]
                              if bt_bt_qrcode_icon is string and bt_bt_qrcode_icon.split("mdi:")[1] in all_icons
                              else all_icons["qrcode-scan"]
                            }}
                          qrcode_icon_color: !input home_button05_icon_color
                          entities_pages_icon: >
                            {{
                              all_icons[bt_entities_icon.split("mdi:")[1]]
                              if bt_entities_icon is string and bt_entities_icon.split("mdi:")[1] in all_icons
                              else all_icons["format-list-bulleted-square"]
                            }}
                          entities_pages_icon_color: !input home_button06_icon_color
                          utilities: !input utilities_enabled
                          utilities_icon: >
                            {{
                              all_icons[bt_utilities_icon.split("mdi:")[1]]
                              if bt_utilities_icon is string and bt_utilities_icon.split("mdi:")[1] in all_icons
                              else all_icons.gauge
                            }}
                          utilities_icon_color: !input home_button08_icon_color
                          outdoor_temp_font: !input home_outdoor_temp_font
                        continue_on_error: true

                      ##### Home page - outdoor_temp
                      - *delay_boot
                      - service: 'esphome.{{ nspanel_name }}_component_color'
                        data:
                          id: home.outdoor_temp
                          color: !input home_outdoor_temp_label_color
                        continue_on_error: true

                      ##### Home page - indr_temp
                      - *delay_boot
                      - service: 'esphome.{{ nspanel_name }}_component_color'
                        data:
                          id: home.indr_temp
                          color: !input home_indoor_temp_label_color
                        continue_on_error: true
                      - *delay_boot
                      - service: 'esphome.{{ nspanel_name }}_component_text'
                        data:
                          id: home.indr_temp_icon
                          txt: >
                            {{
                              all_icons[home_indoor_temp_icon.split("mdi:")[1]]
                              if home_indoor_temp_icon.split("mdi:") | count == 2 and home_indoor_temp_icon.split("mdi:")[1] in all_icons
                              else all_icons.thermometer
                            }}
                        continue_on_error: true
                      - *delay_boot
                      - service: 'esphome.{{ nspanel_name }}_component_color'
                        data:
                          id: home.indr_temp_icon
                          color: !input home_indoor_temp_icon_color
                        continue_on_error: true

                      ###### Status / Chips bar ######
                      - repeat:
                          for_each: >
                            {{
                              home_page.chips
                              | selectattr("entity", "defined")
                              | rejectattr("entity", "eq", [])
                              | selectattr("icon_color_rgb", "defined")
                              | rejectattr("icon_color_rgb", "eq", [])
                              | rejectattr("icon_color_rgb", "eq", [0, 0, 0])
                              | list
                            }}
                          sequence:
                            - *delay_boot
                            - service: 'esphome.{{ nspanel_name }}_component_color'
                              data:
                                id: 'home.{{ repeat.item.component }}'
                                color: '{{ repeat.item.icon_color_rgb }}'
                              continue_on_error: true

                      ##### Home page - Values 01 - 04
                      - repeat:
                          for_each: '{{ home_page.entity_value | list }}'
                          sequence:
                            - variables:
                                value_entity_id_is_valid: '{{ repeat.item.entity is defined and repeat.item.entity is string and repeat.item.entity.split(".") | count == 2 }}'
                            - *delay_boot
                            - service: 'esphome.{{ nspanel_name }}_component_color'
                              data:
                                id: '{{ repeat.item.page }}.{{ repeat.item.component }}'
                                color: '{{ repeat.item.label_color_rgb if value_entity_id_is_valid else [0, 0, 0] }}'
                              continue_on_error: true
                            - *delay_boot
                            - service: 'esphome.{{ nspanel_name }}_component_text'
                              data:
                                id: '{{ repeat.item.page }}.{{ repeat.item.component }}_icon'
                                txt: >
                                  {{
                                    all_icons[repeat.item.icon.split("mdi:")[1]]
                                    if
                                      value_entity_id_is_valid and
                                      repeat.item.icon is defined and
                                      repeat.item.icon is string and
                                      repeat.item.icon.split("mdi:") | count == 2 and
                                      repeat.item.icon.split("mdi:")[1] in all_icons
                                    else all_icons.blank
                                  }}
                              continue_on_error: true

                      ##### NSPanel Left Button Name #####
                      - if: '{{ hardware.buttons.left.name | length > 0 }}'
                        then:
                          ### LABEL Font Color ###
                          - *delay_boot
                          - service: 'esphome.{{ nspanel_name }}_component_color'
                            data:
                              id: home.left_bt_text
                              color: !input left_button_color
                            continue_on_error: true
                          ### LABEL Font ###
                          - *delay_boot
                          - service: 'esphome.{{ nspanel_name }}_component_text'
                            data:
                              id: home.left_bt_text
                              txt: '{{ hardware.buttons.left.name }}'
                            continue_on_error: true

                      ##### NSPanel Right Button Name #####
                      - if: '{{ hardware.buttons.right.name | length > 0 }}'
                        then:
                          ### LABEL Font Color ###
                          - *delay_boot
                          - service: 'esphome.{{ nspanel_name }}_component_color'
                            data:
                              id: home.right_bt_text
                              color: !input right_button_color
                            continue_on_error: true
                          ### LABEL Font ###
                          - *delay_boot
                          - service: 'esphome.{{ nspanel_name }}_component_text'
                            data:
                              id: home.right_bt_text
                              txt: '{{ hardware.buttons.right.name }}'
                            continue_on_error: true

                      - *delay_boot
                      - service: 'esphome.{{ nspanel_name }}_qrcode'
                        data:
                          title: '{{ qrcode.title if qrcode.enabled else "" }}'
                          qrcode: '{{ qrcode.qrcode if qrcode.enabled else "" }}'
                          show: false
                        continue_on_error: true

                      - *delay_boot
                      - service: 'esphome.{{ nspanel_name }}_init_page_settings'
                        data:
                          reboot: '{{ mui[language].settings.reboot }}'
                          brightness: '{{ mui[language].settings.brightness }}'
                          bright: '{{ mui[language].settings.bright }}'
                          dim: '{{ mui[language].settings.dim }}'
                        continue_on_error: true

                      - variables:
                          climate_entity_id_valid: '{{ climate is string and climate is match "climate." }}'
                          climate_friendly_name: '{{ state_attr(climate, "friendly_name") if climate_entity_id_valid else "" }}'
                          hw_buttons_bars_pages: !input hw_buttons_bars_pages

                      - *delay_boot
                      - service: 'esphome.{{ nspanel_name }}_set_bool'
                        data:
                          component: "is_climate"
                          val: '{{ climate_entity_id_valid }}'
                        continue_on_error: true

                      - *delay_boot
                      - service: 'esphome.{{ nspanel_name }}_init_hardware'
                        data:
                          relay1_local_control: '{{ hardware.buttons.left.entity == relay01_entity }}'
                          relay1_icon: '{{ all_icons[hardware.relay1_icon.split("mdi:")[1]] if hardware.relay1_icon.split("mdi:")[1] in all_icons else all_icons["numeric-1-box-outline"] }}'
                          relay1_icon_color: !input relay01_icon_color
                          relay1_fallback: !input relay_1_local_fallback
                          relay2_local_control: '{{ hardware.buttons.right.entity == relay02_entity }}'
                          relay2_icon: '{{ all_icons[hardware.relay2_icon.split("mdi:")[1]] if hardware.relay2_icon.split("mdi:")[1] in all_icons else all_icons["numeric-2-box-outline"] }}'
                          relay2_icon_color: !input relay02_icon_color
                          relay2_fallback: !input relay_2_local_fallback
                          button_left: '{{ hardware.buttons.left.bar_always_visible or hardware.buttons.left.state_entity_is_valid or hardware.buttons.left.entity_is_valid }}'
                          button_right: '{{ hardware.buttons.right.bar_always_visible or hardware.buttons.right.state_entity_is_valid or hardware.buttons.right.entity_is_valid }}'
                          button_bar_pages: '{{ hw_buttons_bars_pages | map("int") | sum }}'
                          button_bar_color_on: !input hw_buttons_bar_color_on
                          button_bar_color_off: !input hw_buttons_bar_color_off
                          embedded_climate: '{{ climate == thermostat_embedded }}'
                          embedded_climate_friendly_name: '{{ climate_friendly_name if climate_friendly_name else "" }}'  # To do: v4.4 - This will send name even when no embedded climate
                          embedded_indoor_temperature: '{{ embedded_indoor_temperature }}'
                        continue_on_error: true

                        # Update Hardware buttons bars states
                      - if: '{{ true }}'
                        then:
                          - variables:
                              hw_btn_left_state: >
                                {{ (states(hardware.buttons.left.state_entity) | default("unavailable")
                                  if hardware.buttons.left.state_entity_is_valid
                                  else (states(hardware.buttons.left.entity) | default("unavailable")
                                    if hardware.buttons.left.entity_is_valid else "unavailable")) in enum.states.on }}
                              hw_btn_right_state: >
                                {{ (states(hardware.buttons.right.state_entity) | default("unavailable")
                                  if hardware.buttons.right.state_entity_is_valid
                                  else (states(hardware.buttons.right.entity) | default("unavailable")
                                    if hardware.buttons.right.entity_is_valid else "unavailable")) in enum.states.on }}
                          - if: '{{ hw_btn_left_state == hw_btn_right_state }}'
                            then:  # Save one service call if both buttons have the same state
                              - *delay_boot
                              - service: 'esphome.{{ nspanel_name }}_hw_button_state'
                                data:
                                  button_mask: 3  # Both buttons
                                  state: '{{ hw_btn_left_state }}'
                                continue_on_error: true
                            else:  # Send individual calls if the buttons have different states
                              - *delay_boot
                              - service: 'esphome.{{ nspanel_name }}_hw_button_state'
                                data:
                                  button_mask: 1  # Left button
                                  state: '{{ hw_btn_left_state }}'
                                continue_on_error: true
                              - *delay_boot
                              - service: 'esphome.{{ nspanel_name }}_hw_button_state'
                                data:
                                  button_mask: 2  # Right button
                                  state: '{{ hw_btn_right_state }}'
                                continue_on_error: true

                      # Global settings
                      - variables:
                          entitypages_value_alignment: !input entitypages_value_alignment
                      - *delay_boot
                      - service: 'esphome.{{ nspanel_name }}_init_global'
                        data:
                          blueprint_version: '{{ blueprint_version }}'
                          ent_value_xcen: '{{ int(entitypages_value_alignment) if is_number(entitypages_value_alignment) else 0 }}'
                          mui_please_confirm: '{{ mui[language].please_confirm }}'
                          mui_unavailable: '{{ mui[language].unavailable }}'
                          screensaver_time: !input screensaver_display_time
                          screensaver_time_font: !input screensaver_display_time_font_size
                          screensaver_time_color: !input screensaver_display_time_font_color
                          decimal_separator: !input decimal_separator
                          # bytes_per_char: '{{ mui[language].bytes_per_char }}'  # To do: Enable this on new protocol
                        continue_on_error: true

                      # Disable empty buttons pages
                      - repeat:
                          for_each: '{{ pages.buttonpages }}'
                          sequence:
                            - *delay_boot
                            - service: 'esphome.{{ nspanel_name }}_command'
                              data:
                                cmd: >
                                  is_{{ repeat.item }}={{
                                    1
                                    if
                                      buttons_pages.buttons
                                      | selectattr("page", "defined")
                                      | selectattr("page", "eq", repeat.item)
                                      | selectattr("entity", "defined")
                                      | rejectattr("entity", "eq", [])
                                      | list
                                      | count > 0
                                    else 0
                                  }}
                              continue_on_error: true

                      # Disable empty entity pages
                      - repeat:
                          for_each: '{{ pages.entitypages }}'
                          sequence:
                            - *delay_boot
                            - service: 'esphome.{{ nspanel_name }}_command'
                              data:
                                cmd: >
                                  is_{{ repeat.item }}={{
                                    1
                                    if
                                      entities_pages.entities
                                      | selectattr("page", "defined")
                                      | selectattr("page", "eq", repeat.item)
                                      | selectattr("entity", "defined")
                                      | rejectattr("entity", "eq", [])
                                      | list
                                      | count > 0
                                    else 0
                                  }}
                              continue_on_error: true

                      ##### Update Date & Time before showing the Home page #####
                      - *refresh-date

              ##### Service call #####
              - alias: NSPanel service call
                conditions:
                  - '{{ nspanel_event.type == "service_call"}}'
                  - '{{ nspanel_event.service is defined and nspanel_event.service is string and nspanel_event.service | length > 0 }}'
                  - '{{ nspanel_event.service.split(".") | count == 2 }}'  # prevents call to null service
                  - '{{ nspanel_event.service.split(".")[0] | length > 0 and nspanel_event.service.split(".")[0] not in ["null", None] }}'  # prevents call to null service
                  - '{{ nspanel_event.service.split(".")[1] | length > 0 and nspanel_event.service.split(".")[1] not in ["null", None] }}'  # prevents call to null service
                  - '{{ nspanel_event.service | length > (2+nspanel_event.service.index(".")) }}'  # prevents call to null service
                  - '{{ nspanel_event.service is not match "alarm_control_panel." }}'  # Prevent the use of this call for alarm control due to safety reasons
                  - '{{ nspanel_event.entity is defined and nspanel_event.entity is string and nspanel_event.entity | length > 0 }}'
                sequence:
                  - if: '{{ nspanel_event.key is defined and nspanel_event.key is string and nspanel_event.key | length > 0 }}'
                    then:
                      - choose:
                          - alias: "climate.set_temperature"
                            conditions:
                              - '{{ nspanel_event.service == "climate.set_temperature" }}'
                              - '{{ nspanel_event.key in ["target_temp_high", "target_temp_low"] }}'
                            sequence:
                              - variables:
                                  target_temp_low: >
                                    {{
                                      nspanel_event.value
                                      if nspanel_event.key == "target_temp_low"
                                      else state_attr(nspanel_event.entity, "target_temp_low") | int(-999)
                                    }}
                                  target_temp_high: >
                                    {{
                                      nspanel_event.value
                                      if nspanel_event.key == "target_temp_high"
                                      else state_attr(nspanel_event.entity, "target_temp_high") | int(-999)
                                    }}
                              - condition:
                                  - '{{ is_number(target_temp_low) and target_temp_low > -999 }}'
                                  - '{{ is_number(target_temp_high) and target_temp_high > -999 }}'
                              - service: '{{ nspanel_event.service }}'
                                data:
                                  target_temp_low: '{{ target_temp_low }}'
                                  target_temp_high: '{{ target_temp_high }}'
                                target:
                                  entity_id: '{{ nspanel_event.entity }}'
                                continue_on_error: true
                          - alias: "fan.turn_on"
                            conditions:
                              - '{{ nspanel_event.service == "fan.turn_on" }}'
                              - '{{ nspanel_event.key == "percentage" }}'
                            sequence:
                              - service: '{{ nspanel_event.service }}'
                                data: {}
                                target:
                                  entity_id: '{{ nspanel_event.entity }}'
                                continue_on_error: true
                              - delay:
                                  milliseconds: 100
                              - variables:
                                  percentage_srv: "fan.set_percentage"  # This is used to fool engines checking for calls to unknown services
                              - service: '{{ percentage_srv }}'
                                data:
                                  percentage: '{{ nspanel_event.value }}'
                                target:
                                  entity_id: '{{ nspanel_event.entity }}'
                                continue_on_error: true
                          - alias: "fan.oscillate"
                            conditions:
                              - '{{ nspanel_event.service == "fan.oscillate" }}'
                              - '{{ nspanel_event.key == "oscillating" }}'
                            sequence:
                              - variables:
                                  oscillating: '{{ state_attr(nspanel_event.entity, "oscillating") | default(true) }}'
                              - service: '{{ nspanel_event.service }}'
                                data:
                                  oscillating: '{{ true if oscillating is boolean and not oscillating else false }}'
                                target:
                                  entity_id: '{{ nspanel_event.entity }}'
                                continue_on_error: true
                          - alias: "light.turn_on (rgb_color)"
                            conditions:
                              - '{{ nspanel_event.service == "light.turn_on" }}'
                              - '{{ nspanel_event.key == "rgb_color" }}'
                              - '{{ nspanel_event.red is defined and nspanel_event.green is defined and nspanel_event.blue is defined }}'
                            sequence:
                              - service: '{{ nspanel_event.service }}'
                                data:
                                  rgb_color: '{{ [nspanel_event.red, nspanel_event.green, nspanel_event.blue] }}'
                                target:
                                  entity_id: '{{ nspanel_event.entity }}'
                                continue_on_error: true
                        default:
                          - service: '{{ nspanel_event.service }}'
                            data: {"{{ nspanel_event.key }}":"{{ nspanel_event.value }}"}
                            target:
                              entity_id: '{{ nspanel_event.entity }}'
                            continue_on_error: true
                    else:
                      - service: '{{ nspanel_event.service }}'
                        target:
                          entity_id: '{{ nspanel_event.entity }}'
                        continue_on_error: true
                  - delay:
                      milliseconds: '{{ media_player_update_delay }}'
                  - service: homeassistant.update_entity
                    data:
                      entity_id: '{{ nspanel_event.entity }}'
                    continue_on_error: true

              ##### Page changed #####
              - alias: Page changed
                conditions:
                  - '{{ nspanel_event.type == "page_changed"}}'
                sequence:
                  - choose:
                      ## PAGE HOME ##
                      - alias: Home page
                        conditions: '{{ nspanel_event.page == pages.home }}'
                        sequence: &refresh_page_home
                          - variables:
                              page_constructor: true
                          ##### Weather Icon Home Page #####
                          - *delay_default
                          - &refresh-page_home-weather_pic
                            service: 'esphome.{{ nspanel_name }}_command'
                            data:
                              cmd: home.weather.pic={{ nextion.pic.weather[
                                                        states(weather_entity) | default("unavailable")
                                                        if weather_entity is string and has_value(weather_entity)
                                                        else "unavailable"] | default(1) }}
                            continue_on_error: true

                          ##### NSPanel Outdoor Temp #####
                          - &refresh-page_home-outdoor_temp
                            if: '{{ true }}'
                            then:
                              - variables:
                                  outdoor_temp_entity: !input outdoortemp
                                  outdoor_temp_state: >
                                    {{
                                      states(outdoor_temp_entity, rounded=true) | default("unavailable")
                                      if outdoor_temp_entity is string and outdoor_temp_entity is match "sensor." and has_value(outdoor_temp_entity)
                                      else "unavailable"
                                    }}
                                  outdoor_temp: >
                                    {{
                                      outdoor_temp_state if is_number(outdoor_temp_state)
                                      else state_attr(weather_entity, "temperature") | default("unavailable")
                                      if weather_entity is string else "unavailable"
                                    }}
                              - condition: '{{ is_number(outdoor_temp) }}'
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_component_text'
                                data:
                                  id: home.outdoor_temp
                                  txt: '{{ outdoor_temp | round(1) ~ temperature_units }}'
                                continue_on_error: true

                          ##### NSPanel Indoor Temp #####
                          - &refresh_page_home_indoor_temp
                            if: '{{ true }}'
                            then:
                              - variables:
                                  home_indoor_temp_visible: !input home_indoor_temp_visible
                              - if: '{{ page_constructor is defined and page_constructor }}'
                                then:
                                  - *delay_default
                                  - service: 'esphome.{{ nspanel_name }}_components_visibility'
                                    data:
                                      ids: ["home.indr_temp", "home.indr_temp_icon"]
                                      visible: '{{ home_indoor_temp_visible }}'
                                    continue_on_error: true
                              - condition: '{{ home_indoor_temp_visible and not embedded_indoor_temperature }}'
                              - variables:
                                  temperature_sensor: '{{ indoor_temperature_sensor }}'
                                  indoor_temp:
                                    state: '{{ states(temperature_sensor, rounded=true) | default("unavailable") }}'
                                    sensor_uom: '{{ state_attr(temperature_sensor, "unit_of_measurement") }}'
                                    nspaneltemp_uom: '{{ state_attr(nspaneltemp, "unit_of_measurement") }}'
                                  indoor_temp_units: >
                                      {{
                                        indoor_temp.sensor_uom if indoor_temp.sensor_uom is string and indoor_temp.sensor_uom | length > 0
                                        else
                                          (
                                            indoor_temp.nspaneltemp_uom if indoor_temp.nspaneltemp_uom is string and indoor_temp.nspaneltemp_uom | length > 0
                                            else temperature_units
                                          )
                                      }}
                              - condition: '{{ is_number(indoor_temp.state) }}'
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_component_text'
                                data:
                                  id: home.indr_temp
                                  txt: '{{ indoor_temp.state | round(1) ~ indoor_temp_units if not embedded_indoor_temperature else "" }}'
                                continue_on_error: true

                          ###### Notification button ######
                          - &refresh_page_home_notification_button
                            if: '{{ true }}'
                            then:
                              - &variables_home_page_notify_button
                                variables:
                                  notification_icon_color_normal: !input home_button04_icon_color01
                                  notification_icon_color_unread: !input home_button04_icon_color02
                                  bt_notific_icon: !input home_button04_icon
                                  notification_text: 'sensor.{{ nspanel_name }}_notification_text'
                                  notification_unread: 'switch.{{ nspanel_name }}_notification_unread'
                                  notification_text_state: '{{ states(notification_text) if has_value(notification_text) else "" }}'
                                  notification_unread_state: '{{ states(notification_unread) | default(true) }}'
                                  notification_visible: '{{ notification_text_state is string and notification_text_state | length > 0 }}'
                                  notification_icon: >
                                    {{
                                      (
                                        all_icons[bt_notific_icon.split(":")[1]]
                                        if bt_notific_icon is string and bt_notific_icon.split(":")[1] in all_icons
                                        else all_icons.email
                                      ) if notification_visible else ""
                                    }}
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_icon'
                                data:
                                  id: home.bt_notific
                                  icon: '{{ notification_icon }}'
                                  icon_color: '{{ notification_icon_color_unread if notification_unread_state else notification_icon_color_normal }}'
                                  visible: '{{ notification_visible }}'
                                continue_on_error: true

                          ###### Custom buttons ######
                          - repeat:
                              for_each: '{{ home_page.custom_buttons | list }}'
                              sequence: &display_home_page_custom_buttons
                                - variables:
                                    custom_button_entity_id_is_valid: '{{ repeat.item.entity is defined and repeat.item.entity is string and repeat.item.entity.split(".") | count == 2 }}'
                                    page_constructor: '{{ page_constructor is defined and page_constructor }}'
                                - condition: '{{ custom_button_entity_id_is_valid or page_constructor }}'
                                - *delay_default
                                - if: '{{ custom_button_entity_id_is_valid }}'
                                  then:
                                    - variables:
                                        entity_id: '{{ repeat.item.entity }}'
                                        overlap:
                                          icon: '{{ repeat.item.icon if repeat.item.icon is defined else None }}'
                                    - *variable_entity
                                    - service: 'esphome.{{ nspanel_name }}_icon'
                                      data:
                                        id: 'home.{{ repeat.item.component }}'
                                        icon: '{{ entity.icon if entity.icon is defined else all_icons.blank }}'
                                        icon_color: '{{ entity.icon_color if entity.icon_color is defined else [0, 0, 0] }}'
                                        visible: true
                                      continue_on_error: true
                                  else:
                                    - service: 'esphome.{{ nspanel_name }}_icon'
                                      data:
                                        id: 'home.{{ repeat.item.component }}'
                                        icon: '{{ all_icons.blank }}'
                                        icon_color: '{{ [0, 0, 0] }}'
                                        visible: false
                                      continue_on_error: true

                          ###### Climate chip ######
                          - &update-home_page-climate_chip
                            if: '{{ (not embedded_climate) and climate is string and climate is match "climate." }}'
                            then:
                              - variables:
                                  entity_id: '{{ climate }}'
                              - *variable_entity
                              - condition: '{{ entity_id_valid }}'
                              - variables:
                                  hvac_action: '{{ state_attr(entity_id, "hvac_action") }}'
                                  climate_chip_always_visible: !input climate_chip_always_visible
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_icon'
                                data:
                                  id: home.chip_climate
                                  icon: '{{ entity.icon if entity.icon is defined else "" }}'
                                  icon_color: '{{ entity.icon_color if entity.icon_color is defined else [] }}'
                                  visible: >
                                    {{
                                      entity_has_value and
                                      (
                                        climate_chip_always_visible or
                                        entity_state in ["heating", "cooling", "drying", "fan_only"] or
                                        (
                                          entity_state not in ["idle", "off"] and
                                          hvac_action in ["heating", "cooling", "drying", "fan_only"]
                                        )
                                      )
                                    }}
                                continue_on_error: true

                          ###### Status / Chips bar ######
                          - repeat:
                              for_each: >
                                {{
                                  home_page.chips
                                  | selectattr("entity", "defined")
                                  | rejectattr("entity", "eq", [])
                                  | list
                                }}
                              sequence:
                                - &display_home_page_status_bar
                                  if: '{{ repeat.item.entity is defined and repeat.item.entity is string and repeat.item.entity.split(".") | count == 2 }}'
                                  then:
                                    - *delay_default
                                    - variables:
                                        entity_id: '{{ repeat.item.entity }}'
                                        overlap:
                                          icon: '{{ repeat.item.icon if repeat.item.icon is defined else None }}'
                                          icon_color: >
                                            {{
                                              repeat.item.icon_color_rgb
                                              if
                                                repeat.item.icon_color_rgb is defined and
                                                repeat.item.icon_color_rgb is sequence and
                                                repeat.item.icon_color_rgb | count == 3 and
                                                repeat.item.icon_color_rgb != [0, 0, 0]
                                              else None
                                            }}
                                    - *variable_entity
                                    - condition: '{{ entity_has_value }}'
                                    - variables:
                                        entity_hvac_action: '{{ state_attr(entity_id, "hvac_action") | default("") if entity_domain == "climate" else "unknown" }}'
                                        entity_state: >
                                          {{
                                            (entity_hvac_action if entity_hvac_action and entity_hvac_action not in enum.states.unknown else entity_state)
                                            if entity_domain == "climate" else entity_state
                                          }}
                                        chip_visible: >
                                          {{
                                            (
                                              (not repeat.item.inverted) and
                                              (
                                                (entity_state in enum.states.on) or
                                                (entity_domain != "climate" and entity_domain in enum.states and entity_state in enum.states[entity_domain].on) or
                                                (entity_domain == "climate" and entity_state in ["heating", "cooling", "drying", "fan_only"])
                                              )
                                            ) or
                                            (
                                              (repeat.item.inverted) and
                                              (
                                                (entity_state in enum.states.off) or
                                                (entity_domain in enum.states and entity_state in enum.states[entity_domain].off) or
                                                (entity_domain == "climate" and entity_state not in ["heating", "cooling", "drying", "fan_only"])
                                              )
                                            )
                                          }}
                                    - *delay_default
                                    - service: 'esphome.{{ nspanel_name }}_icon'
                                      data:
                                        id: 'home.{{ repeat.item.component }}'
                                        icon: '{{ entity.icon if chip_visible and entity.icon is defined else "" }}'
                                        icon_color: >
                                          {{
                                            entity.icon_color
                                            if
                                              chip_visible and
                                              entity.icon_color is defined and
                                              icon_color is not sequence
                                            else []
                                          }}
                                        visible: '{{ chip_visible }}'
                                      continue_on_error: true

                          ##### Home page - Values 01 - 04
                          - repeat:
                              for_each: >
                                {{
                                  home_page.entity_value
                                  | selectattr("entity", "defined")
                                  | rejectattr("entity", "eq", [])
                                  | list
                                }}
                              sequence:
                                - &display_value
                                  if: >
                                    {{
                                      repeat.item.entity is defined and
                                      repeat.item.entity is string and
                                      has_value(repeat.item.entity)
                                    }}
                                  then:
                                    - *delay_default
                                    - variables:
                                        entity_id: '{{ repeat.item.entity }}'
                                        overlap:
                                          icon: '{{ repeat.item.icon if repeat.item.icon is defined else None }}'
                                          icon_color: >
                                            {{
                                              repeat.item.icon_color_rgb
                                              if
                                                repeat.item.icon_color_rgb is defined and
                                                repeat.item.icon_color_rgb is sequence and
                                                repeat.item.icon_color_rgb != [200, 204, 200]
                                              else None
                                            }}
                                    - *variable_entity
                                    - if: '{{ entity_has_value }}'
                                      then:
                                        - variables:
                                            unit_of_measurement_raw: '{{ state_attr(entity_id, "unit_of_measurement") | default("") }}'
                                            unit_of_measurement: >
                                              {{
                                                unit_of_measurement_raw
                                                if unit_of_measurement_raw and unit_of_measurement_raw is string and unit_of_measurement_raw | length > 0
                                                else ""
                                              }}
                                        - if: '{{ overlap.icon is not string }}'  # Do not plot icon if it has overlap
                                          then:
                                            - *delay_default
                                            - service: 'esphome.{{ nspanel_name }}_component_text'
                                              data:
                                                id: '{{ repeat.item.page }}.{{ repeat.item.component }}_icon'
                                                txt: '{{ entity.icon }}'
                                              continue_on_error: true
                                        - if: '{{ entity.icon_color != [200, 204, 200] }}'
                                          then:
                                            - *delay_default
                                            - service: 'esphome.{{ nspanel_name }}_component_color'
                                              data:
                                                id: '{{ repeat.item.page }}.{{ repeat.item.component }}_icon'
                                                color: '{{ entity.icon_color }}'
                                              continue_on_error: true

                                        - *delay_default
                                        - service: 'esphome.{{ nspanel_name }}_component_text'
                                          data:
                                            id: '{{ repeat.item.page }}.{{ repeat.item.component }}'
                                            txt: &value_with_unit_and_translations >
                                              {{
                                                (
                                                  (states(entity_id, rounded=true) ~ (unit_of_measurement if unit_of_measurement is string and unit_of_measurement | length > 0 else ""))
                                                  if is_number(entity_state)
                                                  else state_translated(entity_id)
                                                )
                                                if entity_id_valid and entity_has_value
                                                else mui[language].unavailable
                                              }}
                                          continue_on_error: true

                      ## BUTTON PAGES 01 - 04 ##
                      - alias: Button pages
                        conditions: '{{ nspanel_event.page in pages.buttonpages }}'
                        sequence: &refresh_page_buttonpage
                          - &variables_page_buttons
                            variables:
                              event_page: '{{ nspanel_event.page if nspanel_event is defined and nspanel_event.page is defined else pages.current }}'
                              button_pages_icon_size: !input button_pages_icon_size
                              ##### BUTTON Page Labels #####
                              confirm_list: >
                                {{
                                  buttons_pages.buttons
                                  | selectattr("page", "defined")
                                  | selectattr("page", "eq", event_page)
                                  | sort(attribute="component")
                                  | map(attribute="confirm")
                                  | list
                                }}
                              confirm_value: >
                                {% set ns = namespace(decimal_value = 0, index = 0) %}
                                {% for confirm_item in confirm_list %}
                                    {% if (confirm_item) %}
                                        {% set ns.decimal_value = ns.decimal_value + (2 ** ns.index) %}
                                    {% endif %}
                                    {% set ns.index = ns.index + 1 %}
                                {% endfor %}
                                {{ ns.decimal_value }}
                          - if: '{{ event_page in pages.buttonpages }}'
                            then:
                              ##### Button page Label #####
                              - if: >
                                  {{
                                    buttons_pages.labels[event_page] != None and
                                    buttons_pages.labels[event_page] != [] and
                                    (buttons_pages.labels[event_page] | string) | length > 0
                                  }}
                                then:
                                  - *delay_default
                                  - service: 'esphome.{{ nspanel_name }}_component_text'
                                    data:
                                      id: page_label
                                      txt: '{{ buttons_pages.labels[event_page] | string }}'
                                    continue_on_error: true

                              ###### Confirm buttons ######
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_component_val'
                                data:
                                  id: confirm
                                  val: '{{ confirm_value }}'
                                continue_on_error: true

                              ##### NSPanel build Button page #####
                              - repeat:
                                  for_each: >
                                    {{
                                      buttons_pages.buttons
                                      | selectattr("page", "defined")
                                      | selectattr("page", "eq", event_page)
                                      | selectattr("entity", "defined")
                                      | rejectattr("entity", "eq", [])
                                      | list
                                    }}
                                  sequence: &display_button_page_button
                                    - condition: '{{ repeat.item.entity is defined and repeat.item.entity is string and repeat.item.entity | length > 0 }}'
                                    - *delay_default
                                    - variables:
                                        entity_id: '{{ repeat.item.entity }}'
                                        overlap:
                                          icon: '{{ repeat.item.icon if repeat.item.icon is defined else None }}'
                                          icon_color: '{{ repeat.item.icon_color_rgb if repeat.item.icon_color_rgb is defined else None }}'
                                          name: '{{ repeat.item.name if repeat.item.name is defined else None }}'
                                    - *variable_entity
                                    - variables:
                                        current_entity_state_available: '{{ entity_state not in ["unavailable"] }}'
                                        btn_state: >  # Button state (on = true or off = false)
                                          {{
                                            (entity_state in enum.states.on and entity_domain not in ["automation"])
                                            or (entity_domain == "climate" and entity_state != "off")
                                            or (entity_domain in ["button", "input_button", "scene", "automation", "remote"] and trigger.id is match "current_state_entity")
                                          }}
                                        btn_bri_txt: >  # Buttons value (brightness, temperature, etc.)
                                          {% if not has_value(entity_id) %} 0
                                          {% elif entity_domain == "light" and entity_state == "on" %}
                                            {% set entity_brightness = state_attr(entity_id, "brightness") %}
                                            {% set entity_brightness_index = entity_brightness/255 if entity_brightness and is_number(entity_brightness) else 0 %}
                                            {{ (entity_brightness_index*100) | round(0) }}%
                                          {% elif entity_domain == "fan" and entity_state == "on" and state_attr(entity_id, "percentage") | int(0) > 0 %}
                                            {{ state_attr(entity_id, "percentage") | round(0, default=0) }}%
                                          {% elif entity_domain == "cover" and entity_state in ["open", "opening", "closing"] and is_number(state_attr(entity_id, "current_position")) %}
                                            {{ (state_attr(entity_id, "current_position") | int(100)) | round(0) }}%
                                          {% elif entity_domain == "climate" and is_number(state_attr(entity_id, 'current_temperature')) %}
                                            {% set current_temperature = state_attr(entity_id, 'current_temperature') | float %}
                                            {{ current_temperature | round(0 if current_temperature >= 100 or temperature_units in ["F", "f", "°F", "°f", "K", "k"] else 1) }}{{ temperature_units}}
                                          {% else %} 0
                                          {% endif %}
                                    - *delay_default
                                    - service: 'esphome.{{ nspanel_name }}_button'
                                      data:
                                        page: '{{ repeat.item.page }}'
                                        id: '{{ repeat.item.component }}'
                                        state: '{{ btn_state if btn_state else false }}'
                                        icon: '{{ entity.icon }}'
                                        icon_color: '{{ entity.icon_color }}'
                                        icon_font: '{{ button_pages_icon_size if is_number(button_pages_icon_size) else 8 }}'
                                        bri: '{{ btn_bri_txt if btn_bri_txt and btn_bri_txt != "0%" else "" }}'
                                        label: '{{ entity.name }}'
                                      continue_on_error: true
                                    - if:
                                        - '{{ entity_domain in ["automation", "button", "input_button", "remote", "scene"] }}'
                                        - '{{ trigger.id is match "current_state_entity" }}'
                                      then:
                                        - delay:
                                            milliseconds: 800
                                        - service: 'esphome.{{ nspanel_name }}_button'
                                          data:
                                            page: '{{ repeat.item.page }}'
                                            id: '{{ repeat.item.component }}'
                                            state: false
                                            icon: '{{ entity.icon }}'
                                            icon_color: '{{ nextion.color.grey_light }}'
                                            icon_font: '{{ button_pages_icon_size if is_number(button_pages_icon_size) else 8 }}'
                                            bri: '{{ btn_bri_txt }}'
                                            label: '{{ entity.name }}'
                                          continue_on_error: true

                      ## PAGE LIGHT ##
                      - alias: Light settings page
                        conditions: '{{ nspanel_event.page == pages.light }}'
                        sequence: &refresh_page_light
                          - variables:
                              entity_id: >
                                {{
                                  nspanel_event.entity
                                  if nspanel_event is defined and nspanel_event.entity is defined
                                  else (trigger.entity_id if trigger.entity_id is defined else trigger.event.data.entity_id)
                                }}
                          - &variables_light_modes
                            variables:
                              entity_id_valid: '{{ entity_id is defined and entity_id is string and entity_id.split(".") | count == 2 }}'
                              entity_domain: '{{ entity_id.split(".")[0] if entity_id_valid }}'
                              supported_features: '{{ state_attr(entity_id, "supported_features") | int(0) }}'
                              supported_color_modes_temp: '{{ state_attr(entity_id, "supported_color_modes") | default([]) }}'
                              supported_color_modes: '{{ supported_color_modes_temp if supported_color_modes_temp else [] }}'
                              color_mode_brightness: >
                                {{
                                  entity_domain == "light" and
                                  (
                                    supported_features | bitwise_and(1) > 0 or
                                    enum.ColorMode.BRIGHTNESS in supported_color_modes or
                                    "brightness" in supported_color_modes or
                                    state_attr(entity_id, "brightness") | int(-1) >= 0
                                  )
                                }}
                              color_mode_color: >
                                {{
                                  entity_domain == "light" and
                                  (
                                    supported_features | bitwise_and(16) > 0 or
                                    enum.ColorMode.HS in supported_color_modes or
                                    enum.ColorMode.XY in supported_color_modes or
                                    enum.ColorMode.RGB in supported_color_modes or
                                    enum.ColorMode.RGBW in supported_color_modes or
                                    enum.ColorMode.RGBWW in supported_color_modes or                                    "hs" in supported_color_modes or
                                    "xy" in supported_color_modes or
                                    "rgb" in supported_color_modes or
                                    "rgbw" in supported_color_modes or
                                    "rgbww" in supported_color_modes or
                                    state_attr(entity_id, "rgb_color") | default("unknown") is sequence
                                  )
                                }}
                              color_mode_color_temp: >
                                {{
                                  entity_domain == "light" and
                                  (
                                    supported_features | bitwise_and(2) > 0 or
                                    enum.ColorMode.COLOR_TEMP in supported_color_modes or
                                    "color_temp" in supported_color_modes or
                                    state_attr(entity_id, "color_temp") | int(-1) >= 0
                                  )
                                }}
                          ##### LIGHT State #####
                          - variables:
                              curr_brightness: '{{ (state_attr(entity_id, "brightness") | int(0) * 100 / 255) | round(0) }}'
                          - *delay_default
                          - service: 'esphome.{{ nspanel_name }}_component_val'
                            data:
                              id: light.lightslider
                              val: '{{ curr_brightness }}'
                            continue_on_error: true
                          - *delay_default
                          - service: 'esphome.{{ nspanel_name }}_component_text'
                            data:
                              id: light.light_value
                              txt: '{{ curr_brightness }}%'
                            continue_on_error: true
                          - *delay_default
                          - service: 'esphome.{{ nspanel_name }}_component_text'
                            data:
                              id: light.light_value_2
                              txt: '{{ curr_brightness }}%'
                            continue_on_error: true

                          ##### LIGHT Check Color_Temp Value is available when yes send some current Values #####
                          - if: '{{ color_mode_color_temp }}'
                            then:
                              - variables:
                                  curr_color_temp: '{{ state_attr(entity_id, "color_temp") | int(-1) }}'
                                  min_mireds: '{{ state_attr(entity_id, "min_mireds") | int(153) }}'
                                  max_mireds: '{{ state_attr(entity_id, "max_mireds") | int(500) }}'
                              - variables:
                                  curr_color_temp: >
                                    {{
                                      curr_color_temp
                                      if curr_color_temp >= min_mireds and curr_color_temp <= max_mireds
                                      else ((min_mireds+max_mireds)/2) | int(327)
                                    }}
                              - condition: '{{ is_number(curr_color_temp) }}'
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_component_text'
                                data:
                                  id: light.temp_value
                                  txt: '{{ curr_color_temp }}'
                                continue_on_error: true
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_component_text'
                                data:
                                  id: light.temp_value_2
                                  txt: '{{ curr_color_temp }}'
                                continue_on_error: true
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_component_val'
                                data:
                                  id: light.tempslider
                                  val: '{{ curr_color_temp }}'
                                continue_on_error: true
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_command'
                                data:
                                  cmd: tempslider.minval={{ min_mireds }}
                                continue_on_error: true
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_command'
                                data:
                                  cmd: tempslider.maxval={{ max_mireds }}
                                continue_on_error: true
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_component_color'
                                data:
                                  id: power_button
                                  color: [192, 192, 192]
                                continue_on_error: true
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_components_visibility'
                                data:
                                  ids: ["temp_button", "temp_value_2", "temp_touch"]
                                  visible: true
                                continue_on_error: true

                          ##### Hide color button when not supported #####
                          - if: '{{ color_mode_color }}'
                            then:
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_components_visibility'
                                data:
                                  ids: ["color_button", "color_touch"]
                                  visible: true
                                continue_on_error: true

                      ## PAGE COVER ##
                      - alias: Cover settings page
                        conditions: '{{ nspanel_event.page == pages.cover }}'
                        sequence: &refresh_page_cover
                          - variables:
                              cover_entity: >
                                {{
                                  nspanel_event.entity
                                  if nspanel_event is defined and nspanel_event.entity is defined
                                  else (trigger.entity_id if trigger.entity_id is defined else trigger.event.data.entity_id)
                                }}
                              entity_device_class: '{{ state_attr(cover_entity, "device_class") | default("") }}'
                              cover_icons:
                                open: >
                                  {{
                                    all_icons[device_class_icons.cover[entity_device_class + "-open"]]
                                    if
                                      entity_device_class is defined and
                                      entity_device_class is string and
                                      entity_device_class | length > 0 and
                                      (entity_device_class ~ "-open") in device_class_icons.cover and
                                      device_class_icons.cover[entity_device_class ~ "-open"] in all_icons
                                    else all_icons[device_class_icons.cover["shutter-open"]]
                                  }}
                                close: >
                                  {{
                                    all_icons[device_class_icons.cover[entity_device_class + "-closed"]]
                                    if
                                      entity_device_class is defined and
                                      entity_device_class is string and
                                      entity_device_class | length > 0 and
                                      (entity_device_class ~ "-closed") in device_class_icons.cover and
                                      device_class_icons.cover[entity_device_class ~ "-closed"] in all_icons
                                    else all_icons[device_class_icons.cover["shutter-closed"]]
                                  }}
                          ##### Cover Open/close Icons #####
                          - *delay_default
                          - service: 'esphome.{{ nspanel_name }}_component_text'
                            data:
                              id: cover.cover_open
                              txt: '{{ cover_icons.open }}'
                            continue_on_error: true
                          - *delay_default
                          - service: 'esphome.{{ nspanel_name }}_component_text'
                            data:
                              id: cover.cover_close
                              txt: '{{ cover_icons.close }}'
                            continue_on_error: true

                          ##### COVER State
                          - *delay_default
                          - service: 'esphome.{{ nspanel_name }}_component_val'
                            data:
                              id: cover.coverslider
                              val: '{{ (state_attr(cover_entity, "current_position") | int ) | round(0) }}'
                            continue_on_error: true
                          - *delay_default
                          - service: 'esphome.{{ nspanel_name }}_component_text'
                            data:
                              id: cover.cover_value
                              txt: '{{ (state_attr(cover_entity, "current_position") | int ) | round(0) }} %'
                            continue_on_error: true

                          ##### COVER Battery ICON Yes / NO #####
                          - variables:
                              battery_attribute: '{{ state_attr(cover_entity, "battery") | default("unavailable") }}'
                              battery_level: >
                                {% if battery_attribute and battery_attribute not in enum.states.unknown %}
                                  {{ battery_attribute }}
                                {% elif expand(device_entities(device_id(cover_entity)))
                                        | selectattr("attributes.device_class", "defined")
                                        | selectattr("attributes.device_class", "eq", "battery")
                                        | map(attribute="state")
                                        | map("float")
                                        | list
                                        | count > 0 %}
                                  {{
                                    expand(device_entities(device_id(cover_entity)))
                                    | selectattr("attributes.device_class", "defined")
                                    | selectattr("attributes.device_class", "eq", "battery")
                                    | map(attribute="state") | map("float")
                                    | list
                                    | first
                                    | round(0)
                                  }}
                                {% elif has_value(cover_entity | replace("cover.","sensor.") ~ "_battery") %}
                                  {{ states(cover_entity | replace("cover.","sensor.") ~ "_battery", rounded=true) | default("unavailable") }}
                                {% elif has_value(cover_entity | replace("cover.","sensor.") | replace("cover", "battery")) %}
                                  {{ states(cover_entity | replace("cover.","sensor.") | replace("cover", "battery"), rounded=true) | default("unavailable") }}
                                {% else %} unavailable
                                {% endif %}
                          - if: '{{ is_number(battery_level) }}'
                            then:
                              - variables:
                                  battery_icon: >
                                    {% if battery_level >= 80 %}
                                      battery-high
                                    {% elif battery_level >= 40 %}
                                      battery-medium
                                    {% elif battery_level >= 15 %}
                                      battery-low
                                    {% else %}
                                      battery-outline
                                    {% endif %}
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_component_text'
                                data:
                                  id: cover.battery_value
                                  txt: '{{ battery_level }} %'
                                continue_on_error: true
                              ### ICON Battery Font Color ###
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_component_color'
                                data:
                                  id: cover.battery_icon
                                  color: '{{ nextion.color.grey_super_light }}'
                                continue_on_error: true
                              ### ICON Battery Font ###
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_component_text'
                                data:
                                  id: cover.battery_icon
                                  txt: '{{ all_icons[battery_icon] }}'
                                continue_on_error: true

                      ## PAGE FAN ##
                      - alias: Fan settings page
                        conditions: '{{ nspanel_event.page == pages.fan }}'
                        sequence: &refresh_page_fan
                          - variables:
                              fan_entity: >
                                {{
                                  nspanel_event.entity
                                  if nspanel_event is defined and nspanel_event.entity is defined
                                  else (trigger.entity_id if trigger.entity_id is defined else trigger.event.data.entity_id)
                                }}
                              fan:
                                supported_features: '{{ state_attr(fan_entity, "supported_features") | int(0) }}'
                                percentage: >
                                  {{
                                    state_attr(fan_entity, "percentage") | int(0)
                                    if is_state(fan_entity, 'on')
                                    else 0
                                  }}
                                steps: >
                                  {% set percentage_step = state_attr(fan_entity, "percentage_step") | float(0) %}
                                  {{
                                    (100/percentage_step) | round(0) | int(0)
                                    if percentage_step > 0
                                    else 0
                                  }}
                          - if: '{{ fan.steps > 0 and fan.supported_features | bitwise_and(2) > 0 }}'  # Oscillate
                            then:
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_component_text'
                                data:
                                  id: bt_oscillate
                                  txt: '{{ all_icons["autorenew"] if state_attr(fan_entity, "oscillating") | default(false) else all_icons["autorenew-off"] }}'
                                continue_on_error: true
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_component_color'
                                data:
                                  id: fan.bt_oscillate
                                  color: '{{ nextion.color.grey_white }}'
                                continue_on_error: true
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_components_visibility'
                                data:
                                  ids: ["fan.bt_oscillate"]
                                  visible: true
                                continue_on_error: true
                          - condition: '{{ fan.steps > 0 and fan.supported_features | bitwise_and(1) > 0 }}'  # Set speed
                          - *delay_default
                          - service: 'esphome.{{ nspanel_name }}_component_val'
                            data:
                              id: fanslider
                              val: '{{ ((fan.percentage / 100) * fan.steps) | round(0) | int(0) }}'
                            continue_on_error: true
                          - *delay_default
                          - service: 'esphome.{{ nspanel_name }}_command'
                            data:
                              cmd: fanslider.maxval={{ fan.steps }}
                            continue_on_error: true
                          - *delay_default
                          - service: 'esphome.{{ nspanel_name }}_component_text'
                            data:
                              id: fan_value
                              txt: '{{ fan.percentage }}%'
                            continue_on_error: true
                          - *delay_default
                          - service: 'esphome.{{ nspanel_name }}_component_color'
                            data:
                              id: fan.button_up
                              color: '{{ nextion.color.grey_white if fan.percentage < 100 else nextion.color.grey_dark }}'
                            continue_on_error: true
                          - *delay_default
                          - service: 'esphome.{{ nspanel_name }}_component_color'
                            data:
                              id: fan.button_down
                              color: '{{ nextion.color.grey_white if fan.percentage > 0 else nextion.color.grey_dark }}'
                            continue_on_error: true
                          - *delay_default
                          - service: 'esphome.{{ nspanel_name }}_component_color'
                            data:
                              id: power_button
                              color: [192, 192, 192]
                            continue_on_error: true

                      ## PAGE MEDIA PLAYER ##
                      - alias: Media player settings page
                        conditions: '{{ nspanel_event.page == pages.media_player }}'
                        sequence: &refresh_page_media_player
                          - variables:
                              media_player_entity: >
                                {{
                                  nspanel_event.entity
                                  if nspanel_event is defined and nspanel_event.entity is defined
                                  else (trigger.entity_id if trigger.entity_id is defined else trigger.event.data.entity_id)
                                }}
                              wait_completed: false
                          - alias: Refresh page in a loop
                            repeat:
                              sequence:
                                - service: homeassistant.update_entity
                                  data:
                                    entity_id: '{{ nspanel_event.entity }}'
                                  continue_on_error: true
                                - delay:
                                    milliseconds: '{{ media_player_update_delay }}'
                                - variables:
                                    media_player:
                                      state: '{{ states(media_player_entity) }}'
                                      is_volume_muted: '{{ state_attr(media_player_entity, "is_volume_muted") | default(false) }}'
                                      friendly_name: '{{ state_attr(media_player_entity, "friendly_name") | default("Media player") }}'
                                      volume_level: '{{ (state_attr(media_player_entity, "volume_level") | round(2, default=0) * 100) | int(0) }}'
                                      media_title: '{{ state_attr(media_player_entity, "media_title") }}'
                                      media_artist: '{{ state_attr(media_player_entity, "media_artist") }}'
                                      media_duration: '{{ state_attr(media_player_entity, "media_duration") | int(0) }}'
                                      media_position: '{{ state_attr(media_player_entity, "media_position") | int(0) }}'
                                      media_position_updated_at: '{{ state_attr(media_player_entity, "media_position_updated_at") | default(now()) }}'
                                      supported_features: >
                                        {{
                                          (1+4+8+16+32+128+256+512+4096+16384)
                                          if (state_attr(media_player_entity, "mass_player_type") | default("")) == "group"
                                          else state_attr(media_player_entity, "supported_features") | int(0)
                                        }}
                                - *delay_default
                                - service: 'esphome.{{ nspanel_name }}_page_media_player'
                                  data:
                                    entity: '{{ media_player_entity }}'
                                    state: '{{ media_player.state if media_player.state is string else "" }}'
                                    is_volume_muted: '{{ media_player.is_volume_muted if media_player.is_volume_muted is boolean else false }}'
                                    friendly_name: '{{ media_player.friendly_name if media_player.friendly_name is string else "" }}'
                                    volume_level: '{{ media_player.volume_level }}'
                                    media_title: >
                                      {{
                                        media_player.media_title
                                        if
                                          media_player.media_title is defined and
                                          media_player.media_title is string and
                                          media_player.media_title | length > 0 and
                                          media_player.media_title not in enum.states.unknown
                                        else ""
                                      }}
                                    media_artist: >
                                      {{
                                        media_player.media_artist
                                        if
                                          media_player.media_artist is defined and
                                          media_player.media_artist is string and
                                          media_player.media_artist | length > 0 and
                                          media_player.media_artist not in enum.states.unknown
                                        else ""
                                      }}
                                    media_duration: '{{ media_player.media_duration }}'
                                    media_position: '{{ media_player.media_position }}'
                                    media_position_delta: >
                                      {{
                                        (now() | as_timestamp - media_player.media_position_updated_at | as_timestamp | default(now() | as_timestamp))
                                        if
                                          media_player.media_position_updated_at and
                                          media_player.media_position_updated_at not in [None, none, "", "unknown", "unavailable", false, 0]
                                        else 0
                                      }}
                                    supported_features: '{{ media_player.supported_features }}'
                                  continue_on_error: true
                                - wait_template: '{{ states(currentpage) != pages.media_player }}'
                                  timeout:
                                    milliseconds: '{{ media_player_update_interval }}'
                                  continue_on_timeout: true
                                - variables:
                                    wait_completed: '{{ wait.completed and media_player.media_duration > 0 }}'
                              until:
                                - or:
                                    - '{{ wait_completed }}'
                                    - '{{ states(currentpage) != pages.media_player }}'  # Don't replace this by pages.current as this have to be evaluated all the time
                                    - '{{ nspanel_event.type != "page_changed" }}'

                      ## PAGE ALARM ##
                      - alias: Alarm settings page
                        conditions: '{{ nspanel_event.page == pages.alarm }}'
                        sequence: &refresh_page_alarm
                          - variables:
                              alarm_entity_temp: >
                                {{
                                  nspanel_event.entity
                                  if nspanel_event is defined and nspanel_event.entity is defined
                                  else (trigger.entity_id if trigger.entity_id is defined else trigger.event.data.entity_id)
                                }}
                              alarm_entity: >
                                {{
                                  alarm_entity_temp
                                  if alarm_entity_temp is string and alarm_entity_temp | length > 0
                                  else None
                                }}
                          - if: '{{ alarm_entity is string and alarm_entity is match "alarm_control_panel." }}'
                            then:
                              - variables:
                                  entity_id: '{{ alarm_entity }}'
                                  supported_features: '{{ state_attr(entity_id, "supported_features") | default(0) }}'
                              - *variable_entity
                              - condition: '{{ supported_features > 0 }}'
                              - variables:  # https://github.com/home-assistant/core/blob/dev/homeassistant/components/alarm_control_panel/const.py
                                  alarm:
                                    code_format: '{{ state_attr(entity_id, "code_format") }}'
                                    code_arm_required: '{{ state_attr(entity_id, "code_arm_required") | default(true) }}'
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_page_alarm'
                                data:
                                  page_title: '{{ entity.name }}'
                                  state: '{{ entity_state }}'
                                  supported_features: '{{ supported_features }}'
                                  code_format: '{{ alarm.code_format if alarm.code_format else "none" }}'
                                  code_arm_required: '{{ alarm.code_arm_required if alarm.code_arm_required else false }}'
                                  entity: '{{ entity_id }}'
                                  mui_alarm: '{{ dict.values(mui[language].alarm) | list }}'
                                continue_on_error: true

                      ## PAGE CLIMATE ##
                      - alias: Climate page
                        conditions: '{{ nspanel_event.page == pages.climate }}'
                        sequence: &refresh_page_climate
                          - &variables_climate_entity
                            variables:
                              climate_entity_temp: >
                                {{
                                  nspanel_event.entity
                                  if nspanel_event is defined and nspanel_event.entity is defined
                                  else (trigger.entity_id if trigger.entity_id is defined else trigger.event.data.entity_id)
                                }}
                              climate_entity: >
                                {{
                                  climate_entity_temp
                                  if climate_entity_temp is string and climate_entity_temp | length > 0 and climate_entity_temp != "embedded_climate"
                                  else climate
                                }}
                              settings_entity_domain: >
                                {{
                                  climate_entity.split(".")[0]
                                  if
                                    climate_entity is defined and
                                    climate_entity is string and
                                    climate_entity.split(".") | count > 0
                                  else "unknown"
                                }}
                              hvac_modes: '{{ state_attr(climate_entity, "hvac_modes") if settings_entity_domain == "climate" }}'
                              friendly_name_raw: '{{ state_attr(climate_entity, "friendly_name") }}'
                              friendly_name: '{{ friendly_name_raw if friendly_name_raw and friendly_name_raw is string else "" }}'
                          - condition: '{{ settings_entity_domain == "climate" }}'
                          - *delay_default
                          - service: 'esphome.{{ nspanel_name }}_component_text'
                            data:
                              id: page_label
                              txt: '{{ friendly_name }}'
                            continue_on_error: true

                          ##### Values #####
                          - &variables-climate_page
                            variables:
                              climate_page_entities:
                                - entity: !input 'climate_value01'
                                  icon: !input 'climate_value01_icon'
                                  icon_color_rgb: !input 'climate_value01_icon_color'
                                  label_color_rgb: !input 'climate_value01_label_color'
                                  page: climate
                                  component: value01
                                - entity: !input 'climate_value02'
                                  icon: !input 'climate_value02_icon'
                                  icon_color_rgb: !input 'climate_value02_icon_color'
                                  label_color_rgb: !input 'climate_value02_label_color'
                                  page: climate
                                  component: value02
                                - entity: !input 'climate_value03'
                                  icon: !input 'climate_value03_icon'
                                  icon_color_rgb: !input 'climate_value03_icon_color'
                                  label_color_rgb: !input 'climate_value03_label_color'
                                  page: climate
                                  component: value03
                                - entity: !input 'climate_value04'
                                  icon: !input 'climate_value04_icon'
                                  icon_color_rgb: !input 'climate_value04_icon_color'
                                  label_color_rgb: !input 'climate_value04_label_color'
                                  page: climate
                                  component: value04
                          - repeat:
                              for_each: >
                                {{
                                  climate_page_entities
                                  | selectattr("entity", "defined")
                                  | rejectattr("entity", "eq", [])
                                  | list
                                }}
                              sequence:
                                - *display_value
                                - variables:
                                    var_icon: >
                                      {{
                                        all_icons[repeat.item.icon.split("mdi:")[1]]
                                        if
                                          repeat.item.icon is defined and
                                          repeat.item.icon is string and
                                          repeat.item.icon.split("mdi:")[1] in all_icons
                                        else False
                                      }}
                                - if: '{{ var_icon != False }}'
                                  then:
                                    - *delay_default
                                    - service: 'esphome.{{ nspanel_name }}_component_text'
                                      data:
                                        id: '{{ repeat.item.page }}.{{ repeat.item.component }}_icon'
                                        txt: '{{ var_icon }}'
                                      continue_on_error: true
                                - if: '{{ repeat.item.label_color_rgb != [200, 204, 200] }}'
                                  then:
                                    - *delay_default
                                    - service: 'esphome.{{ nspanel_name }}_component_color'
                                      data:
                                        id: '{{ repeat.item.page }}.{{ repeat.item.component }}'
                                        color: '{{ repeat.item.label_color_rgb }}'
                                      continue_on_error: true

                          ##### Slider & climate values #####
                          - &climate-update_slider
                            if: '{{ not (climate_entity == climate and embedded_climate) }}'
                            then:
                              - variables:
                                  current_temp: '{{ state_attr(climate_entity, "current_temperature") | float(-999) | round(1) }}'
                                  supported_features: '{{ state_attr(climate_entity, "supported_features") | int(0) }}'
                                  is_target_temperature: '{{ supported_features | bitwise_and(1) > 0 }}'
                                  is_target_temperature_range: '{{ supported_features | bitwise_and(2) > 0 }}'
                                  target_temp: '{{ state_attr(climate_entity, "temperature") | float(-999) | round(1) if is_target_temperature else -999 }}'
                                  target_temp_high: '{{ state_attr(climate_entity, "target_temp_high") | float(-999) | round(1) if is_target_temperature_range else -999 }}'
                                  target_temp_low: '{{ state_attr(climate_entity, "target_temp_low") | float(-999) | round(1) if is_target_temperature_range else -999 }}'
                              - variables:
                                  is_target_temperature: '{{ is_target_temperature and target_temp > -999 }}'
                                  is_target_temperature_range: '{{ is_target_temperature_range and target_temp_high > -999 and target_temp_low > -999 }}'
                                  temp_step: >
                                    {% set target_temp_step = state_attr(climate_entity, "target_temp_step") %}
                                    {% if not is_number(target_temp_step) %}
                                      {% set target_temp_step = state_attr(climate_entity, "target_temperature_step") %}
                                    {% endif %}
                                    {% set target_temp_step = target_temp_step | float(0.5) | abs %}
                                    {{ ((10 * target_temp_step) | round(0) | int) if is_number(target_temp_step) and target_temp_step > 0 else 10 }}
                                  temp_offset_raw: '{{ (state_attr(climate_entity, "min_temp") | float(7) * 10) | round(0) | int }}'
                                  temp_offset: '{{ temp_offset_raw if (temp_offset_raw % temp_step) == 0 else temp_offset_raw + temp_step - (temp_offset_raw % temp_step) }}'
                                  max_temp_raw: '{{ (state_attr(climate_entity, "max_temp") | float(35) * 10) | round(0) | int }}'
                                  max_temp: '{{ (max_temp_raw / temp_step) | round * temp_step }}'
                                  total_steps: '{{ ((max_temp-temp_offset)/temp_step) | round(0) | int }}'
                                  climate_state: '{{ states(climate_entity) | default("unavailable") if climate_entity is string else "unavailable" }}'
                                  hvac_action: '{{ state_attr(climate_entity, "hvac_action") | default("") }}'
                                  hvac_modes: '{{ state_attr(climate_entity, "hvac_modes") }}'
                                  climate_action: '{{ hvac_action if hvac_action and hvac_action not in enum.states.unknown else climate_state }}'
                                  climate_icon: >
                                    {% if "off" in climate_action %}{{ all_icons.blank }}
                                    {% elif "heat_cool" in climate_action %}{{ all_icons.autorenew }}
                                    {% elif "heating" in climate_action or "heat" in climate_action %}{{ all_icons["thermometer-lines"] }}
                                    {% elif "cooling" in climate_action or "cool" in climate_action %}{{ all_icons.snowflake }}
                                    {% elif "drying" in climate_action or "dry" in climate_action %}{{ all_icons["water-percent"] }}
                                    {% elif "fan" in climate_action or "fan_only" in climate_action %}{{ all_icons.fan }}
                                    {% elif "auto" in climate_action %}{{ all_icons["calendar-sync"] }}
                                    {% elif "idle" in climate_action %}{{ all_icons.thermometer }}
                                    {% else %}{{ all_icons.blank }}
                                    {% endif %}
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_page_climate'
                                data:
                                  current_temp: '{{ current_temp }}'
                                  supported_features: '{{ supported_features }}'
                                  target_temp: '{{ target_temp }}'
                                  target_temp_high: '{{ target_temp_high }}'
                                  target_temp_low: '{{ target_temp_low }}'
                                  temp_step: '{{ temp_step }}'
                                  total_steps: '{{ total_steps }}'
                                  temp_offset: '{{ temp_offset }}'
                                  climate_icon: '{{ climate_icon }}'
                                  embedded_climate: '{{ climate_entity == thermostat_embedded }}'
                                  entity: '{{ "embedded_climate" if climate_entity == thermostat_embedded else climate_entity }}'
                                continue_on_error: true

                          ##### Climate buttons #####
                          - &climate-update_buttons
                            if: '{{ not (climate_entity == climate and embedded_climate) }}'
                            then:
                              - repeat:
                                  for_each: '{{ page_climate.buttons.hvac_mode }}'
                                  sequence:
                                    - condition: '{{ repeat.item.mode in hvac_modes }}'
                                    - *delay_default
                                    ### ICON Font Color ###
                                    - *delay_default
                                    - service: 'esphome.{{ nspanel_name }}_component_color'
                                      data:
                                        id: 'climate.{{ repeat.item.component }}'
                                        color: >
                                          {{
                                            nextion.color[repeat.item.color]
                                            if states(climate_entity) == repeat.item.mode
                                            else nextion.color.disabled
                                          }}
                                      continue_on_error: true
                                    ### ICON Font ###
                                    - *delay_default
                                    - service: 'esphome.{{ nspanel_name }}_component_text'
                                      data:
                                        id: 'climate.{{ repeat.item.component }}'
                                        txt: '{{ all_icons[repeat.item.icon] }}'
                                      continue_on_error: true
                                    ### Enable button click ###
                                    - *delay_default
                                    - service: 'esphome.{{ nspanel_name }}_components_visibility'
                                      data:
                                        ids: '{{ [ repeat.item.component ] }}'
                                        visible: true
                                      continue_on_error: true

                          ##### Climate custom buttons #####
                          - &climate-update_custom_buttons
                            if: '{{ true }}'
                            then:
                              - &climate-update_custom_buttons-variables
                                variables:
                                  climate_custom_buttons:
                                    - entity: !input climate_button08
                                      icon: !input climate_button08_icon
                                      icon_color_rgb: !input climate_button08_icon_color
                                      component: button08
                                    - entity: !input climate_button09
                                      icon: !input climate_button09_icon
                                      icon_color_rgb: !input climate_button09_icon_color
                                      component: button09
                              - &climate-update_custom_buttons-update
                                repeat:
                                  for_each: '{{ climate_custom_buttons | selectattr("entity", "defined") | rejectattr("entity", "eq", []) | list }}'
                                  sequence:
                                    - condition: '{{ repeat.item.entity is defined and repeat.item.entity is string and repeat.item.entity | length > 0 }}'
                                    - variables:
                                        entity_id: '{{ repeat.item.entity }}'
                                        overlap:
                                          icon: '{{ repeat.item.icon }}'
                                          icon_color: '{{ repeat.item.icon_color_rgb }}'
                                    - *variable_entity
                                    ### ICON Font Color ###
                                    - *delay_default
                                    - service: 'esphome.{{ nspanel_name }}_component_color'
                                      data:
                                        id: '{{ repeat.item.component }}'
                                        color: '{{ entity.icon_color }}'
                                      continue_on_error: true
                                    ### ICON Font ###
                                    - *delay_default
                                    - service: 'esphome.{{ nspanel_name }}_component_text'
                                      data:
                                        id: '{{ repeat.item.component }}'
                                        txt: '{{ entity.icon }}'
                                      continue_on_error: true
                                    ### Enable button click ###
                                    - *delay_default
                                    - service: 'esphome.{{ nspanel_name }}_components_visibility'
                                      data:
                                        ids: '{{ [ repeat.item.component ] }}'
                                        visible: true
                                      continue_on_error: true

                      ## ENTITY PAGES 01 - 04 ##
                      - alias: Entity pages
                        conditions: '{{ nspanel_event.page in pages.entitypages }}'
                        sequence: &refresh_entity_pages
                          - &variables-entity_pages
                            variables:
                              event_page: '{{ nspanel_event.page if nspanel_event is defined and nspanel_event.page is defined else pages.current }}'
                              entitypages_show_entities_icons: !input entitypages_show_entities_icons
                          ##### Entity page - Label #####
                          - if: '{{ entities_pages.labels[event_page] | length > 0 }}'
                            then:
                              - *delay_default
                              - service: 'esphome.{{ nspanel_name }}_component_text'
                                data:
                                  id: page_label
                                  txt: '{{ entities_pages.labels[event_page] }}'
                                continue_on_error: true
                          ##### Entities #####
                          - repeat:
                              for_each: >
                                {{
                                  entities_pages.entities
                                  | selectattr("page", "defined")
                                  | selectattr("page", "eq", event_page)
                                  | selectattr("entity", "defined")
                                  | rejectattr("entity", "eq", [])
                                  | list
                                }}
                              sequence: &update_entity_page_entity
                                - condition: '{{ repeat.item.entity is string and repeat.item.entity | length > 0 }}'
                                - *delay_default
                                - variables:
                                    entity_id: '{{ repeat.item.entity }}'
                                    overlap:
                                      icon: '{{ repeat.item.icon if repeat.item.icon is defined else None }}'
                                      name: '{{ repeat.item.name if repeat.item.name is defined else None }}'
                                    unit_of_measurement: '{{ state_attr(entity_id, "unit_of_measurement") | default("") }}'
                                - *variable_entity
                                - *delay_default
                                - service: 'esphome.{{ nspanel_name }}_value'
                                  data:
                                    id: '{{ repeat.item.page }}.{{ repeat.item.component }}'
                                    icon: '{{ entity.icon if entitypages_show_entities_icons else "" }}'
                                    icon_color: []
                                    name: '{{ entity.name }}'
                                    value: *value_with_unit_and_translations
                                    value_color: []
                                  continue_on_error: true

                      ## PAGE WEATHER (WEATHER01 to WEATHER05) ##
                      - alias: Weather pages
                        conditions: '{{ nspanel_event.page in pages.weatherpages }}'
                        sequence:
                          - variables:
                              weather_attribution: '{{ state_attr(weather_entity, "attribution") if weather_entity is string }}'
                              weather_type: >
                                {% if not weather_attribution %} unavailable
                                {% elif "AccuWeather" in weather_attribution %} AccuWeather
                                {% elif "OpenWeatherMap" in weather_attribution %} OpenWeather
                                {% elif "SMHI" in weather_attribution %} SMHI
                                {% elif "met.no" in weather_attribution %} Met.no
                                {% elif "Météo-France" in weather_attribution %} Meteo_France
                                {% else %} Other
                                {% endif %}
                              weather_units:
                                humidity: >
                                  {{
                                    state_attr(weather_entity, "humidity_unit") | default("%")
                                    if weather_entity is string and state_attr(weather_entity, "humidity_unit")
                                    else "%"
                                  }}
                                hours_of_sun: >
                                  {{
                                    state_attr(weather_entity, "hours_of_sun_unit") | default("h")
                                    if weather_entity is string and state_attr(weather_entity, "hours_of_sun_unit")
                                    else "h"
                                  }}
                                precipitation: >
                                  {{
                                    state_attr(weather_entity, "precipitation_unit") | default("")
                                    if weather_entity is string and state_attr(weather_entity, "precipitation_unit")
                                  }}
                                precipitation_probability: >
                                  {{
                                    state_attr(weather_entity, "precipitation_probability_unit") | default("%")
                                    if weather_entity is string and state_attr(weather_entity, "precipitation_probability_unit")
                                    else "%"
                                  }}
                                pressure: '{{ state_attr(weather_entity, "pressure_unit") | default("") if weather_entity is string and state_attr(weather_entity, "pressure_unit") }}'
                                thunderstorm_probability: >
                                  {{
                                    state_attr(weather_entity, "thunderstorm_probability_unit") | default("%")
                                    if weather_entity is string and state_attr(weather_entity, "thunderstorm_probability_unit")
                                    else "%"
                                  }}
                                uv_index: '{{ state_attr(weather_entity, "uv_index_unit") | default("") if weather_entity is string and state_attr(weather_entity, "uv_index_unit") }}'
                                wind_speed: '{{ state_attr(weather_entity, "wind_speed_unit") | default("") if weather_entity is string and state_attr(weather_entity, "wind_speed_unit") }}'
                              page_name: '{{ nspanel_event.page }}'
                              page_index: '{{ (page_name[-2:] | int(0)) - 1 }}'

                          ##### Display relative day #####
                          - *delay_default
                          - service: 'esphome.{{ nspanel_name }}_component_text'
                            data:
                              id: '{{ page_name }}.day'
                              txt: '{{ (dict.values(mui[language].relative_day) | list)[page_index] }}'
                            continue_on_error: true

                          ##### Display date (long) #####
                          - *delay_default
                          - service: 'esphome.{{ nspanel_name }}_component_text'
                            data:
                              id: '{{ page_name }}.date'
                              txt: >
                                {{
                                  as_timestamp(now() + timedelta(days= (page_index)))
                                  | timestamp_custom
                                    (
                                      date_format
                                      | replace("%A", (dict.values(mui[language].weekdays) | list)[(now() + timedelta(days= (page_index))).weekday()])
                                      | replace("%a", (dict.values(mui[language].weekdays_short) | list)[(now() + timedelta(days= (page_index))).weekday()])
                                      | replace("%B", (dict.values(mui[language].months) | list)[(now() + timedelta(days= (page_index))).month-1])
                                      | replace("%b", (dict.values(mui[language].months_short) | list)[(now() + timedelta(days= (page_index))).month-1])
                                    )
                                }}
                            continue_on_error: true

                          ##### Display weather data only when available #####
                          - variables:
                              weather_entity_supported_features: '{{ state_attr(weather_entity, "supported_features") | int(0) }}'
                              forecast_type: >
                                {% if weather_entity_supported_features == 0 or weather_entity_supported_features | bitwise_and(1) > 0 %}
                                  daily
                                {% elif weather_entity_supported_features | bitwise_and(4) > 0 %}
                                  twice_daily
                                {% elif weather_entity_supported_features | bitwise_and(2) > 0 %}
                                  hourly
                                {% endif %}
                          - condition: '{{ forecast_type in ["daily", "twice_daily", "hourly"] }}'
                          - service: 'weather.get_forecasts'
                            target:
                              entity_id: '{{ weather_entity }}'
                            data:
                              type: '{{ forecast_type }}'
                            response_variable: service_response_var
                            continue_on_error: true
                          - variables:
                              forecast: >
                                {% if service_response_var is defined
                                      and service_response_var[weather_entity] is defined
                                      and service_response_var[weather_entity].forecast is defined %}
                                  {{ service_response_var[weather_entity].forecast }}
                                {% elif service_response_var is defined and service_response_var.forecast is defined %}
                                  {{ service_response_var.forecast }}
                                {% else %}
                                  {{ state_attr(weather_entity, "forecast") | default(false) }}
                                {% endif %}
                          - condition: '{{ forecast != false }}'
                          - variables:
                              datetime_is_string: '{{ forecast[0] is defined and forecast[0]["datetime"] is string }}'
                              forecast_day: >
                                {% if datetime_is_string %}
                                  {{
                                    forecast | default([])
                                    | selectattr("datetime", "defined")
                                    | selectattr("datetime", ">=", (today_at("00:00") + timedelta(days= page_index)) | as_timestamp | timestamp_utc )
                                    | selectattr("datetime", "<", (today_at("00:00") + timedelta(days= (page_index+1))) | as_timestamp | timestamp_utc )
                                    | list
                                  }}
                                {% else %}
                                  [
                                    {
                                      'datetime': '{{ forecast | default([])
                                        | selectattr("datetime", "defined")
                                        | selectattr("datetime", ">=", (today_at("00:00") + timedelta(days= page_index)) | as_timestamp | as_datetime )
                                        | selectattr("datetime", "<", (today_at("00:00") + timedelta(days= (page_index+1))) | as_timestamp | as_datetime )
                                        | map(attribute="datetime") | list | first | as_timestamp | timestamp_utc
                                        if forecast | default([])
                                        | selectattr("datetime", "defined")
                                        | selectattr("datetime", ">=", (today_at("00:00") + timedelta(days= page_index)) | as_timestamp | as_datetime )
                                        | selectattr("datetime", "<", (today_at("00:00") + timedelta(days= (page_index+1))) | as_timestamp | as_datetime )
                                        | map(attribute="datetime") | list | count > 0
                                        else "" }}',
                                      'condition': '{{ forecast | default([])
                                        | selectattr("condition", "defined")
                                        | selectattr("datetime", "defined")
                                        | selectattr("datetime", ">=", (today_at("00:00") + timedelta(days= page_index)) | as_timestamp | as_datetime )
                                        | selectattr("datetime", "<", (today_at("00:00") + timedelta(days= (page_index+1))) | as_timestamp | as_datetime )
                                        | map(attribute="condition") | list | first
                                        if forecast | default([])
                                        | selectattr("condition", "defined")
                                        | selectattr("datetime", "defined")
                                        | selectattr("datetime", ">=", (today_at("00:00") + timedelta(days= page_index)) | as_timestamp | as_datetime )
                                        | selectattr("datetime", "<", (today_at("00:00") + timedelta(days= (page_index+1))) | as_timestamp | as_datetime )
                                        | map(attribute="condition") | list | count > 0
                                        else "" }}',
                                      'temperature': '{{ forecast | default([])
                                        | selectattr("temperature", "defined")
                                        | selectattr("datetime", "defined")
                                        | selectattr("datetime", ">=", (today_at("00:00") + timedelta(days= page_index)) | as_timestamp | as_datetime )
                                        | selectattr("datetime", "<", (today_at("00:00") + timedelta(days= (page_index+1))) | as_timestamp | as_datetime )
                                        | map(attribute="temperature") | list | first
                                        if forecast | default([])
                                        | selectattr("temperature", "defined")
                                        | selectattr("datetime", "defined")
                                        | selectattr("datetime", ">=", (today_at("00:00") + timedelta(days= page_index)) | as_timestamp | as_datetime )
                                        | selectattr("datetime", "<", (today_at("00:00") + timedelta(days= (page_index+1))) | as_timestamp | as_datetime )
                                        | map(attribute="temperature") | list | count > 0
                                        else "" }}',
                                      'templow': '{{ forecast | default([])
                                        | selectattr("templow", "defined")
                                        | selectattr("datetime", "defined")
                                        | selectattr("datetime", ">=", (today_at("00:00") + timedelta(days= page_index)) | as_timestamp | as_datetime )
                                        | selectattr("datetime", "<", (today_at("00:00") + timedelta(days= (page_index+1))) | as_timestamp | as_datetime )
                                        | map(attribute="templow") | list | first
                                        if forecast | default([])
                                        | selectattr("templow", "defined")
                                        | selectattr("datetime", "defined")
                                        | selectattr("datetime", ">=", (today_at("00:00") + timedelta(days= page_index)) | as_timestamp | as_datetime )
                                        | selectattr("datetime", "<", (today_at("00:00") + timedelta(days= (page_index+1))) | as_timestamp | as_datetime )
                                        | map(attribute="templow") | list | count > 0
                                        else "" }}',
                                      'precipitation': '{{ forecast | default([])
                                        | selectattr("precipitation", "defined")
                                        | selectattr("datetime", "defined")
                                        | selectattr("datetime", ">=", (today_at("00:00") + timedelta(days= page_index)) | as_timestamp | as_datetime )
                                        | selectattr("datetime", "<", (today_at("00:00") + timedelta(days= (page_index+1))) | as_timestamp | as_datetime )
                                        | map(attribute="precipitation") | list | first
                                        if forecast | default([])
                                        | selectattr("precipitation", "defined")
                                        | selectattr("datetime", "defined")
                                        | selectattr("datetime", ">=", (today_at("00:00") + timedelta(days= page_index)) | as_timestamp | as_datetime )
                                        | selectattr("datetime", "<", (today_at("00:00") + timedelta(days= (page_index+1))) | as_timestamp | as_datetime )
                                        | map(attribute="precipitation") | list | count > 0
                                        else "" }}',
                                      'wind_speed': '{{ forecast | default([])
                                        | selectattr("wind_speed", "defined")
                                        | selectattr("datetime", "defined")
                                        | selectattr("datetime", ">=", (today_at("00:00") + timedelta(days= page_index)) | as_timestamp | as_datetime )
                                        | selectattr("datetime", "<", (today_at("00:00") + timedelta(days= (page_index+1))) | as_timestamp | as_datetime )
                                        | map(attribute="wind_speed") | list | first
                                        if forecast | default([])
                                        | selectattr("wind_speed", "defined")
                                        | selectattr("datetime", "defined")
                                        | selectattr("datetime", ">=", (today_at("00:00") + timedelta(days= page_index)) | as_timestamp | as_datetime )
                                        | selectattr("datetime", "<", (today_at("00:00") + timedelta(days= (page_index+1))) | as_timestamp | as_datetime )
                                        | map(attribute="wind_speed") | list | count > 0
                                        else "" }}'
                                    }
                                  ]
                                {% endif %}
                          - if: '{{ forecast_day | count > 0 or page_index == 0 }}'
                            then:  # Display forecast
                              - variables:
                                  metnoweather: '{{ weather_type == "Met.no" }}'
                                  metnoweather_hourly_forecast: '{{ state_attr(weather_entity ~ "_hourly", "forecast") if metnoweather and has_value(weather_entity ~ "_hourly") }}'
                                  forecast_day: >
                                    {% if forecast_day | count > 0 %}{{ forecast_day }}
                                    {% elif metnoweather and metnoweather_hourly_forecast %}
                                      {{ metnoweather_hourly_forecast
                                        | selectattr("datetime", "defined")
                                        | selectattr("datetime", ">=", (today_at("00:00") + timedelta(days= page_index)) | as_timestamp | timestamp_utc )
                                        | selectattr("datetime", "<", (today_at("00:00") + timedelta(days= (page_index+1))) | as_timestamp | timestamp_utc )
                                        | list
                                      }}
                                    {% endif %}
                              - variables:
                                  forecast_day: >
                                    {% if forecast_day | count > 0 %}{{ forecast_day }}
                                    {% elif page_index == 0 %}
                                      [
                                        {
                                          'condition': '{{ states(weather_entity) }}',
                                          'temperature': '{{ state_attr(weather_entity, "temperature") }}',
                                          'wind_speed': '{{ state_attr(weather_entity, "wind_speed") }}'
                                        }
                                      ]
                                    {% endif %}
                              - if: '{{ forecast_day | count > 0 }}'
                                then:
                                  - variables:
                                      accuweather: '{{ weather_type == "AccuWeather" }}'
                                      accuweather_day_name: '{{ "day_" ~ page_index }}'
                                      accuweather_sensor_prefix: '{{ "sensor." ~ (weather_entity | replace("weather.","")) ~ "_" }}'
                                      accuweather_sensor_sufix: '{{ "_" ~ page_index ~ "d" }}'
                                      temp_min: >
                                        {{
                                          forecast_day | selectattr("templow", "defined") | map(attribute="templow") | map("float") | list | min
                                          if forecast_day | selectattr("templow", "defined") | map(attribute="templow") | map("float") | list | count > 0
                                          else
                                            forecast_day
                                            | selectattr("temperature", "defined")
                                            | rejectattr("temperature", "eq", "")
                                            | map(attribute="temperature")
                                            | map("float") | list | min | default("unknown")
                                        }}
                                      temp_max: >
                                        {{
                                          forecast_day
                                          | selectattr("temperature", "defined")
                                          | rejectattr("temperature", "eq", "")
                                          | map(attribute="temperature")
                                          | map("float") | list | max
                                          if
                                            forecast_day
                                            | selectattr("temperature", "defined")
                                            | rejectattr("temperature", "eq", "")
                                            | map(attribute="temperature")
                                            | map("float") | list | count > 0
                                        }}
                                      condition: >
                                        {{
                                          forecast_day
                                          | selectattr("condition", "defined")
                                          | rejectattr("condition", "eq", "")
                                          | map(attribute="condition") | list | first
                                          if
                                            forecast_day
                                            | selectattr("condition", "defined")
                                            | rejectattr("condition", "eq", "")
                                            | map(attribute="condition") | list | count > 0
                                        }}
                                      precipitation: >
                                        {{
                                          forecast_day
                                          | selectattr("precipitation", "defined")
                                          | rejectattr("precipitation", "eq", "")
                                          | map(attribute="precipitation")
                                          | map("float") | list | sum | round(0)
                                          if
                                            forecast_day
                                            | selectattr("precipitation", "defined")
                                            | rejectattr("precipitation", "eq", "")
                                            | map(attribute="precipitation")
                                            | map("float") | list | count > 0
                                        }}
                                      precipitation_probability: >
                                        {{
                                          forecast_day
                                          | selectattr("precipitation_probability", "defined")
                                          | rejectattr("precipitation_probability", "eq", "")
                                          | map(attribute="precipitation_probability")
                                          | map("float") | list | max | round(0)
                                          if
                                            forecast_day
                                            | selectattr("precipitation_probability", "defined")
                                            | rejectattr("precipitation_probability", "eq", "")
                                            | map(attribute="precipitation_probability")
                                            | map("float") | list | count > 0
                                        }}
                                      pressure: >
                                        {{
                                          forecast_day
                                          | selectattr("pressure", "defined")
                                          | rejectattr("pressure", "eq", "")
                                          | map(attribute="pressure")
                                          | map("float") | list | max | round(0)
                                          if
                                            forecast_day
                                            | selectattr("pressure", "defined")
                                            | rejectattr("pressure", "eq", "")
                                            | map(attribute="pressure")
                                            | map("float") | list | count > 0
                                        }}
                                      wind_speed: >
                                        {{
                                          forecast_day
                                          | selectattr("wind_speed", "defined")
                                          | rejectattr("wind_speed", "eq", "")
                                          | map(attribute="wind_speed")
                                          | map("float") | list | max | round(0)
                                          if
                                            forecast_day
                                            | selectattr("wind_speed", "defined")
                                            | rejectattr("wind_speed", "eq", "")
                                            | map(attribute="wind_speed")
                                            | map("float") | list | count > 0
                                        }}
                                      hours_of_sun: >
                                        {{
                                          states(accuweather_sensor_prefix ~ "hours_of_sun" ~ accuweather_sensor_sufix, rounded=true) | default("unknown")
                                          if accuweather
                                          else
                                            (
                                              forecast_day
                                              | selectattr("hours_of_sun", "defined")
                                              | rejectattr("hours_of_sun", "eq", "")
                                              | map(attribute="hours_of_sun")
                                              | map("float")
                                              | list
                                              | sum
                                              | round(0)
                                              if
                                                forecast_day
                                                | selectattr("hours_of_sun", "defined")
                                                | rejectattr("hours_of_sun", "eq", "")
                                                | map(attribute="hours_of_sun")
                                                | map("float")
                                                | list
                                                | count > 0
                                            )
                                        }}
                                      uv_index: >
                                        {{
                                          states(accuweather_sensor_prefix ~ "uv_index" ~ accuweather_sensor_sufix, rounded=true) | default("unknown")
                                          if accuweather
                                          else
                                            (
                                              forecast_day
                                              | selectattr("uv_index", "defined")
                                              | rejectattr("uv_index", "eq", "")
                                              | map(attribute="uv_index")
                                              | map("float")
                                              | list
                                              | max
                                              | round(0)
                                              if
                                                forecast_day
                                                | selectattr("uv_index", "defined")
                                                | rejectattr("uv_index", "eq", "")
                                                | map(attribute="uv_index")
                                                | map("float")
                                                | list
                                                | count > 0
                                            )
                                        }}
                                      thunderstorm_probability: >
                                        {{
                                          states(accuweather_sensor_prefix ~ "thunderstorm_probability_day" ~ accuweather_sensor_sufix, rounded=true) | default("unknown")
                                          if accuweather
                                          else
                                            (
                                              forecast_day
                                              | selectattr("thunderstorm_probability", "defined")
                                              | rejectattr("thunderstorm_probability", "eq", "")
                                              | map(attribute="thunderstorm_probability") | map("float")
                                              | list
                                              | max
                                              | round(0)
                                              if
                                                forecast_day
                                                | selectattr("thunderstorm_probability", "defined")
                                                | rejectattr("thunderstorm_probability", "eq", "")
                                                | map(attribute="thunderstorm_probability")
                                                | map("float")
                                                | list
                                                | count > 0
                                            )
                                        }}
                                      humidity: >
                                        {{
                                          forecast_day
                                          | selectattr("humidity", "defined")
                                          | rejectattr("humidity", "eq", "")
                                          | map(attribute="humidity")
                                          | map("float")
                                          | list
                                          | max
                                          | round(0)
                                          if
                                            forecast_day
                                            | selectattr("humidity", "defined")
                                            | rejectattr("humidity", "eq", "")
                                            | map(attribute="humidity")
                                            | map("float")
                                            | list
                                            | count > 0
                                        }}
                                      parameters:
                                        - name: hours_of_sun
                                          visibility: '{{ is_number(hours_of_sun) }}'
                                          value: '{{ (hours_of_sun ~ " " ~ weather_units.hours_of_sun) if is_number(hours_of_sun) }}'
                                          icon: '{{ nextion.icon.weather.sun }}'
                                        - name: thunderstorm_probability
                                          visibility: '{{ is_number(thunderstorm_probability) }}'
                                          value: '{{ (thunderstorm_probability ~ weather_units.thunderstorm_probability) if is_number(thunderstorm_probability) }}'
                                          icon: '{{ nextion.icon.weather.lightning }}'
                                        - name: precipitation
                                          visibility: '{{ is_number(precipitation) or is_number(precipitation_probability) }}'
                                          value: >
                                            {{ (precipitation ~ " " ~ weather_units.precipitation) if is_number(precipitation) }}
                                            {{ "-" if is_number(precipitation) and is_number(precipitation_probability) }}
                                            {{ (precipitation_probability ~ weather_units.precipitation_probability) if is_number(precipitation_probability) }}
                                          icon: '{{ nextion.icon.weather.rain }}'
                                        - name: uv_index
                                          visibility: '{{ is_number(uv_index) }}'
                                          value: >
                                            {{ (state_attr(accuweather_sensor_prefix ~ "uv_index" ~ accuweather_sensor_sufix, "level") | default("") ~ ": ") if weather_type == "AccuWeather" }}
                                            {{ (uv_index ~ weather_units.uv_index) if is_number(uv_index) }}
                                          icon: '{{ nextion.icon.weather.protect }}'
                                        - name: wind_speed
                                          visibility: '{{ is_number(wind_speed) }}'
                                          value: '{{ (wind_speed ~ " " ~ weather_units.wind_speed) if is_number(wind_speed) }}'
                                          icon: '{{ nextion.icon.weather.wind }}'
                                        - name: humidity
                                          visibility: '{{ is_number(humidity) }}'
                                          value: '{{ (humidity ~ " " ~ weather_units.humidity) if is_number(humidity) }}'
                                          icon: '{{ all_icons["water-percent"] }}'
                                        - name: pressure
                                          visibility: '{{ is_number(pressure) }}'
                                          value: '{{ (pressure ~ " " ~ weather_units.pressure) if is_number(pressure) }}'
                                          icon: '{{ nextion.icon.weather.gauge }}'

                                  ##### Display weather PIC when available
                                  - if: '{{ condition not in ["unknown", None] }}'
                                    then:
                                      - *delay_default
                                      - service: 'esphome.{{ nspanel_name }}_command'
                                        data:
                                          cmd: >
                                            {{ page_name }}.weather_icon.pic={{
                                              nextion.pic.weather[states(weather_entity) | default("unavailable") if weather_entity is string else "unavailable"] | int(1)
                                              if condition == "unknown" and page_name == pages.weatherpages[0]
                                              else nextion.pic.weather[condition] | int(1)
                                            }}
                                        continue_on_error: true

                                  ##### Display temperature min/max when available
                                  - variables:
                                      temperature_string: >
                                          {{ (temp_min | round(0) ~ temperature_units) if is_number(temp_min) }}
                                          {{ "/" if is_number(temp_min) and is_number(temp_max) and temp_min != temp_max }}
                                          {{ (temp_max | round(0) ~ temperature_units) if is_number(temp_max) and temp_min != temp_max }}
                                  - if: '{{ (is_number(temp_min) or is_number(temp_max)) and temperature_string is string and temperature_string | length > 0 }}'
                                    then:
                                      - *delay_default
                                      - service: 'esphome.{{ nspanel_name }}_component_text'
                                        data:
                                          id: '{{ page_name }}.temperature'  ### Temperature MIN/MAX ###
                                          txt: '{{ temperature_string }}'
                                        continue_on_error: true

                                  ##### fields 1 to 5 (Parameters) #####
                                  - repeat:
                                      for_each: '{{ (parameters | selectattr("visibility", "eq", true) | list)[:5] }}'
                                      sequence:
                                        - *delay_default
                                        - service: 'esphome.{{ nspanel_name }}_component_text'
                                          data:
                                            id: '{{ page_name }}.value0{{ repeat.index }}'
                                            txt: '{{ repeat.item.value }}'
                                          continue_on_error: true
                                        - *delay_default
                                        - service: 'esphome.{{ nspanel_name }}_component_text'
                                          data:
                                            id: '{{ page_name }}.value0{{ repeat.index }}_icon'
                                            txt: '{{ repeat.item.icon }}'
                                          continue_on_error: true
                                else: &forecast_unavailable
                                  - *delay_default
                                  - service: 'esphome.{{ nspanel_name }}_component_text'
                                    data:
                                      id: '{{ page_name }}.value01'
                                      txt: '{{ mui[language].unavailable }}'
                                    continue_on_error: true
                            else: *forecast_unavailable

                      ## PAGE UTILITIES ##
                      - alias: Utilities page
                        conditions: '{{ nspanel_event.page == pages.utilities }}'
                        sequence: &refresh_page_utilities
                          ## Page title
                          - variables:
                              utilities_constructor_init: true
                              page_icon: '{{ pages_utilities.title.icon.split("mdi:")[1] if pages_utilities.title.icon is string and pages_utilities.title.icon.split("mdi:") | count == 2 }}'
                          - *delay_default
                          - service: 'esphome.{{ nspanel_name }}_value'
                            data:
                              id: utilities.title
                              icon: '{{ all_icons[page_icon] if page_icon in all_icons else all_icons.gauge }}'
                              icon_color: []
                              name: ''
                              value: '{{ pages_utilities.title.label }}'
                              value_color: []
                            continue_on_error: true
                          ## Groups
                          - repeat:
                              for_each: '{{ pages_utilities.groups | list }}'
                              sequence: &refresh_page_utilities_group
                                - variables:
                                    utilities_constructor: '{{ utilities_constructor_init is defined and utilities_constructor_init }}'
                                    icon_enabled: '{{ utilities_constructor and repeat.item.icon is defined and repeat.item.icon is string and repeat.item.icon.split("mdi:") | count == 2 }}'
                                    value1_enabled: >
                                      {{
                                        repeat.item.value1 is defined and
                                        repeat.item.value1 is string and
                                        repeat.item.value1.split(".") | count == 2 and
                                        (utilities_constructor or (trigger.entity_id == repeat.item.value1))
                                      }}
                                    value2_enabled: >
                                      {{
                                        repeat.item.value2 is defined and
                                        repeat.item.value2 is string and
                                        repeat.item.value2.split(".") | count == 2 and
                                        (utilities_constructor or (trigger.entity_id == repeat.item.value2))
                                      }}
                                    label_enabled: '{{ utilities_constructor and repeat.item.label is defined and repeat.item.label is string and repeat.item.label | length > 0 }}'
                                - alias: Utilities - Display icon
                                  if: '{{ icon_enabled }}'
                                  then:
                                    - variables:
                                        icon_code: '{{ repeat.item.icon.split("mdi:")[1] }}'
                                    - *delay_default
                                    - service: 'esphome.{{ nspanel_name }}_icon'
                                      data:
                                        id: '{{ repeat.item.name }}_icon'
                                        icon: '{{ all_icons[icon_code] if icon_code in all_icons else "" }}'
                                        icon_color: '{{ repeat.item.color }}'
                                        visible: '{{ icon_code in all_icons }}'
                                      continue_on_error: true
                                - alias: Utilities - Label
                                  if: '{{ label_enabled }}'
                                  then:
                                    - *delay_default
                                    - service: 'esphome.{{ nspanel_name }}_component_text'
                                      data:
                                        id: '{{ repeat.item.name }}_label'
                                        txt: '{{ repeat.item.label }}'
                                      continue_on_error: true
                                    - *delay_default
                                    - service: 'esphome.{{ nspanel_name }}_component_color'
                                      data:
                                        id: '{{ repeat.item.name }}_label'
                                        color: '{{ repeat.item.color }}'
                                      continue_on_error: true
                                    - *delay_default
                                    - service: 'esphome.{{ nspanel_name }}_components_visibility'
                                      data:
                                        ids: '{{ [repeat.item.name ~ "_label"] }}'
                                        visible: true
                                      continue_on_error: true

                                - variables:
                                    line_ref_state: >
                                      {{
                                        states(repeat.item.line_ref) | float(0)
                                        if repeat.item.line_ref is defined and repeat.item.line_ref is string and repeat.item.line_ref.split(".") | count == 2
                                        else 0
                                      }}
                                    direction: '{{ (((line_ref_state > 0) - (line_ref_state < 0)) * (-3 if repeat.item.line_inverted is defined and repeat.item.line_inverted else 3)) | int(0) }}'
                                - alias: Utilities - Display values
                                  if: '{{ value1_enabled or value2_enabled }}'
                                  then:
                                    - variables:
                                        value_enabled: '{{ value1_enabled }}'
                                        entity_id: '{{ repeat.item.value1 if value1_enabled else "" }}'
                                        unit_of_measurement: '{{ state_attr(entity_id, "unit_of_measurement") | default("") if value1_enabled else "" }}'
                                    - *variable_entity
                                    - variables:
                                        value1_val: &utilities_value_with_unit_and_translations >
                                          {{
                                            (
                                              (states(entity_id, rounded=true) ~ (unit_of_measurement if unit_of_measurement is string and unit_of_measurement | length > 0 else ""))
                                              if is_number(entity_state)
                                              else state_translated(entity_id)
                                            )
                                            if value_enabled and entity_id_valid and entity_has_value
                                            else ""
                                          }}
                                        value_enabled: '{{ value2_enabled }}'
                                        entity_id: '{{ repeat.item.value2 if value2_enabled else "" }}'
                                        unit_of_measurement: '{{ state_attr(entity_id, "unit_of_measurement") | default("") if value2_enabled else "" }}'
                                    - *variable_entity
                                    - variables:
                                        value2_val: *utilities_value_with_unit_and_translations
                                    - service: 'esphome.{{ nspanel_name }}_utilities_group_refresh'
                                      data:
                                        group_id: '{{ repeat.item.name }}'
                                        value1: '{{ value1_val }}'
                                        value2: '{{ value2_val }}'
                                        direction: '{{ direction }}'
                                        constructor: '{{ utilities_constructor }}'
                                      continue_on_error: true
                                    - if: '{{ utilities_constructor }}'
                                      then:
                                        - if: '{{ value1_enabled }}'
                                          then:
                                            - *delay_default
                                            - service: 'esphome.{{ nspanel_name }}_component_color'
                                              data:
                                                id: '{{ repeat.item.name }}'
                                                color: '{{ repeat.item.color }}'
                                              continue_on_error: true
                                            - *delay_default
                                            - service: 'esphome.{{ nspanel_name }}_components_visibility'
                                              data:
                                                ids: '{{ [repeat.item.name] }}'
                                                visible: true
                                              continue_on_error: true
                                        - if: '{{ value2_enabled }}'
                                          then:
                                            - *delay_default
                                            - service: 'esphome.{{ nspanel_name }}_component_color'
                                              data:
                                                id: '{{ repeat.item.name }}b'
                                                color: '{{ repeat.item.color }}'
                                              continue_on_error: true
                                            - *delay_default
                                            - service: 'esphome.{{ nspanel_name }}_components_visibility'
                                              data:
                                                ids: '{{ [repeat.item.name ~ "b"] }}'
                                                visible: true
                                              continue_on_error: true
                                - alias: Utilities - Line
                                  if:
                                    - '{{ icon_enabled or value1_enabled or value2_enabled or label_enabled }}'
                                    - '{{ repeat.item.name not in ["grid"] }}'
                                    - '{{ utilities_constructor }}'
                                  then:
                                    - variables:
                                        rgb565: '{{ int(((repeat.item.color[0] //(2**3)) *(2**11))+((repeat.item.color[1] //(2**2)) *(2**5))+(repeat.item.color[2] //(2**3))) }}'
                                    - *delay_default
                                    - service: 'esphome.{{ nspanel_name }}_command'
                                      data:
                                        cmd: '{{ repeat.item.name }}_line.bco={{ rgb565 }}'
                                      continue_on_error: true
                                    - *delay_default
                                    - service: 'esphome.{{ nspanel_name }}_command'
                                      data:
                                        cmd: '{{ repeat.item.name }}_line.bco1={{ rgb565 }}'
                                      continue_on_error: true
                                    - if: '{{ pages_utilities.cursor.width != 255 }}'
                                      then:
                                        - *delay_default
                                        - service: 'esphome.{{ nspanel_name }}_command'
                                          data:
                                            cmd: '{{ repeat.item.name }}_line.wid={{ pages_utilities.cursor.width }}'
                                          continue_on_error: true
                                    - *delay_default
                                    - service: 'esphome.{{ nspanel_name }}_components_visibility'
                                      data:
                                        ids: '{{ [repeat.item.name ~ "_line"] }}'
                                        visible: true
                                      continue_on_error: true

              ##### Button click #####
              - alias: Button click
                conditions:
                  - '{{ nspanel_event.type == "button_click" }}'
                sequence:
                  - choose:
                      - alias: Hardware buttons
                        conditions:
                          - '{{ nspanel_event.component in ["hw_bt_left", "hw_bt_right"] }}'
                        sequence:
                          - *variables_hardware
                          - variables:
                              last_click_button: '{{ hardware.buttons.left if nspanel_event.component == "hw_bt_left" else hardware.buttons.right }}'
                              entity_id: '{{ last_click_button.entity }}'
                          - *variable_entity
                          - choose:
                              - alias: Long click
                                conditions:
                                  - '{{ nspanel_event.command == "long_click" or entity_domain in ["alarm_control_panel", "climate", "media_player"] }}'
                                sequence:
                                  - choose:
                                      - alias: Default
                                        conditions:
                                          - '{{ last_click_button.hold_select == "Default" }}'
                                          - '{{ entity_domain in ["alarm_control_panel", "climate", "cover", "fan", "light", "media_player"] }}'
                                        sequence:
                                          - variables:
                                              back_page: '{{ pages.home }}'
                                          - &entity_details_show
                                            if: '{{ true }}'
                                            then:
                                              - *delay_default
                                              - service: 'esphome.{{ nspanel_name }}_entity_details_show'
                                                data:
                                                  entity: '{{ "embedded_climate" if entity_id == thermostat_embedded else entity_id }}'
                                                  back_page: '{{ back_page }}'
                                                continue_on_error: true
                                              - if: '{{ entity is defined and entity.icon is defined and entity.icon is string and entity.icon | length > 0 }}'
                                                then:
                                                  - *delay_default
                                                  - service: 'esphome.{{ nspanel_name }}_component_text'
                                                    data:
                                                      id: icon_state
                                                      txt: '{{ entity.icon }}'
                                                    continue_on_error: true
                                              - if: '{{ entity is defined and entity.name is defined and entity.name is string and entity.name | length > 0 }}'
                                                then:
                                                  - *delay_default
                                                  - service: 'esphome.{{ nspanel_name }}_component_text'
                                                    data:
                                                      id: page_label
                                                      txt: '{{ entity.name }}'
                                                    continue_on_error: true
                                      - alias: Custom action - Left
                                        conditions: '{{ last_click_button.hold_select == "Custom Action" and nspanel_event.component == "hw_bt_left" }}'
                                        sequence: !input left_button_hold_custom_action
                                      - alias: Custom action - Right
                                        conditions: '{{ last_click_button.hold_select == "Custom Action" and nspanel_event.component == "hw_bt_right" }}'
                                        sequence: !input right_button_hold_custom_action
                              - alias: Short click
                                conditions:
                                  - '{{ nspanel_event.command == "short_click" and entity_domain not in ["alarm_control_panel", "climate", "media_player"] }}'
                                sequence:
                                  - condition: '{{ last_click_button.entity | length > 0 }}'
                                  - condition: '{{ nspanel_event.component != "hw_bt_left" or hardware.buttons.left.entity != relay01_entity }}'
                                  - condition: '{{ nspanel_event.component != "hw_bt_right" or hardware.buttons.right.entity != relay02_entity }}'
                                  - &short_press-service_call
                                    if: '{{ true }}'
                                    then:
                                      - service: >
                                          {% if entity_domain in ["cover"]
                                                and states(last_click_button.entity) in ["opening", "closing"]
                                                and state_attr(last_click_button.entity, "supported_features") | int(0) | bitwise_and(4) == 0 %}
                                            {{ entity_domain }}.stop_cover
                                          {% elif entity_domain in ["light", "switch", "cover", "input_boolean", "fan", "remote"] %}
                                            {{ entity_domain }}.toggle
                                          {% elif entity_domain in ["automation"] %}
                                            {{ entity_domain }}.{{ domain_automation_button_action if domain_automation_button_action is string else "toggle"}}
                                          {% elif entity_domain in ["button", "input_button"] %}
                                            {{ entity_domain }}.press
                                          {% elif entity_domain in ["lock"] and states(last_click_button.entity) in ["locked"] %}
                                            {{ entity_domain }}.unlock
                                          {% elif entity_domain in ["lock"] and states(last_click_button.entity) in ["unlocked"] %}
                                            {{ entity_domain }}.lock
                                          {% elif entity_domain in ["scene", "script"] %}
                                            {{ entity_domain }}.turn_on
                                          {% elif entity_domain in ["media_player"] %}
                                            {{ entity_domain }}.media_play_pause
                                          {% else %}
                                            homeassistant.update_entity
                                          {% endif %}
                                        data:
                                          entity_id: '{{ last_click_button.entity }}'
                                        continue_on_error: true
                          - if: '{{ entity_domain in ["media_player"] }}'
                            then:
                              - delay:
                                  milliseconds: '{{ media_player_update_delay }}'
                              - service: homeassistant.update_entity
                                data:
                                  entity_id: '{{ last_click_button.entity }}'
                                continue_on_error: true

                      - alias: Buttons pages
                        conditions:
                          - '{{ nspanel_event.page in pages.buttonpages }}'
                        sequence:
                          - *variables_page_buttons
                          - variables:
                              last_click_button: >
                                {{
                                  buttons_pages.buttons
                                  | selectattr("page", "defined")
                                  | selectattr("page", "eq", nspanel_event.page)
                                  | selectattr("component", "defined")
                                  | selectattr("component", "eq", nspanel_event.component)
                                  | selectattr("entity", "defined")
                                  | rejectattr("entity", "eq", [])
                                  | list
                                }}
                          - condition: '{{ last_click_button | count >= 0 }}'
                          - variables:
                              last_click_button: '{{ last_click_button[0] }}'
                              entity_id: '{{ last_click_button.entity }}'
                              overlap:
                                icon: '{{ last_click_button.icon if last_click_button.icon is defined else None }}'
                                name: '{{ last_click_button.name if last_click_button.name is defined else None }}'
                          - *variable_entity
                          - choose:
                              - alias: Long click
                                conditions:
                                  - '{{ nspanel_event.command == "long_click" or entity_domain in ["alarm_control_panel", "climate", "media_player"] }}'
                                  - '{{ entity_domain in ["alarm_control_panel", "climate", "cover", "light", "fan", "media_player"] }}'
                                sequence:
                                  - variables:
                                      back_page: '{{ nspanel_event.page }}'
                                  - *entity_details_show
                              - alias: Short click
                                conditions:
                                  - '{{ nspanel_event.command == "short_click" and entity_domain not in ["alarm_control_panel", "climate", "media_player"] }}'
                                  - '{{ entity_domain not in ["unknown", "person", "binary_sensor", "sensor"] }}'
                                sequence:
                                  - *short_press-service_call

                      - alias: Climate page
                        conditions:
                          - '{{ nspanel_event.page == pages.climate }}'
                        sequence:
                          - *climate-update_custom_buttons-variables
                          - variables:
                              last_click_button: '{{ climate_custom_buttons | selectattr("component", "defined") | selectattr("component", "eq", nspanel_event.component) | list }}'
                          - condition: '{{ last_click_button | count >= 0 }}'
                          - variables:
                              last_click_button: '{{ last_click_button[0] }}'
                              entity_domain: >
                                {{
                                  last_click_button.entity.split(".")[0] | default("unknown")
                                  if
                                    last_click_button.entity is string and
                                    last_click_button.entity | length > 0 and
                                    last_click_button.entity.split(".") | count > 0
                                  else "unknown"
                                }}
                          - choose:
                              - alias: Long click
                                conditions:
                                  - '{{ nspanel_event.command == "long_click" }}'
                                sequence:
                                  - choose:
                                      - conditions: '{{ nspanel_event.component == "button08" }}'
                                        sequence: !input climate_button08_hold_custom_action
                                      - conditions: '{{ nspanel_event.component == "button09" }}'
                                        sequence: !input climate_button09_hold_custom_action
                              - alias: Short click
                                conditions:
                                  - '{{ nspanel_event.command == "short_click" }}'
                                  - '{{ entity_domain not in ["unknown", "person", "binary_sensor", "sensor"] }}'
                                sequence:
                                  - *short_press-service_call

                      - alias: Home page custom buttons
                        conditions:
                          - '{{ nspanel_event.page == pages.home }}'
                        sequence:
                          - variables:
                              last_click_button: '{{ home_page.custom_buttons | selectattr("component", "defined") | selectattr("component", "eq", nspanel_event.component) | list }}'
                            continue_on_error: true
                          - condition: '{{ last_click_button | count >= 0 }}'
                          - variables:
                              last_click_button: '{{ last_click_button[0] }}'
                              entity_id: '{{ last_click_button.entity }}'
                              overlap:
                                icon: '{{ last_click_button.icon if last_click_button.icon is defined else None }}'
                                name: '{{ last_click_button.name if last_click_button.name is defined else None }}'
                          - *variables_light_modes
                          - condition: '{{ entity_id_valid }}'
                          - if: >
                              {{
                                entity_domain in ["alarm_control_panel", "climate", "media_player"] or
                                (entity_domain == "cover" and supported_features | bitwise_and(4) > 0) or
                                (entity_domain == "fan" and (supported_features | bitwise_and(1) > 0 or supported_features | bitwise_and(2) > 0)) or
                                (entity_domain == "light" and (color_mode_brightness or color_mode_color or color_mode_temp))
                              }}
                            then:
                              - variables:
                                  back_page: '{{ pages.home }}'
                              - *variable_entity
                              - *entity_details_show
                            else:
                              - *short_press-service_call

              ##### Versions mismatch #####
              - alias: Versions
                conditions:
                  - '{{ nspanel_event.type == "version"}}'
                sequence:
                  - variables:
                      versions:
                        blueprint: >
                          {{
                            ('%03d' | format(blueprint_version.split('.')[0] | int)) ~ "." ~ '%03d' | format(blueprint_version.split('.')[1] | int)
                            if blueprint_version.split('.') | count > 1
                            else "000.000"
                          }}
                        esphome: >
                          {{
                            ('%03d' | format(nspanel_event.esphome.split('.')[0] | int)) ~ "." ~ '%03d' | format(nspanel_event.esphome.split('.')[1] | int)
                            if nspanel_event.esphome.split('.') | count > 1
                            else "000.000"
                          }}
                        tft: >
                          {{
                            ('%03d' | format(nspanel_event.tft.split('.')[0] | int)) ~ "." ~ '%03d' | format(nspanel_event.tft.split('.')[1] | int)
                            if nspanel_event.tft.split('.') | count > 1
                            else "000.000"
                          }}
                      versions_sorted: '{{ versions | dictsort(by="value") }}'
                      oldest: '{{ versions_sorted[0] }}'
                      newest: '{{ versions_sorted[-1] }}'
                  - choose:
                      # yamllint disable rule:line-length
                      - alias: All versions are the same
                        conditions:
                          - '{{ oldest[1] == newest[1] }}'
                          - '{{ nspanel_event.blueprint == blueprint_version }}'
                        sequence:
                          - service: persistent_notification.dismiss
                            data:
                              notification_id: 'NSPanel_HA_Blueprint_version_mismatch_{{ nspanel_name }}'
                            continue_on_error: true
                      - alias: Blueprint is older
                        conditions:
                          - '{{ oldest[1] != newest[1] }}'
                          - '{{ oldest[0] == "blueprint" }}'
                        sequence:
                          - service: persistent_notification.create
                            data:
                              notification_id: 'NSPanel_HA_Blueprint_version_mismatch_{{ nspanel_name }}'
                              title: NSPanel Blueprint Needs Update
                              message: >
                                Your NSPanel Blueprint version is outdated.

                                - Current Blueprint version: {{ blueprint_version }}

                                - Expected version: {{ nspanel_event.esphome if newest[0] == "esphome" else nspanel_event.tft }}, based on the panel **{{
                                    device_attr(nspanel_deviceid, "name") ~ ((" - " ~ nspanel_name) if nspanel_name != device_attr(nspanel_deviceid, "name") else "") }}**.
                                ---

                                **How to Resolve This Issue**

                                1. Navigate to your [Blueprint Dashboard](/config/blueprint/dashboard).

                                2. Locate the blueprint named "**NSPanel Configuration**".

                                3. Click on the corresponding 3-dot menu.

                                4. Choose "**Re-import blueprint**".

                                5. Select the "**Re-import**" button.

                                6. Navigate to [YAML configuration reloading dashboard](/developer-tools/yaml).

                                7. Select "**Automations**" to reload the automations.


                                *For more detailed instructions, please refer to the online documentation: [How to Update Blueprint](https://github.com/Blackymas/NSPanel_HA_Blueprint/blob/main/docs/howto.md#update-blueprint).*
                            continue_on_error: true
                      - alias: ESPHome is older
                        conditions:
                          - '{{ oldest[1] != newest[1] }}'
                          - '{{ oldest[0] == "esphome" }}'
                        sequence:
                          - service: persistent_notification.create
                            data:
                              notification_id: 'NSPanel_HA_Blueprint_version_mismatch_{{ nspanel_name }}'
                              title: NSPanel ESPHome Needs Update
                              message: >
                                Your NSPanel ESPHome version is outdated for the panel **{{
                                  device_attr(nspanel_deviceid, "name") ~ ((" (" ~ nspanel_name ~ ")") if nspanel_name != device_attr(nspanel_deviceid, "name") else "") }}**.

                                - Current ESPHome version: {{ nspanel_event.esphome if nspanel_event.esphome is string and nspanel_event.esphome | length > 0 else oldest[1] }}

                                - Expected version: {{ blueprint_version if newest[0] == "blueprint" else nspanel_event.tft }}

                                **How to Resolve This Issue**

                                1. Go to your ESPHome Dashboard.

                                2. Locate the panel named {{ device_attr(nspanel_deviceid, "name") ~ ((" (" ~ nspanel_name ~ ")") if nspanel_name != device_attr(nspanel_deviceid, "name") else "") }}.

                                3. Click on the corresponding 3-dot menu.

                                4. Choose "**Clean Build Files**".

                                5. In the pop-up dialog, wait for the cleaning to finish, then click "**Install**".

                                6. Select "**Wirelessly**".


                                *For more detailed instructions, please refer to the online documentation: [How to Update ESPHome](https://github.com/Blackymas/NSPanel_HA_Blueprint/blob/main/docs/howto.md#update-esphome).*
                            continue_on_error: true
                      - alias: TFT is older
                        conditions:
                          - '{{ oldest[1] != newest[1] }}'
                          - '{{ oldest[0] == "tft" }}'
                        sequence:
                          - service: persistent_notification.create
                            data:
                              notification_id: 'NSPanel_HA_Blueprint_version_mismatch_{{ nspanel_name }}'
                              title: NSPanel TFT Display Needs Update
                              message: >
                                The TFT version on your NSPanel is outdated for the panel **{{
                                  device_attr(nspanel_deviceid, "name") ~ ((" (" ~ nspanel_name ~ ")") if nspanel_name != device_attr(nspanel_deviceid, "name") else "") }}**.

                                - Current TFT version: {{ nspanel_event.tft if nspanel_event.tft is string and nspanel_event.tft | length > 0 else oldest[1] }}

                                - Expected version: {{ blueprint_version if newest[0] == "blueprint" else nspanel_event.esphome }}

                                **How to Resolve This Issue**

                                1. Navigate to the [device page](/config/devices/device/{{ nspanel_deviceid }}).

                                2. In the "**Configuration**" section, find the option labeled "**Update TFT Display - Model**".

                                3. Click "**Update TFT Display**" to initiate the update process.

                                4. Please wait patiently until your panel restarts, indicating the update is complete.


                                *For more detailed instructions, please refer to the online documentation: [How to Update TFT](https://github.com/Blackymas/NSPanel_HA_Blueprint/blob/main/docs/howto.md#update-tft).*
                            continue_on_error: true
                      - alias: Blueprint not detected
                        conditions:
                          - '{{ oldest[1] == newest[1] }}'
                          - '{{ nspanel_event.blueprint != blueprint_version }}'
                        sequence:
                          - service: persistent_notification.create
                            data:
                              notification_id: 'NSPanel_HA_Blueprint_version_mismatch_{{ nspanel_name }}'
                              title: NSPanel Blueprint Communication Issue
                              message: >
                                The ESPHome is unable to verify the Blueprint version for the NSPanel.

                                - Panel Details: **{{ device_attr(nspanel_deviceid, "name") ~ (" (" ~ nspanel_name ~ ")") if nspanel_name != device_attr(nspanel_deviceid, "name") }}**

                                - Installed Blueprint Version: {{ blueprint_version }}


                                Troubleshooting steps and more information are available in the online documentation: [Panel startup issues - Blueprint is not detected](https://github.com/Blackymas/NSPanel_HA_Blueprint/blob/main/docs/error_initializing.md#blueprint-is-not-detected).
                            continue_on_error: true
                      # yamllint enable rule:line-length

              ##### Notification changed #####
              - alias: Notification changed
                conditions:
                  - '{{ nspanel_event.type == "notification_changed"}}'
                sequence:
                  - *refresh_page_home_notification_button

              ##### Other events #####
              - alias: Other events
                conditions:
                  - '{{ nspanel_event.type == "generic"}}'
                sequence:
                  - choose:
                      - alias: light settings  # rgb_color, brightness, color_temp - This was kept until we find a solution to call with rgb_color directly from ESPHome
                        conditions:
                          - '{{ nspanel_event.page == pages.light }}'
                          - '{{ nspanel_event.component in ["rgb_color", "brightness_pct", "color_temp"] }}'
                          - '{{ nspanel_event.entity is defined and nspanel_event.entity is string and nspanel_event.entity | length > 0 }}'
                        sequence:
                          - service: light.turn_on
                            data:
                              entity_id: '{{ nspanel_event.entity }}'
                              '{{ nspanel_event.component }}': '{{ nspanel_event.value }}'
                            continue_on_error: true

                      - alias: Jump to climate page
                        conditions:
                          - '{{ nspanel_event.page == pages.home }} '
                          - '{{ nspanel_event.component == "climate" }}'
                          - '{{ nspanel_event.value == "release" }}'
                          - '{{ climate | length > 0 }} '
                        sequence:
                          - variables:
                              entity_id: '{{ climate }}'
                              back_page: '{{ pages.home }}'
                          - *variable_entity
                          - *entity_details_show

      ##### BOOT NSPANEL - automation reload #####
      - alias: Automation reloaded
        conditions:
          - condition: trigger
            id:
              - automation_reloaded
              - ha_started
        sequence:
          - variables:
              nextion_inited: 'binary_sensor.{{ nspanel_name }}_nextion_display'
          - delay: >  # Prevents all panels updating simultaneously in large systems
              {% set entities_list = states.binary_sensor | selectattr("entity_id", "search", "nextion_display") | map(attribute="entity_id") | list %}
              {{ (4 * entities_list.index(nextion_inited)) if (entities_list | count > 0 and nextion_inited in entities_list) else 0 }}
          - if: '{{ states.sensor | selectattr("entity_id", "eq", currentpage) | list | count > 0 }}'
            then:
              - service: persistent_notification.dismiss
                data:
                  notification_id: 'NSPanel_HA_Blueprint_current_page_missing_{{ nspanel_name }}'
                continue_on_error: true
            else:
              - service: persistent_notification.create
                data:
                  notification_id: 'NSPanel_HA_Blueprint_current_page_missing_{{ nspanel_name }}'
                  title: NSPanel sensor unavailable
                  message: >
                    The sensor "Current Page" (`{{ currentpage }}`) is unavailable.

                    - Panel: {{ device_attr(nspanel_deviceid, "name") ~ (" (" ~ nspanel_name ~ ")") if nspanel_name != device_attr(nspanel_deviceid, "name") }}

                    - Blueprint version: {{ blueprint_version }}

                    - Sensor's expected entity_id: {{ currentpage }}


                    How to fix this:

                      1. Go to the [device page](/config/devices/device/{{ nspanel_deviceid }})

                      2. Find the sensor "Current page" under the "Sensors" area (it might be in the "sensors not shown" group)

                      3. Enable the sensor

                      4. Wait a bit until the sensor starts providing a value (it shouldn't take more than half minute)

                      5. Go to [Developer Tools](/developer-tools/yaml) and click the button "Automations" to reload your automations
                continue_on_error: true

          ##### Update global settings (as user may have changed something) #####
          - *global_settings

          - choose:
              ## PAGE HOME ##
              - conditions: '{{ pages.current == pages.home }}'
                sequence: *refresh_page_home

              ## PAGE BUTTON PAGES 01 - 04 ##
              - conditions: '{{ pages.current in pages.buttonpages }}'
                sequence: *refresh_page_buttonpage

              ## ENTITY PAGES ##
              - conditions: '{{ pages.current in pages.entitypages }}'
                sequence: *refresh_entity_pages

      ##### UPDATE BUTTONS PAGES - button page / light page / cover page  #####
      - alias: 'Buttons entity updated'
        conditions:
          - condition: trigger
            id: trigger_buttonpage_state
          - '{{ trigger.to_state.state not in enum.states.unknown }}'
          - condition: or
            conditions:
              - '{{ pages.current in pages.buttonpages }}'
              - '{{ pages.current in [pages.light, pages.cover, pages.climate, pages.fan, pages.alarm] and trigger.entity_id == states(detailed_entity) }}'
        sequence:
          - choose:
              - alias: Button pages
                conditions:
                  - '{{ pages.current in pages.buttonpages }}'
                sequence:
                  - *variables_page_buttons
                  - repeat:
                      for_each: >
                        {{
                          buttons_pages.buttons
                          | selectattr("page", "defined")
                          | selectattr("page", "eq", pages.current)
                          | selectattr("entity", "defined")
                          | selectattr("entity", "eq", trigger.entity_id)
                          | list
                        }}
                      sequence: *display_button_page_button
              - alias: 'Light settings page'
                conditions:
                  - '{{ pages.current == pages.light }}'
                  - '{{ trigger.entity_id is match "light." }}'
                  - '{{ trigger.entity_id == states(detailed_entity) }}'
                sequence: *refresh_page_light
              - alias: 'Cover settings page'
                conditions:
                  - '{{ pages.current == pages.cover }}'
                  - '{{ trigger.entity_id is match "cover." }}'
                  - '{{ trigger.entity_id == states(detailed_entity) }}'
                sequence: *refresh_page_cover
              - alias: 'Climate page'
                conditions:
                  - '{{ pages.current == pages.climate }}'
                  - '{{ trigger.entity_id is match "climate." }}'
                  - '{{ trigger.entity_id == states(detailed_entity) }}'
                sequence: *refresh_page_climate
              - alias: 'Fan page'
                conditions:
                  - '{{ pages.current == pages.fan }}'
                  - '{{ trigger.entity_id is match "fan." }}'
                  - '{{ trigger.entity_id == states(detailed_entity) }}'
                sequence: *refresh_page_fan
              - alias: 'Media player page'
                conditions:
                  - '{{ pages.current == pages.media_player }}'
                  - '{{ trigger.entity_id is match "media_player." }}'
                  - '{{ trigger.entity_id == states(detailed_entity) }}'
                sequence: *refresh_page_media_player
              - alias: 'Alarm page'
                conditions:
                  - '{{ pages.current == pages.alarm }}'
                  - '{{ trigger.entity_id is match "alarm_control_panel." }}'
                  - '{{ trigger.entity_id == states(detailed_entity) }}'
                sequence: *refresh_page_alarm

      ##### UPDATE ENTITY PAGES #####
      - alias: 'Update entity pages'
        conditions:
          - condition: trigger
            id: trigger_entitypage_state
          - '{{ pages.current in pages.entitypages }}'
        sequence:
          - *variables-entity_pages
          - repeat:
              for_each: >
                {{
                  entities_pages.entities
                  | selectattr("page", "defined")
                  | selectattr("page", "eq", pages.current)
                  | selectattr("entity", "defined")
                  | selectattr("entity", "eq", trigger.entity_id)
                  | list
                }}
              sequence: *update_entity_page_entity

      ##### UPDATE CLIMATE PAGE VALUES #####
      - alias: 'Update climate page values'
        conditions:
          - condition: trigger
            id: trigger_climatepage_value_state
          - '{{ pages.current == pages.climate }}'
        sequence:
          - *variables-climate_page
          - repeat:
              for_each: >
                {{
                  climate_page_entities
                  | selectattr("entity", "defined")
                  | selectattr("entity", "eq", trigger.entity_id)
                  | list
                }}
              sequence: *display_value

      ##### UPDATE CLIMATE PAGE CUSTOM BUTTONS STATE #####
      - alias: Update climate page custom buttons
        conditions:
          - condition: trigger
            id:
              - climate_button08_state
              - climate_button09_state
          - '{{ pages.current == pages.climate }}'
        sequence:
          - *climate-update_custom_buttons

      ##### Sync Climate #####
      - alias: Climate - Sync
        conditions:
          - condition: trigger
            id: climate_state
        sequence:
          - *update-home_page-climate_chip
          - if:
              - '{{ trigger.event.data.new_state.state not in enum.states.unknown }}'
              - '{{ pages.current == pages.climate }}'
              - '{{ trigger.event.data.entity_id == states(detailed_entity) }}'
            then:
              - variables:
                  climate_entity: '{{ trigger.event.data.entity_id }}'
                  hvac_modes: '{{ state_attr(climate_entity, "hvac_modes") }}'
              - *climate-update_slider
              - *climate-update_buttons

      ##### UPDATE UTILITIES PAGES #####
      - alias: 'Update utilities pages'
        conditions:
          - condition: trigger
            id: utilities_page
          - '{{ pages.current == pages.utilities }}'
        sequence:
          - variables:
              list1: '{{ pages_utilities.groups | selectattr("value1", "defined") | selectattr("value1", "eq", trigger.entity_id) | list }}'
              list2: '{{ pages_utilities.groups | selectattr("value2", "defined") | selectattr("value2", "eq", trigger.entity_id) | list }}'
              list3: '{{ pages_utilities.groups | selectattr("line_ref", "defined") | selectattr("line_ref", "eq", trigger.entity_id) | list }}'
              full_list: '{{ list1 + list2 + list3 }}'
              groups: '{{ full_list | map(attribute="name") | unique | list }}'
          - repeat:
              for_each: '{{ pages_utilities.groups | selectattr("name", "in", groups) | list }}'
              sequence: *refresh_page_utilities_group

      ########## TRIGGER - HOME PAGE ###########

      ##### HOME PAGE - Custom buttons #####
      - alias: Home page - Custom buttons
        conditions:
          - condition: trigger
            id:
              - home_custom_buttons
        sequence:
          - variables:
              trigger_entity_id: '{{ trigger.entity_id if trigger.entity_id is defined else trigger.event.data.entity_id }}'
          - choose:
              - alias: "Home page"
                conditions:
                  - '{{ pages.current in pages.home }}'
                sequence:
                  - repeat:
                      for_each: '{{ home_page.custom_buttons | selectattr("entity", "defined") | selectattr("entity", "eq", trigger_entity_id) | list }}'
                      sequence: *display_home_page_custom_buttons
              - alias: 'Light settings page'
                conditions:
                  - '{{ pages.current == pages.light }}'
                  - '{{ trigger_entity_id is match "light." }}'
                  - '{{ trigger_entity_id == states(detailed_entity) }}'
                sequence: *refresh_page_light
              - alias: 'Cover settings page'
                conditions:
                  - '{{ pages.current == pages.cover }}'
                  - '{{ trigger_entity_id is match "cover." }}'
                  - '{{ trigger_entity_id == states(detailed_entity) }}'
                sequence: *refresh_page_cover
              - alias: 'Climate page'
                conditions:
                  - '{{ pages.current == pages.climate }}'
                  - '{{ trigger_entity_id is match "climate." }}'
                  - '{{ trigger_entity_id == states(detailed_entity) }}'
                sequence: *refresh_page_climate
              - alias: 'Fan page'
                conditions:
                  - '{{ pages.current == pages.fan }}'
                  - '{{ trigger_entity_id is match "fan." }}'
                  - '{{ trigger_entity_id == states(detailed_entity) }}'
                sequence: *refresh_page_fan
              - alias: 'Media player page'
                conditions:
                  - '{{ pages.current == pages.media_player }}'
                  - '{{ trigger_entity_id is match "media_player." }}'
                  - '{{ trigger_entity_id == states(detailed_entity) }}'
                sequence: *refresh_page_media_player
              - alias: 'Alarm page'
                conditions:
                  - '{{ pages.current == pages.alarm }}'
                  - '{{ trigger_entity_id is match "alarm_control_panel." }}'
                  - '{{ trigger_entity_id == states(detailed_entity) }}'
                sequence: *refresh_page_alarm

      ##### Home page - Entity States #####
      - alias: Home page - Entity States
        conditions:
          - condition: trigger
            id: home_values_state
        sequence:
          - repeat:
              for_each: '{{ home_page.entity_value | selectattr("entity", "defined") | selectattr("entity", "eq", trigger.entity_id) | list }}'
              sequence:
                - *display_value

      ##### HOME PAGE - Status bar #####
      - alias: Home page - status bar
        conditions:
          - condition: trigger
            id: trigger_chip_state
        sequence:
          - repeat:
              for_each: >
                {{
                  home_page.chips
                  | selectattr("entity", "defined")
                  | selectattr("entity", "eq", trigger.event.data.entity_id)
                  | list
                }}
              sequence:
                - *display_home_page_status_bar

      ##### HW BUTTON - state #####
      - alias: Hardware button - State
        conditions:
          - condition: trigger
            id:
              - left_button_state
              - left_button_alt_state
              - right_button_state
              - right_button_alt_state
        sequence:
          - *variables_hardware
          - variables:
              button_name: '{{ "left" if trigger.id in ["left_button_state", "left_button_alt_state"] else "right" }}'
              button_state: &button_state_var >
                {{
                  (
                    states(hardware.buttons[button_name].state_entity) | default("unavailable")
                    if hardware.buttons[button_name].state_entity_is_valid
                    else
                      (
                        states(hardware.buttons[button_name].entity) | default("unavailable")
                        if hardware.buttons[button_name].entity_is_valid
                        else "unavailable"
                      )
                  ) in enum.states.on
                }}
          - *delay_default
          - service: 'esphome.{{ nspanel_name }}_hw_button_state'
            data:
              button_mask: '{{ 1 if trigger.id in ["left_button_state", "left_button_alt_state"] else 2 }}'
              state: '{{ button_state }}'
            continue_on_error: true
          - delay:
              milliseconds: 250
          - variables:
              button_state_new: *button_state_var
          - if: '{{ button_state_new != button_state }}'
            then:
              - *delay_default
              - service: 'esphome.{{ nspanel_name }}_hw_button_state'
                data:
                  button_mask: '{{ 1 if trigger.id in ["left_button_state", "left_button_alt_state"] else 2 }}'
                  state: '{{ button_state_new }}'
                continue_on_error: true

      ##### OUTDOOR TEMP - entity #####
      - alias: Outdoor temp - Entity
        conditions:
          - condition: trigger
            id: outdoortemp_state
          - '{{ is_number(trigger.event.data.new_state.state) }}'
        sequence:
          - *refresh-page_home-outdoor_temp

      ##### INDOOR TEMP #####
      - alias: Indoor temp - Entity
        conditions:
          - condition: trigger
            id:
              - indoortemp_state
          - '{{ is_number(trigger.event.data.new_state.state) }}'
        sequence:
          - *refresh_page_home_indoor_temp

      ##### WEATHER STATE - change update #####
      - alias: Weather - State changed
        conditions:
          - '{{ pages.current == pages.home }}'
          - >
            {{
              (trigger.id == "weather_state_change" and trigger.event.data.new_state.state not in enum.states.unknown) or
              (trigger.id == "sun_state_change" and trigger.to_state.state not in enum.states.unknown)
            }}
        sequence:
          - *refresh-page_home-outdoor_temp
          - *refresh-page_home-weather_pic

      #### TFT Upload Automation #####
      - alias: TFT auto-upload
        conditions:
          - condition: trigger
            id: tft_upload
        sequence:
          - delay:
              seconds: 2
          - service: 'esphome.{{ nspanel_name }}_upload_tft'
            data:
              url: "default"
            continue_on_error: true

      #### TFT Wake-up Automation #####
      - alias: Wake-up
        conditions:
          - condition: trigger
            id: wake_up_sensors
        sequence:
          - *delay_default
          - service: 'esphome.{{ nspanel_name }}_wake_up'
            data:
              reset_timer: true
            continue_on_error: true
...
