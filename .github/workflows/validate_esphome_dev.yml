---
name: Validate and Build ESPHome (Dev)

# yamllint disable-line rule:truthy
on:
  push:
    paths:
      - "nspanel_esphome*.yaml"
      - "esphome/nspanel_esphome*.yaml"
      - "prebuilt/nspanel_esphome*.yaml"
      - "prebuilt/wall_display*.yaml"
      - ".test/*.yaml"
      - "*.h"
      - "*.c"
      - "*.cpp"
      - "*.py"
  pull_request:
    paths:
      - "nspanel_esphome*.yaml"
      - "esphome/nspanel_esphome*.yaml"
      - "prebuilt/nspanel_esphome*.yaml"
      - "prebuilt/wall_display*.yaml"
      - ".test/*.yaml"
      - "*.h"
      - "*.c"
      - "*.cpp"
      - "*.py"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  setup_dependencies:
    name: Setup & Cache Dependencies
    runs-on: ubuntu-latest
    outputs:
      cache-hit-idf-v4: ${{ steps.cache-idf-v4.outputs.cache-hit }}
      cache-hit-arduino: ${{ steps.cache-arduino.outputs.cache-hit }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Cache ESP-IDF v4 Dependencies
        id: cache-idf-v4
        uses: actions/cache@main
        with:
          path: |
            ~/.esphome/cache
            ~/.platformio/packages
            ~/.platformio/platforms
          key: ${{ runner.os }}-esp-idf-v4-${{ hashFiles('**/esphome_idf_basic.yaml') }}
          restore-keys: |
            ${{ runner.os }}-esp-idf-v4-

      - name: Cache Arduino Dependencies
        id: cache-arduino
        uses: actions/cache@main
        with:
          path: |
            ~/.esphome/cache
            ~/.platformio/packages
            ~/.platformio/platforms
          key: ${{ runner.os }}-arduino-${{ hashFiles('**/esphome_ard_basic.yaml') }}
          restore-keys: |
            ${{ runner.os }}-arduino-

  code_scan:
    name: Code scan (YAML)
    runs-on: "ubuntu-latest"
    needs: setup_dependencies
    steps:
      - name: Checkout Code
        uses: actions/checkout@main

      - name: Setup Python
        uses: actions/setup-python@main
        with:
          python-version: '3.8'

      - name: Install Yamllint
        run: pip install yamllint

      - name: Validate YAML files
        run: find . -name "*.yaml" -exec yamllint -c ./.rules/yamllint.yml {} +

  build_cores:
    name: Core
    needs: [code_scan, setup_dependencies]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - id: idf
            yaml_file: ".test/esphome_idf_basic.yaml"
            cache-hit: ${{ needs.setup_dependencies.outputs.cache-hit-idf-v4 }}
          - id: ard
            yaml_file: ".test/esphome_ard_basic.yaml"
            cache-hit: ${{ needs.setup_dependencies.outputs.cache-hit-arduino }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Build Firmware
        if: matrix.cache-hit != 'true'
        uses: esphome/build-action@main
        with:
          yaml-file: ${{ matrix.yaml_file }}
          version: dev

  build_advanced:
    name: Advanced
    needs: build_cores
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - id: idf
            base: idf
            yaml-file: ".test/esphome_idf_advanced.yaml"
          - id: ard
            base: ard
            yaml-file: ".test/esphome_ard_advanced.yaml"

    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Build Advanced Firmware
        uses: esphome/build-action@main
        with:
          yaml-file: ${{ matrix.yaml-file }}
          version: dev

  build_ble_tracker:
    name: BLE Tracker
    needs: build_cores
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - id: idf
            base: idf
            yaml-file: ".test/esphome_idf_ble_tracker.yaml"

    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Build BLE Tracker Firmware
        uses: esphome/build-action@main
        with:
          yaml-file: ${{ matrix.yaml-file }}
          version: dev

  build_bluetooth_proxy:
    name: Bluetooth Proxy
    needs: build_cores
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - id: idf
            base: idf
            yaml-file: ".test/esphome_idf_bluetooth_proxy.yaml"

    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Build Bluetooth Proxy Firmware
        uses: esphome/build-action@main
        with:
          yaml-file: ${{ matrix.yaml-file }}
          version: dev

  build_climate_cool:
    name: Climate Cool
    needs: build_cores
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - id: idf
            base: idf
            yaml-file: ".test/esphome_idf_climate_cool.yaml"
          - id: ard
            base: ard
            yaml-file: ".test/esphome_ard_climate_cool.yaml"

    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Build Climate Cool Firmware
        uses: esphome/build-action@main
        with:
          yaml-file: ${{ matrix.yaml-file }}
          version: dev

  build_climate_heat:
    name: Climate Heat
    needs: build_cores
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - id: idf
            base: idf
            yaml-file: ".test/esphome_idf_climate_heat.yaml"
          - id: ard
            base: ard
            yaml-file: ".test/esphome_ard_climate_heat.yaml"

    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Build Climate Heat Firmware
        uses: esphome/build-action@main
        with:
          yaml-file: ${{ matrix.yaml-file }}
          version: dev

  build_climate_dual:
    name: Climate Dual
    needs: build_cores
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - id: idf
            base: idf
            yaml-file: ".test/esphome_idf_climate_dual.yaml"
          - id: ard
            base: ard
            yaml-file: ".test/esphome_ard_climate_dual.yaml"

    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Build Climate Dual Firmware
        uses: esphome/build-action@main
        with:
          yaml-file: ${{ matrix.yaml-file }}
          version: dev

  build_customizations:
    name: Customizations
    needs:
      - build_advanced
      - build_climate_heat
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - id: idf
            base: idf
            yaml-file: ".test/esphome_idf_advanced_climate_heat_customizations.yaml"
          - id: ard
            base: ard
            yaml-file: ".test/esphome_ard_advanced_climate_heat_customizations.yaml"

    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Build Customizations Firmware
        uses: esphome/build-action@main
        with:
          yaml-file: ${{ matrix.yaml-file }}
          version: dev

  build_climate_ble_proxy:
    name: Climate Cool + Bluetooth Proxy
    needs:
      - build_climate_cool
      - build_bluetooth_proxy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - id: idf
            base: idf
            yaml-file: ".test/esphome_idf_climate_cool_bluetooth_proxy.yaml"

    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Build Customizations Firmware
        uses: esphome/build-action@main
        with:
          yaml-file: ${{ matrix.yaml-file }}
          version: dev

  build_cover:
    name: Cover
    needs:
      - build_cores
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - id: idf
            base: idf
            yaml-file: ".test/esphome_idf_cover.yaml"
          - id: ard
            base: ard
            yaml-file: ".test/esphome_ard_cover.yaml"

    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Build Cover Firmware
        uses: esphome/build-action@main
        with:
          yaml-file: ${{ matrix.yaml-file }}
          version: dev
...
